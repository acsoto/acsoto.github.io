{"componentChunkName":"component---src-templates-blog-post-js","path":"/projects/Memo文档/","result":{"data":{"site":{"siteMetadata":{"title":"SOTO"}},"markdownRemark":{"id":"bac8ffe5-9447-59b3-ae69-66433440793c","tableOfContents":"<ul>\n<li><a href=\"#%E5%9B%BE%E7%89%87\">图片</a></li>\n<li><a href=\"#%E7%AE%80%E4%BB%8B\">简介</a></li>\n<li><a href=\"#%E5%8A%9F%E8%83%BD\">功能</a></li>\n<li><a href=\"#%E6%9E%B6%E6%9E%84%E4%BB%A5%E5%8F%8A%E5%AE%9E%E7%8E%B0\">架构以及实现</a></li>\n</ul>","excerpt":"Memo 用于随时记录，记录生活中的某一刻，记录今天的心情，或是记录看过的一部电影，一本书，留下自己此时的感想，并在自己最爱的电影或书籍的二刷三刷后再次记录下时间和新的想法... 灵感来源于豆瓣，比起豆瓣的功能多出的个人需求为：需要一个简洁没有过量冗余信息的片单和书单记录软件，…","html":"<p>Memo 用于随时记录，记录生活中的某一刻，记录今天的心情，或是记录看过的一部电影，一本书，留下自己此时的感想，并在自己最爱的电影或书籍的二刷三刷后再次记录下时间和新的想法...</p>\n<p>灵感来源于豆瓣，比起豆瓣的功能多出的个人需求为：需要一个简洁没有过量冗余信息的片单和书单记录软件，记录二刷，三刷的时间，以及想要随时记录每一天，并且在几年后回顾那年今日，留一些感动与感慨，让每一天都值得被纪念，故开发此软件。</p>\n<h2 id=\"图片\" style=\"position:relative;\"><a href=\"#%E5%9B%BE%E7%89%87\" aria-label=\"图片 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>图片</h2>\n<p><img src=\"https://pic.mcac.cc/soto-pictures/2021-12/OMRjEl.png\" alt=\"\"></p>\n<p>（介绍及短评摘自豆瓣，侵删）</p>\n<p><img src=\"https://pic.mcac.cc/soto-pictures/2021-12/4qk5Hd.jpg\" alt=\"iPad适配\"></p>\n<p>Mac, iPad 适配</p>\n<h2 id=\"简介\" style=\"position:relative;\"><a href=\"#%E7%AE%80%E4%BB%8B\" aria-label=\"简介 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>简介</h2>\n<p>主页面</p>\n<p>主界面分为 3 个标签：主页，电影，书籍</p>\n<p>主页</p>\n<p><img src=\"https://pic.mcac.cc/soto-pictures/2021-12/nU8yrj.jpg\" alt=\"观\"></p>\n<p><img src=\"https://pic.mcac.cc/soto-pictures/2021-12/4mxT4Y.jpg\" alt=\"记\"></p>\n<p>电影</p>\n<p>这里是你看过的电影片单，你可以随时看到你标记过的所有电影，以及在任何时候添加一个新的电影进入你的片单</p>\n<p>进入某条电影，如果你输入的电影在数据库之中（数据来自豆瓣，侵删），你就可以看到关于电影的介绍：演员，导演，豆瓣评分，类别，介绍等，以及最重要的，在最下方，看到你第一次观看的时间以及感想</p>\n<p>当然，点击此方框，你可以进入到第二次标记的页面，记录下你的第二次观影以及新的感想</p>\n<p><img src=\"https://pic.mcac.cc/soto-pictures/2021-12/somvRM.jpg\" alt=\"电影列表\"></p>\n<p>书籍</p>\n<p>类似电影，这里是你的书单，你可以添加你看过的书籍，并且记录第 n 次阅读的体验，相信每一次阅读，都会发现不少新东西</p>\n<p><img src=\"https://pic.mcac.cc/soto-pictures/2021-12/v7ziTD.jpg\" alt=\"书\"></p>\n<h2 id=\"功能\" style=\"position:relative;\"><a href=\"#%E5%8A%9F%E8%83%BD\" aria-label=\"功能 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>功能</h2>\n<ul>\n<li>标记某一天的感受</li>\n<li>标记某本电影，某本书</li>\n<li>多次标记某电影和书的观看时间和感受</li>\n<li>自动展示电影和书籍的相关图片与简介</li>\n<li>图文并茂的主页卡片展示设计</li>\n<li>在主页展示进一个月看过的电影</li>\n<li>在主页展示今天以及那年今日的感想</li>\n</ul>\n<h2 id=\"架构以及实现\" style=\"position:relative;\"><a href=\"#%E6%9E%B6%E6%9E%84%E4%BB%A5%E5%8F%8A%E5%AE%9E%E7%8E%B0\" aria-label=\"架构以及实现 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>架构以及实现</h2>\n<p>源代码文件共 25 个</p>\n<p>主要分为三个部分：Controller Model Views</p>\n<p><img src=\"https://pic.mcac.cc/soto-pictures/2021-12/1Iyk57.jpg\" alt=\"源文件树\"></p>\n<p>Controller</p>\n<p>一些静态函数，实现点击界面按钮后的某些后端反应以及后端用到的函数，如图像获取，日期格式化，Mark 筛选等</p>\n<p>其中图片的读取使用了异步加载 url 的方式，如果 url 没有解析成功将不会显示图片</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ImageLoader</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">ObservableObject</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> didChange <span class=\"token operator\">=</span> <span class=\"token class-name\">PassthroughSubject</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Never</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> <span class=\"token class-name\">Data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">didSet</span> <span class=\"token punctuation\">{</span>\n            didChange<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>urlString<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">guard</span> <span class=\"token keyword\">let</span> url <span class=\"token operator\">=</span> <span class=\"token function\">URL</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">:</span> urlString<span class=\"token punctuation\">)</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">let</span> task <span class=\"token operator\">=</span> <span class=\"token class-name\">URLSession</span><span class=\"token punctuation\">.</span>shared<span class=\"token punctuation\">.</span><span class=\"token function\">dataTask</span><span class=\"token punctuation\">(</span>with<span class=\"token punctuation\">:</span> url<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n            <span class=\"token keyword\">guard</span> <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> data <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token class-name\">DispatchQueue</span><span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        task<span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Model</p>\n<p>主要用到的对象为 Mark：</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Mark</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Codable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Identifiable</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> index<span class=\"token punctuation\">:</span><span class=\"token class-name\">Int</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">var</span> type<span class=\"token punctuation\">:</span><span class=\"token class-name\">ModelType</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">ModelType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NONE</span>\n    <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"\"</span></span>\n    <span class=\"token keyword\">var</span> dates<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">Date</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">var</span> feeling <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"\"</span></span>\n\n    <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span>type<span class=\"token punctuation\">:</span><span class=\"token class-name\">ModelType</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">:</span><span class=\"token class-name\">Date</span><span class=\"token punctuation\">,</span> feeling<span class=\"token punctuation\">:</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>index <span class=\"token operator\">=</span> index\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> type\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>dates<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>feeling <span class=\"token operator\">=</span> feeling\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Movie, Book 为电影和书籍的简介，不进行重复的展示</p>\n<p>他们遵循 MarkableObject 协议，用于在展示 Mark 详情时读取 object 后再作类型判断</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Movie</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Hashable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Codable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Identifiable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MarkableObject</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> id<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"\"</span></span>\n\t\t<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ModelData 负责数据存储的任务</p>\n<p>用到了自带的 UserDefaults.standard 存储数据</p>\n<p>movies 和 books 分别为电影和书籍数据集，内置在 app 中</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ModelData</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">ObservableObject</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> moviesDict <span class=\"token operator\">=</span> <span class=\"token function\">getMoviesDict</span><span class=\"token punctuation\">(</span>movies<span class=\"token punctuation\">:</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"movies.json\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> booksDict <span class=\"token operator\">=</span> <span class=\"token function\">getBooksDict</span><span class=\"token punctuation\">(</span>books<span class=\"token punctuation\">:</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"books.json\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token attribute atrule\">@Published</span> <span class=\"token keyword\">var</span> marks<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">Mark</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">loadMarks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">loadMarks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        marks <span class=\"token operator\">=</span> <span class=\"token class-name\">UserDefaults</span><span class=\"token punctuation\">.</span>standard<span class=\"token punctuation\">.</span><span class=\"token function\">object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">Mark</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> with<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Marks\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">saveMarks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> standard <span class=\"token operator\">=</span> <span class=\"token class-name\">UserDefaults</span><span class=\"token punctuation\">.</span>standard\n        standard<span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">:</span> marks<span class=\"token punctuation\">,</span> forKey<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Marks\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ModelType 为枚举类型，用于 Mark 类型判断</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">enum</span> <span class=\"token class-name\">ModelType</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Codable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">NONE</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"无\"</span></span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">MOVIE</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"电影\"</span></span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">BOOK</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"书籍\"</span></span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">DAY</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"今天\"</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Views</p>\n<p>界面 UI</p>\n<p>用到了 environmentObject 来同步各个界面的数据</p>\n<p>父界面给子界面传递@Binding 的变量，子界面拿到引用直接演示和修改，不会出现数据不同步的问题</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token attribute atrule\">@main</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">MemoApp</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attribute atrule\">@StateObject</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> modelData <span class=\"token operator\">=</span> <span class=\"token class-name\">ModelData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> body<span class=\"token punctuation\">:</span> <span class=\"token keyword\">some</span> <span class=\"token class-name\">Scene</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">WindowGroup</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">ContentView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">environmentObject</span><span class=\"token punctuation\">(</span>modelData<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>MainMenu</p>\n<p>MarkList: Mark 列表，即展示电影和书籍列表</p>\n<p>使用 NavigationLink，向子界面：MarkDetail 传递 mark 的引用</p>\n<p><img src=\"https://pic.mcac.cc/soto-pictures/2021-12/1qxgoz.png\" alt=\"\"></p>\n<p>HomeView: 主界面</p>\n<p>Mark</p>\n<p>关于 Mark 的界面</p>\n<p>MarkDetail: 一个 Mark 的详情</p>\n<p>大部分子界面都如此 UI 一样，引入 modelData 的环境变量，承接上一级传下来的@Binding 变量，实现数据的同步</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token attribute atrule\">@EnvironmentObject</span> <span class=\"token keyword\">var</span> modelData<span class=\"token punctuation\">:</span> <span class=\"token class-name\">ModelData</span>\n<span class=\"token attribute atrule\">@Binding</span> <span class=\"token keyword\">var</span> mark<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Mark</span></code></pre></div>\n<p>其中要进行 object 的解析，如果用户输入能索引本地数据集的一个条目上，将会展示此 object 的详情</p>\n<p><img src=\"https://pic.mcac.cc/soto-pictures/2021-12/oEbVAd.png\" alt=\"\"></p>\n<p>MarkAdd: Mark 增加界面</p>\n<p>MarkEdit: Mark 修改界面</p>\n<p>MarkToday: 标记今天界面</p>\n<p>这三个 UI 都用到了@State 来实时同步 Form 表单中的信息</p>\n<p>以至于用户输入能够及时的反应在变量上并且写入 modelData</p>\n<p><img src=\"https://pic.mcac.cc/soto-pictures/2021-12/Lp7xQ3.png\" alt=\"\"></p>\n<p>Kit</p>\n<p>其他组件</p>\n<p><img src=\"https://pic.mcac.cc/soto-pictures/2021-12/5YOzFK.png\" alt=\"其他组件\"></p>\n<p>电影和书籍详情，时间线，圆形和方形图片，卡片组件等</p>\n<p>均已展示在各个页面中</p>","frontmatter":{"title":"Memo文档","date":"2021-10-28","image":"https://pic.mcac.cc/202212310108055.png","tags":["Project"]}}},"pageContext":{"id":"bac8ffe5-9447-59b3-ae69-66433440793c"}},"staticQueryHashes":["3000541721"],"slicesMap":{}}