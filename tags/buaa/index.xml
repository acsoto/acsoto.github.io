<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BUAA on SOTO-BLOG</title>
    <link>http://atksoto.com/tags/buaa/</link>
    <description>Recent content in BUAA on SOTO-BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 06 Dec 2021 15:01:00 +0800</lastBuildDate><atom:link href="http://atksoto.com/tags/buaa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>西方音乐史-作业</title>
      <link>http://atksoto.com/p/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E5%8F%B2-%E4%BD%9C%E4%B8%9A/</link>
      <pubDate>Mon, 06 Dec 2021 15:01:00 +0800</pubDate>
      
      <guid>http://atksoto.com/p/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E5%8F%B2-%E4%BD%9C%E4%B8%9A/</guid>
      <description>第一次作业—巴洛克时期的音乐  巴洛克时期的旋律有什么特点？ 旋律具大量装饰音 速度不变 在一个调性上表达情感   巴洛克时期的节奏、节拍有什么独特之处？ 规律
  巴洛克时期的音乐速度有对比吗？ 速度不变
  巴洛克时期的音阶有哪两种？ 大调小调
  你能说出欧洲的大调音阶与和声小调音阶吗？ 大调12345671 小调671234#56
  巴洛克时期的和声有什么特点？ 主调音乐，复调音乐
  什么是通奏低音？什么是数字低音？ 通奏低音（Basso continuo）是巴洛克时期的一种即兴伴奏声部，通奏低音演奏者阅读作曲家以数字低音写成的乐谱，并判断和即兴演奏。一般来说，通奏低音声部由两件乐器演奏，一件是低音乐器，另一件是和声乐器。 巴洛克时期的室内乐作品中羽管键琴总是被用来担任通奏低音
  作曲家什么时期开始在乐谱上标注力度记号了？ 巴洛克
  巴洛克时期的音乐风格特点是什么？ 悠长而富于装饰的旋律线条 大量华丽的装饰音（波光粼粼的装饰音） 速度不变 在一个调性上表达情感 节拍规律
  西方交响乐队唯一的一件中国乐器是哪一件？ 锣
  交响乐队弦乐组：高音乐器、中音乐器、低音乐器分别是哪一件？ [[交响乐队配置]]
  交响乐队木管乐器组：高音乐器、中音乐器、低音乐器分别是哪一件？ [[交响乐队配置]]
  交响乐队铜管乐器组：高音乐器、中音乐器、低音乐器分别是哪一件？ [[交响乐队配置]]
  小型、中型、大型乐队分别是多少人？ [[交响乐队配置]]
  什么是咏叹调？宣叙调？它们在歌剧中的作用？ 歌剧有两种传统的演唱形式：宣叙调（recitativo），不带旋律结构的演唱部分，通常用于交代剧情；咏叹调（aria），通常用于表达角色感情，带旋律结构的唱段。
  复调音乐听旋律的线条，主调听纵向的和声，这句话对吗？ 复调音乐听线条 主调音乐听纵向和声</description>
    </item>
    
    <item>
      <title>西方音乐史-浪漫主义时期</title>
      <link>http://atksoto.com/p/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E5%8F%B2-%E6%B5%AA%E6%BC%AB%E4%B8%BB%E4%B9%89%E6%97%B6%E6%9C%9F/</link>
      <pubDate>Tue, 23 Nov 2021 20:34:50 +0800</pubDate>
      
      <guid>http://atksoto.com/p/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E5%8F%B2-%E6%B5%AA%E6%BC%AB%E4%B8%BB%E4%B9%89%E6%97%B6%E6%9C%9F/</guid>
      <description>浪漫主义时期 （1820-1900）
特点 序幕 舒伯特《魔王》 韦伯 公众音乐会的变化：古典时期的公众音乐会和社交活动是相似的，随意聊天吃喝打拍子，哼唱鼓掌，1840年 古典音乐会 礼仪形成 曲目确定 1800以前 音乐几乎是一次性的为某一时刻而创作，贝多芬以后一代人将前辈作品视作经典反复演奏 乐器音色更加丰富——工业革命的进步。例如长笛（木制-&amp;gt;金属+指动机械装置）圆号（加调音赛） 交响乐队更加庞大，新乐器加入。例如马勒119 柏辽兹《幻想》89 产生了专职指挥。1820年，作曲家路易·施波尔成为用木质指挥棒指挥乐队的第一人。浪漫早期，指挥家由一个打拍子的人变成一个乐谱解释者，现代指挥家出现。 产生了演奏大师。独奏大师的时代，为了迎合观众。意大利帕格尼尼，匈牙利李斯特钢琴之王。 作品宏大复杂。马二，一个半小时。 音乐内容：
 爱情 大自然《田园》《山调序曲》 神治 《魔弹射手》《尼伯龙根的指环》 自传性质 《幻想交响曲》  音乐结构自由 标题音乐和非标题音乐并存 旋律悠长（多用半音 具不确定性） 和声 建立半音和声，不和谐和弦 自由速度 tempo rubato 力度强烈 极致的强与弱 调式调性 转调离调变化频繁
早期浪漫主义 艺术歌曲 主要采用诗人诗作
钢琴：伴奏烘托
歌唱：意大利美声
例：《魔王》——歌德叙事诗
舒伯特 艺术歌曲（600多首）、交响曲……
作品比前人更具有抒情性，充满歌唱感
艺术歌曲《鳟鱼》 交响曲 《第八未完成交响曲》
罗伯特 舒曼 19世纪德国作曲家、音乐评论家
《蝴蝶》《狂欢节》《童年情景》
钢琴《A小调钢琴协奏曲》OP 54
《桃金娘》（单三部曲式 ABA）献给爱妻克拉拉（著名钢琴家）
标题音乐 分类：
 音乐会序曲 标题交响曲 交响诗  音乐会序曲 门德尔松（学院派作曲家，风格多奏鸣曲快板，甜美轻盈）首创
门德尔松《仲夏夜之梦》序曲（第一部音乐会序曲）</description>
    </item>
    
    <item>
      <title>Alxa_Compiler 编译器</title>
      <link>http://atksoto.com/p/alxa_compiler-%E7%BC%96%E8%AF%91%E5%99%A8/</link>
      <pubDate>Tue, 16 Nov 2021 16:29:00 +0800</pubDate>
      
      <guid>http://atksoto.com/p/alxa_compiler-%E7%BC%96%E8%AF%91%E5%99%A8/</guid>
      <description>相关文章：[[编译实验总结感想]]
词法分析 Before Code Requriement: read testfile.txt, parse every char to word and print them. At the same time, memorize type, content and line number of each word.
File reading Read by line, scan every char of every string and analyse.
while ((s = bf.readLine()) != null) { ... } Analyse When i get the key word, enter the next analyst.
while ((c = getChar()) != null) { if (c == &amp;#39; &amp;#39; || c == &amp;#39;\r&amp;#39; || c == &amp;#39;\t&amp;#39;) { continue; } else if (c == &amp;#39;+&amp;#39; || c == &amp;#39;-&amp;#39; || c == &amp;#39;*&amp;#39; || c == &amp;#39;%&amp;#39;) { words.</description>
    </item>
    
    <item>
      <title>西方音乐史-维也纳古典时期</title>
      <link>http://atksoto.com/p/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E5%8F%B2-%E7%BB%B4%E4%B9%9F%E7%BA%B3%E5%8F%A4%E5%85%B8%E6%97%B6%E6%9C%9F/</link>
      <pubDate>Tue, 19 Oct 2021 17:32:00 +0800</pubDate>
      
      <guid>http://atksoto.com/p/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E5%8F%B2-%E7%BB%B4%E4%B9%9F%E7%BA%B3%E5%8F%A4%E5%85%B8%E6%97%B6%E6%9C%9F/</guid>
      <description>维也纳古典时期 古典三杰：海顿，莫扎特，贝多芬
海顿：清唱剧《创世纪》《四季》 莫扎特：四部喜歌剧 《费加罗的婚礼》 《唐璜》《女人心》 《魔笛》 贝多芬：奏鸣曲：c小调悲怆奏鸣曲)》、 《F小调热情奏鸣曲》
交响曲：《第五（命运） 交响曲》、《第九（合唱）交响曲》
小步舞曲 3拍
清唱剧 哈利路亚
维也纳古典主义时期产生了奏鸣曲快板形式
[[西方音乐史-巴洛克时期]] 开始在乐谱标记强弱 维也纳古典主义时期渐强渐弱开始大量出现
贝多芬随想回旋曲《为丢失铜板而愤怒》
弗朗兹.约瑟夫.海顿 （奥地利作曲家）交响乐之父，弦乐四重奏之父
套曲形式：乐章：协奏3 奏鸣4 弦乐四重奏4 交响曲4
意大利喜歌剧 特点：
 序曲：奏明式快板 急口令——喜歌剧独有 引入多部声乐重唱 羽管键琴为宣叙调伴奏  莫扎特 “近代钢琴协奏曲之父” 协奏曲 concerto “轮流说话” 套曲 共三个乐章 双呈示部的形式
乐队呈示部（只有乐队） 独奏呈示部（独奏与乐队） 展开部
三者合一 作曲家 指挥 演奏者 第一乐章 奏鸣曲式快板——双呈示部 华彩乐段
贝多芬 1770-1827 德国 57岁 乐圣 8岁登台 作为管风琴助理写下最初的音乐作品 主要作品：
 6首弦乐四重奏 21首钢琴奏鸣曲  第一阶段 一、二交响曲 三首协奏曲 32首钢琴奏鸣曲——钢琴 “新约全书”
第二阶段 热情时期（1803-1817）</description>
    </item>
    
    <item>
      <title>西方音乐史-巴洛克时期</title>
      <link>http://atksoto.com/p/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E5%8F%B2-%E5%B7%B4%E6%B4%9B%E5%85%8B%E6%97%B6%E6%9C%9F/</link>
      <pubDate>Wed, 29 Sep 2021 08:34:00 +0800</pubDate>
      
      <guid>http://atksoto.com/p/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E5%8F%B2-%E5%B7%B4%E6%B4%9B%E5%85%8B%E6%97%B6%E6%9C%9F/</guid>
      <description>巴洛克时期 特点 悠长而富于装饰的旋律线条 大量华丽的装饰音（波光粼粼的装饰音） 速度不变 在一个调性上表达情感 节拍规律
作品 巴赫 哥德堡变奏曲 维瓦尔第 四季 威尔第歌剧 哥林赛达 咏叹调风雨飘摇 花腔 装饰
调式 和声 调式：大调，小调 和声：附调，主调
大调12345671 和声135,246,357&amp;hellip;三度叠制 小调671234#56
（1600-1750）巴洛克时期和声：通奏低音-数字低音
和声特点：主调音乐｜复调音乐
第一部成熟的歌剧1607年蒙特威尔第《奥菲欧》
巴赫，亨德尔把复调音乐推向顶峰
复调音乐听线条 主调音乐听纵向和声
1650 - 1750 阉人歌手霸占意大利歌剧舞台 亨德尔歌剧《里纳尔多》咏叹调 让我痛哭吧</description>
    </item>
    
    <item>
      <title>西方音乐史-总述</title>
      <link>http://atksoto.com/p/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E5%8F%B2-%E6%80%BB%E8%BF%B0/</link>
      <pubDate>Tue, 28 Sep 2021 19:34:00 +0800</pubDate>
      
      <guid>http://atksoto.com/p/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E5%8F%B2-%E6%80%BB%E8%BF%B0/</guid>
      <description>共晓时期： [[西方音乐史-巴洛克时期]] [[西方音乐史-维也纳古典时期]] [[西方音乐史-浪漫主义时期]]
音乐形式 协奏曲，交响曲，奏鸣曲，组曲，练习曲，交响诗，歌剧等
音乐风格的判断 文化判断音乐风格 帕格尼尼主题变奏曲 愤怒的日子
下葬，死亡的来临，悲剧的结局
节拍 波尔卡：2拍，快速，末尾重音
调式 c小调风景玛祖卡op17.2
曲式结构 回旋曲式：准确的音乐反复
浪漫主义时期 歌剧 三大作曲家
威尔第 阿依达
芭蕾舞剧，柴可夫斯基
​	天鹅湖
​	睡美人
​	胡桃夹子
钢琴诗人：肖邦（波兰）不对称的美，朗诵调，速度
钢琴之王：李斯特（匈牙利）交响思维
《降A大调（爱之梦）》3.op.541
卡门 序曲 比才
舒伯特 室内音乐
印象主义 德彪西 牧神午后前奏曲
结束在 1 大调，6 小调
罗西尼 《威廉退尔》序曲
上行旋律线
下行旋律线
马斯涅《泰伊斯》蜿蜒曲折
《升F大调即兴曲》 肖邦
《乡村骑士》 《教父》间奏曲
巴洛克时期：速度不变
浪漫主义时期：速度和力度变化，自由速度
《流浪者之歌》</description>
    </item>
    
    <item>
      <title>BUAAOO-第四单元总结</title>
      <link>http://atksoto.com/p/buaaoo-%E7%AC%AC%E5%9B%9B%E5%8D%95%E5%85%83%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 26 Jun 2021 11:23:00 +0800</pubDate>
      
      <guid>http://atksoto.com/p/buaaoo-%E7%AC%AC%E5%9B%9B%E5%8D%95%E5%85%83%E6%80%BB%E7%BB%93/</guid>
      <description>BUAAOO-第四单元总结 总结本单元作业的架构设计 本单元任务为设计UML分析器，包括类图，顺序图，状态图
第一次作业 实现类图分析
将UML元素根据其含义分为如下层次结构
部分元素根据需求分装为MyXXX
 
根据逻辑层次，读入过程分为三个循环，分别处理三个层次的元素
   循环轮次 处理元素     1 UmlClass UmlInterface UmlAssociationEnd   2 UmlOperation UmlAttribute UmlAssociation UmlGeneralization UmlInterfaceRealization   3 UmlParameter    第二次作业 实现顺序图，状态图
将UML元素根据其含义分为如下层次结构
部分元素根据需求分装为MyXXX
 
根据逻辑层次，读入过程分为四个循环，分别处理四个层次的元素
   循环轮次 处理元素     1 UmlClass UmlInterface UmlAssociationEnd UmlInteraction UmlStateMachine UmlRegion   2 UmlOperation UmlAttribute UmlAssociation UmlGeneralization UmlInterfaceRealization UmlLifeline UmlState UmlPseudostate UmlFinalState   3 UmlParameter UmlMessage UmlTransition   4 UmlEvent    第三次作业 架构同第二次。</description>
    </item>
    
    <item>
      <title>BUAAOO-第三单元总结</title>
      <link>http://atksoto.com/p/buaaoo-%E7%AC%AC%E4%B8%89%E5%8D%95%E5%85%83%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 29 May 2021 11:54:00 +0800</pubDate>
      
      <guid>http://atksoto.com/p/buaaoo-%E7%AC%AC%E4%B8%89%E5%8D%95%E5%85%83%E6%80%BB%E7%BB%93/</guid>
      <description>BUAAOO-第三单元总结 实现规格所采取的设计策略 在第一次作业中，开始没有经验，采取了直接对规格进行“翻译”的策略，对数据保存直接使用了定长数组，后发现这样操作代码可读性不高且性能较差，于使重新改写为使用HashMap保存。
第二次作业中，虽然使用容器实现了数据存储，但是算法方面由于直接按照规格描述进行实现，导致了大量的CTLE。于使此后，阅读完规格后我能对方法有彻底理解后再根据自己的理解去实现。
再有以上经验后，认为实现规格应采取如下步骤：
 完整阅读规格 选择正确的数据结构，容器 正确处理异常 选择合适的算法实现方法  基于JML规格来设计测试的方法和策略  再次阅读JML规格，检查在方法被实现前，异常是否被正确，处理检查方法是否满足规格的ensure 使用Junit，针对每一个具一定不确定因素的方法编写测试样例进行测试 对程序整体进行大数据集测试  本单元看似简单，但在测试方面我做的并不理想，在三次作业中均出现了非常低级的BUG
第一次：
 
原因是在阅读JML时并未彻底理解其含义，直接按照规格进行书写，导致进行了逻辑完全错误的一个判断
第二次：
 
低估了自己犯低级错误的的概率（当然本次作业主要问题在CTLE上）
第三次：
 
自作聪明在判断异常之前就删除了message，造成了大量WA
三次作业出现的bug基本都是在阅读JML规格时丧失理性造成的，事实证明在阅读JML时候一定要保证独立思考的能力，当然锅也不能全部甩到这里，归根结底还是自己懒得测试且高估了自己写简单代码不出错的能力。
(Junit暴力测试？)
@org.junit.jupiter.api.Test void sendIndirectMessage() throws EqualPersonIdException, PersonIdNotFoundException, EqualRelationException, MessageIdNotFoundException, EmojiIdNotFoundException, EqualMessageIdException, RelationNotFoundException, EqualEmojiIdException { Network network = new MyNetwork(); network.addPerson(new MyPerson(1, &amp;#34;A&amp;#34;, 10)); network.addPerson(new MyPerson(3, &amp;#34;N&amp;#34;, 10)); network.addPerson(new MyPerson(6, &amp;#34;F&amp;#34;, 10)); network.addRelation(1, 3, 10); network.addRelation(3, 6, 15); network.addRelation(1, 6, 26); network.</description>
    </item>
    
    <item>
      <title>C&#43;&#43;基础</title>
      <link>http://atksoto.com/p/c-%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 30 Apr 2021 11:00:00 +0800</pubDate>
      
      <guid>http://atksoto.com/p/c-%E5%9F%BA%E7%A1%80/</guid>
      <description>知识点纲要 
结构
struct Student { int i; int j; char c; } 由于int需要占用4个字节，由于结构的空间分配是大对齐，总共需要12个空间。 当然也可以压缩空间，把它压缩为实际只使用的9个字节。
压缩：
#pragma pack(1) 宏 函数宏
#define ARRAY_SIZE(a) sizeof(a)/sizeof(a[0]) 控制宏
#define HOME //用于控制开关 #ifdef HOME cout &amp;lt;&amp;lt; &amp;#34;link a&amp;#34; &amp;lt;&amp;lt; endl; #elseif cout &amp;lt;&amp;lt; &amp;#34;link b&amp;#34; &amp;lt;&amp;lt; endl; #endif #ifdef WIN32 //windows平台上一定会有的宏 #include &amp;lt;windows.h&amp;gt;#endif 如果把C++程序和C程序混合编译
extern &amp;#34;C&amp;#34; void fun_C(); 这个语句就是用于告诉链接器，这个函数是用C标准编译的，不要按照C++编译器修饰的方式去找。
函数
//1.overloading //2.default parameter //默认参数必须放后 void fun2(int a, int b = 3, int c = 4) { cout &amp;lt;&amp;lt; a &amp;lt;&amp;lt; b &amp;lt;&amp;lt; c &amp;lt;&amp;lt; endl; } //3.</description>
    </item>
    
    <item>
      <title>BUAAOO-第二单元总结</title>
      <link>http://atksoto.com/p/buaaoo-%E7%AC%AC%E4%BA%8C%E5%8D%95%E5%85%83%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 25 Apr 2021 22:33:00 +0800</pubDate>
      
      <guid>http://atksoto.com/p/buaaoo-%E7%AC%AC%E4%BA%8C%E5%8D%95%E5%85%83%E6%80%BB%E7%BB%93/</guid>
      <description>BUAAOO-第二单元总结 作业分析 同步块与锁 InputThread捕捉输入，将其加入waitQueue队列中
Dispatcher负责控制waitQueue，对waitQueue的操作需要经过Dispatcher
Elevator为电梯个体对象，其内包含一个requests用于表示目前位于电梯里的请求
其中，锁全部位于调度器中
例如
public PersonRequest checkTopRequest() { synchronized (waitQueue) { int max = 0; PersonRequest request = null; for (PersonRequest r : waitQueue) { if (r.getFromFloor() &amp;gt; max) { max = r.getFromFloor(); request = r; } } return request; } } 三次作业都为相同的设计，Dispatcher基本没有变动。
调度器设计与线程交互 外部可以放心与调度器进行交互，类似生产者消费者模型，调度器维护waitQueue，输入线程通过调度器向其中加入请求，电梯通过调度器查询和获取请求
 
第二、三次作业中加入了多个电梯与dispatcher交互
电梯策略：
Random：自由竞争，直接去找队列中第一个目标，接到请求后，优先处理电梯中的第一个请求，在运行过程中在每层判断是否可以接送乘客并且进行操作。
Morning：电梯位于1层，开始接人，2s后出发，一直送到电梯内请求列表的最高层后返回，依次循环
Night：直接前往队列中最高层接人，向下过程中继续接人，回到一层后依次循环。
UML 第一次作业 Main创建输入和电梯线程以及调度器，输入线程提供mode，requests，end等，调度器负责控制队列，elevator进行运行。
 
流程图：
 
第二次作业 相比第一次作业，输入线程负责创建新的Elevator
 
流程图</description>
    </item>
    
    <item>
      <title>BUAAOO-第一单元总结</title>
      <link>http://atksoto.com/p/buaaoo-%E7%AC%AC%E4%B8%80%E5%8D%95%E5%85%83%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 28 Mar 2021 19:23:00 +0800</pubDate>
      
      <guid>http://atksoto.com/p/buaaoo-%E7%AC%AC%E4%B8%80%E5%8D%95%E5%85%83%E6%80%BB%E7%BB%93/</guid>
      <description>BUAAOO-第一单元总结 基于度量分析程序结构 第一次作业 对多项式的求导，Expression类表示一个表达式，其成员变量为Term对象的hashmap，Interpreter用于解析输入字符串，返回一个Expression
 
(1) 基于度量分析 类复杂度
 
方法复杂度
 
可以看到Term.toString过于复杂，原因是在幂函数转化为string类型时使用了过多的if，此处可以进行优化。
本次作业没有被其他同学hack。性能方面，由于使用了hashmap，表达式基本上达到了最短，没有考虑到正负号打头和x**2拆分为x*x等细节
本次作业没有很好的给下一次作业做好铺垫，表达式解析方法过于粗暴。
第二次作业 本次作业难度骤升，因为要考虑表达式因子，第一次作业使用的暴力解析字符串方法骤然失效，遂彻底进行重构。我在本次作业中大量时间用于研究如何递归下降读取表达式。求导本身并不困难，创建Factor接口，sin，cos，幂函数，常量，term，poly均继承Factor，保证每个因子都有实现tostring和求导以及simplify方法。其中，Term是一些Factor构成的List，Poly是一些Term构成的List。在对Poly进行求导会自然向下递归。
Patterns存放了提前编译好的正则表达式
Parser用于递归下降解析表达式
 
类复杂度
 
可见Parser中方法复杂度较高，这是因为在解析字符串过程中，我调用了过多的私有方法，此处可以进行模块化优化。
Term中由于simplify和diff的操作过于复杂，整体复杂度较高，此处可以把一些操作在初始化term时完成来优化。
方法复杂度
 
复杂度较高的几个方法
 
其中Term的simplify如前文所述，该方法过于臃肿。
第三次作业 本次作业加入了sin和cos内的嵌套已经wrong format的检测。由于和上一次作业的架构相似，仅需调整sin和cos内成员变量为Poly，并且对parser进行进一步递归下降即可。wrong format成为了难点，由于上一次作业的递归下降读取基于表达式正确的情况，这次由于格式可能的错误，我对parser进行了较大的调整，首先对字符串进行多余空白符和非法字符的判断，随后在递归下降读取过程中判断格式错误，包括括号和幂函数的错误。
结构与第二次作业相似，加入了format checker和WF exception
 
类复杂度
 
方法复杂度
 
其中较高的和第二次作业类似
其中getCosFactor和getSinFactor是由于进行了格式的判断，此处重用了相似的代码，可以归类为一个方法进行优化。
 
分析自己程序的bug 在前两次作业中，互测阶段没有被找到bug，在个人初期写代码过程中，遇到的一些BUG如：没有及时在while循环中continue，在if判断中逻辑过于复杂导致自己搞错了与或非逻辑，往往正是这类小的失误导致耗费大量时间debug，因此在写程序过程中应该时刻关注代码的复杂度。
第三次作业，互测阶段被hack了两次，问题均是出在格式判断正负号和常数之间的空格时，我的判断条件出了问题，误判了一些正确的格式，自己写wrong format时没有考虑到各种情况，测试不够充分。
对比分析出现bug的方法和未出现bug的方法在代码行和圈复杂度上的差异：在我的前两次作业中自己发生的BUG很明显主要是因为圈复杂度导致的，在第三次作业被hack的这个BUG主要是因为Wrong Format欠考虑。
分析自己发现别人程序bug采用策略 主要采取的策略构建一些我在写代码过程中遇到的容易发生bug的数据点来对别人的代码进行测试，使用python进行核对。
重构经历总结 第一次到第二次作业过程中经历了重构，原因是第一次作业没有留下足够的拓展空间，解析字符串过于暴力，但是在第二次作业理解了如何递归下降进行读取解析之后，重构反而显得思路更加清晰，在这个架构下，第三次作业完成的比较容易。由于重构前后属2次作业内容，没有可比较性，故未通过数据进行对比。
吸取的教训是：尽可能给程序留下充足的可扩展空间，已经写好的类尽量保证其完备性，在拓展时就尽量不去修改了，类之间的保证解耦，方法复杂度尽可能底，如此下来可以保证程序的鲁棒性。
心得体会 第一次作业思维还是比较偏面向过程的，对字符串进行了暴力解析，对象也仅仅停留在所谓的Term和Expression上。
在第二次作业难度骤然增加后，明白了面向对象的重要性，一个接口下的多个类逻辑分明，调用各自的方法，另外，在第二次作业过程中，理解了递归下降的思路，这是一种逻辑非常清晰的做法，为我的第三次作业节省了大量的时间。
第三次作业在格式判断上填了第二次作业留下的坑，更进一步理清了整个程序的逻辑，虽然最后在性能分上没有占到很多优势，但是总体下来我认为代码的结构和逻辑还是很清晰的，代码总计行数705完成了。
总的来说，本次作业虽然遇到一些困难（指第二次作业递归下降和如何优化）但总体来说还是学到了很多东西，包括但不仅限于面向对象的思维，正则表达式的使用，Java容器操作的熟练，递归等。</description>
    </item>
    
    <item>
      <title>失败的逻辑课程笔记</title>
      <link>http://atksoto.com/p/%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%80%BB%E8%BE%91%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 29 Oct 2020 11:54:00 +0800</pubDate>
      
      <guid>http://atksoto.com/p/%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%80%BB%E8%BE%91%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/</guid>
      <description>失败的规律 墨菲定律 定义 如果做某项工作有多种方法，而其中有一种方法将导致事故，那么一定有人会按这种方法去做。
四种表现形式 （注意：都不是一定的）
 任何事都没有表面看起来那么简单 所有的事都会比你预计的时间长 会出错的事不论概率多小总会出错 如果你担心某种情况发生，那么它就更有可能发生  启示  不忽视小概率事件 未雨绸缪 应急预案，动态调整 事故学习，反思  海因里希法则 定义 1：29：300
事故因果连锁论 伤亡事故的发生不是一个孤立的事件，是一系列事件相继发生的结果。
 1，事故往往起于人而又终止于人
2，人的不安全行为是大多数工伤事故的原因
3，人在受到伤害前，已经历数百次没有造成伤害的同类事故
4，人受到伤害的严重程度具有随机性，大多可以避免
5，人不安全行为的主要原因是不正确的态度
 启示 企业安全工作的中心就是防止人的不安全行为，消除机械的或物质的不安全状态，中断事故连锁的进程而避免事故的发生。
浴盆曲线 可靠性：完成规定功能的能力
可靠度：完成规定功能的概率
可靠度 MTBF
不可靠度 MTTF
故障率 浴盆曲线
失败的分析 失败分析三种方式 模式 FMECA 故障模式影响及危害性分析
原因 FTA 故障树
事件 ETA 事件树
失败风险 两个要素：失败的概率和后果
技术，费用，进度风险
风险识别，风险分析（可能性，后果严重性），风险排序
管理，评估，应对
失败的预防 优生优育  优质材料 降额\裕度设计 余度设计 健壮设计 耐环境设计 放错设计  养生保健  熟练的使用 定期的维护 有力的保障 持续的改进  失败的思维 如何看待失败 知识管理的概念 从失败中学习：知识的螺旋 吃一堑长一智：失败知识从哪来 失败知识的共享 失败知识的应用</description>
    </item>
    
  </channel>
</rss>
