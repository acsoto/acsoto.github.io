<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>APP on SOTO-BLOG</title>
    <link>https://zzhgo.com/tags/app/</link>
    <description>Recent content in APP on SOTO-BLOG</description>
    <image>
      <url>https://pic.mcac.cc/202301012340641.jpg</url>
      <link>https://pic.mcac.cc/202301012340641.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 04 Jan 2023 18:07:41 +0800</lastBuildDate><atom:link href="https://zzhgo.com/tags/app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Obsidian，Hugo</title>
      <link>https://zzhgo.com/posts/2023-1/20230104180741/</link>
      <pubDate>Wed, 04 Jan 2023 18:07:41 +0800</pubDate>
      
      <guid>https://zzhgo.com/posts/2023-1/20230104180741/</guid>
      <description>上一篇相关文章: [Obsidian体验与新工作流]
用 vscode 写这种大量的 md 文件还是不方便，想看实时渲染效果，因为博客图太多对照起来非常麻烦，Obsidian 相比起来体验会好很多，现在版本升到 1.0 以上了，原生的实时预览也找到了之前 Typora 的熟悉感，我做了下面几个配置来让博客 Vault 更好地适应 hugo。
插入模板 首先是一个方便的 metadata 插入模板，这比起运行 hugo 指令要方便多了。
--- title: {{title}} date: {{date}}T{{time}}+08:00 tags: [] categories: [] cover: image: &amp;#34;&amp;#34; slug: {{date:YYYYMMDD}}{{time:HHmmss}} --- 在以前我是用社区插件插入模板的，但是现在发现 Obsidian 自带的模板就完全够用了
title: {{title}} 直接复用文件名 date: {{date}}T{{time}} 即是符合 hugo 要求的时间样式，时区 +08:00 slug: {{date:YYYYMMDD}}{{time:HHmmss}} 这个比较有意思，具体说一下 slug 就是自定义 hugo 生成的链接，因为 hugo 自动生成的链接是直接复用标题的，导致我分享链接的出现中文被微信识别为不属于链接的部分，导致链接没法点，就算用 Safari 直接分享出去也会把链接显示为一大堆 unicode ，非常不美观，因此我想到直接用自带模板的时间格式化一串数字，这肯定是不会重名并且不影响分享的，当然这里也可以用 Templater 之类的社区插件生成一个更短的随机字符串。
效果:
--- title: Obsidian，Hugo date: 2023-01-04T18:07:41+08:00 tags: [] categories: [] cover: image: &amp;#34;&amp;#34; slug: 20230104180741 --- 这样生成的链接是这样的: https://zzhgo.</description>
      <content:encoded><![CDATA[<p>上一篇相关文章: <a href="https://zzhgo.com/posts/obsidian%E4%BD%93%E9%AA%8C%E4%B8%8E%E6%96%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/">[Obsidian体验与新工作流]</a></p>
<p>用 vscode 写这种大量的 md 文件还是不方便，想看实时渲染效果，因为博客图太多对照起来非常麻烦，Obsidian 相比起来体验会好很多，现在版本升到 1.0 以上了，原生的实时预览也找到了之前 Typora 的熟悉感，我做了下面几个配置来让博客 Vault 更好地适应 hugo。</p>
<h2 id="插入模板">插入模板</h2>
<p>首先是一个方便的 metadata 插入模板，这比起运行 hugo 指令要方便多了。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-md" data-lang="md"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">title: {{title}}
</span></span><span class="line"><span class="cl">date: {{date}}T{{time}}+08:00
</span></span><span class="line"><span class="cl">tags: []
</span></span><span class="line"><span class="cl">categories: []
</span></span><span class="line"><span class="cl">cover:
</span></span><span class="line"><span class="cl">    image: &#34;&#34;
</span></span><span class="line"><span class="cl">slug: {{date:YYYYMMDD}}{{time:HHmmss}}
</span></span><span class="line"><span class="cl">---
</span></span></code></pre></div><p>在以前我是用社区插件插入模板的，但是现在发现 Obsidian 自带的模板就完全够用了</p>
<ul>
<li><code>title: {{title}}</code> 直接复用文件名</li>
<li><code>date: {{date}}T{{time}}</code> 即是符合 hugo 要求的时间样式，时区 +08:00</li>
<li><code>slug: {{date:YYYYMMDD}}{{time:HHmmss}}</code> 这个比较有意思，具体说一下</li>
</ul>
<p>slug 就是自定义 hugo 生成的链接，因为 hugo 自动生成的链接是直接复用标题的，导致我分享链接的出现中文被微信识别为不属于链接的部分，导致链接没法点，就算用 Safari 直接分享出去也会把链接显示为一大堆 unicode ，非常不美观，因此我想到直接用自带模板的时间格式化一串数字，这肯定是不会重名并且不影响分享的，当然这里也可以用 Templater 之类的社区插件生成一个更短的随机字符串。</p>
<p>效果:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-md" data-lang="md"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">title: Obsidian，Hugo
</span></span><span class="line"><span class="cl">date: 2023-01-04T18:07:41+08:00
</span></span><span class="line"><span class="cl">tags: []
</span></span><span class="line"><span class="cl">categories: []
</span></span><span class="line"><span class="cl">cover:
</span></span><span class="line"><span class="cl">    image: &#34;&#34;
</span></span><span class="line"><span class="cl">slug: 20230104180741
</span></span><span class="line"><span class="cl">---
</span></span></code></pre></div><p>这样生成的链接是这样的: <a href="https://zzhgo.com/posts/2023-1/20230104180741/">https://zzhgo.com/posts/2023-1/20230104180741/</a> 就不存在非法字符的问题了。</p>
<p>记得在 hugo config 忽略模板。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">ignoreFiles</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&#34;Templates.md&#34;</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></span></span></code></pre></div><h2 id="链接问题">链接问题</h2>
<p>Obsidian 默认是用双链联系文件的，这也是 Obsidian 早期最大的卖点，这个功能的存在导致 markdown 本来的链接格式在这个软件里没什么存在感，链接图片和其他 markdown 文件就和 hugo 完全不一致。于是我用了一个妥协二者的办法，在引用其他文件的时候使用这样的格式：</p>
<p><img loading="lazy" src="https://pic.mcac.cc/202301041905120.png" alt=""  />
</p>
<p>其中双括号建立了 Obsidian 的双链，后者是 hugo 的链接语法，最后呈现在网页上的效果是这样的:  <a href="https://zzhgo.com/posts/obsidian%E4%BD%93%E9%AA%8C%E4%B8%8E%E6%96%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/">[Obsidian体验与新工作流]</a></p>
<p>当然这在移动文件的时候 ref 的链接会失效，Obsidian 会自动调整双链，可以根据 Obsidian 的提示让自己想起来还有个 ref 没调整。</p>
<h2 id="git">Git</h2>
<p><a href="https://github.com/denolehov/obsidian-git">obsidian-git</a> 用这个插件来快速提交更新</p>
<p>⌘ + P</p>
<table>
<thead>
<tr>
<th>查看 source control view</th>
<th>一键提交</th>
</tr>
</thead>
<tbody>
<tr>
<td><img loading="lazy" src="https://pic.mcac.cc/202301042207707.png" alt=""  />
</td>
<td><img loading="lazy" src="https://pic.mcac.cc/202301042209616.png" alt=""  />
</td>
</tr>
</tbody>
</table>
<p>加上 GitHub Actions 自动化 <a href="https://zzhgo.com/posts/2022-12/hugo%E9%83%A8%E7%BD%B2/">[Hugo部署]</a></p>
<h2 id="关于-notion-的题外话">关于 Notion 的题外话</h2>
<p>用了一段时间 Notion ，也是折腾了好久，建了很多页面，最后发现真的想找一个文件的时候他的搜索真的很慢，而且有时候会出现同步功能失效的情况，记笔记还是为了找起来快，所以 Obsidian 本地文件极快的搜索和双链还是更适合存笔记。而且这次从 Notion 迁移东西出来发现这个东西真的好进不好出，有条件还是把文件都按照原生 markdown 存起来。Notion 的数据库是真的方便，非常喜欢的功能，我的一些数据仍然放在 Notion 里面。</p>
<p>顺带一提，Obsidian 新出的 <a href="https://obsidian.md/canvas">Canvas</a> 值得一试。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Raycast 体验</title>
      <link>https://zzhgo.com/posts/2023-1/20230103235403/</link>
      <pubDate>Tue, 03 Jan 2023 23:54:03 +0800</pubDate>
      
      <guid>https://zzhgo.com/posts/2023-1/20230103235403/</guid>
      <description>Raycast 前几天在一篇文章 你的 2022，藏在这些数字里 中偶然看到了 Raycast 这个软件也有年终报告，当时就猜到是一个类似 Alfred 的代替原生 Spotlight 的软件。
Raycast：2022 Wrapped Mac 平台著名的启动器 Raycast 也推出了年度总结报告。这份报告分为四个部分，分别是应用的使用情况、调用拓展情况、通过 Raycast 启动应用的情况，以及最后的总结。 之前一直没有尝试过此类软件是因为元老 Alfred 实在是长得不好看，让我觉得没法融入系统，今天在思索怎么样能省事地运行 hugo server 的时候想到可以用这类软件来实现，于是下载了 Alfred 发现脚本功能是付费的，正在研究有无必要的时候发现了 Raycast 这个软件，一眼爱上UI，而且免费，于是下了一个来折腾，发现确实是个好东西。
自定义脚本 这个软件自定义脚本也是非常方便，为了实现刚才考虑的功能又特意研究了一下 AppleScript，最后搞定了这个脚本。
#!/usr/bin/osascript # Required parameters: # @raycast.schemaVersion 1 # @raycast.title Run Hugo Server # @raycast.mode compact # Optional parameters: # @raycast.icon images/hugo-logo.png # Documentation: # @raycast.description Run Hugo Server tell application &amp;#34;Terminal&amp;#34; set newTab to do script &amp;#34;cd /Users/soto/Code/soto-blog &amp;amp;&amp;amp; hugo server&amp;#34; end tell delay 1 do shell script &amp;#34;open http://localhost:1313&amp;#34; 美观好用，非常让人满意。</description>
      <content:encoded><![CDATA[<h2 id="raycast">Raycast</h2>
<p>前几天在一篇文章 <a href="https://sspai.com/post/77519">你的 2022，藏在这些数字里</a> 中偶然看到了 Raycast 这个软件也有年终报告，当时就猜到是一个类似 Alfred 的代替原生 Spotlight 的软件。</p>
<blockquote>
<p>Raycast：2022 Wrapped
Mac 平台著名的启动器 <a href="https://sspai.com/link?target=https%3A%2F%2Fwww.raycast.com%2F">Raycast</a> 也推出了年度总结报告。这份报告分为四个部分，分别是应用的使用情况、调用拓展情况、通过 Raycast 启动应用的情况，以及最后的总结。
<img loading="lazy" src="https://cdn.sspai.com/2022/12/29/ec9a0b96ca3e8d732a6bd0d0caa3b248.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt=""  />
</p>
</blockquote>
<p>之前一直没有尝试过此类软件是因为元老 <a href="https://www.alfredapp.com">Alfred</a> 实在是长得不好看，让我觉得没法融入系统，今天在思索怎么样能省事地运行 hugo server 的时候想到可以用这类软件来实现，于是下载了 Alfred 发现脚本功能是付费的，正在研究有无必要的时候发现了 Raycast 这个软件，一眼爱上UI，而且免费，于是下了一个来折腾，发现确实是个好东西。</p>
<h2 id="自定义脚本">自定义脚本</h2>
<p>这个软件自定义脚本也是非常方便，为了实现刚才考虑的功能又特意研究了一下 AppleScript，最后搞定了这个脚本。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-applescript" data-lang="applescript"><span class="line"><span class="cl"><span class="c">#!/usr/bin/osascript</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Required parameters:</span>
</span></span><span class="line"><span class="cl"><span class="c"># @raycast.schemaVersion 1</span>
</span></span><span class="line"><span class="cl"><span class="c"># @raycast.title Run Hugo Server</span>
</span></span><span class="line"><span class="cl"><span class="c"># @raycast.mode compact</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Optional parameters:</span>
</span></span><span class="line"><span class="cl"><span class="c"># @raycast.icon images/hugo-logo.png</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Documentation:</span>
</span></span><span class="line"><span class="cl"><span class="c"># @raycast.description Run Hugo Server</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">tell</span> <span class="nb">application</span> <span class="s2">&#34;Terminal&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="k">set</span> <span class="nv">newTab</span> <span class="k">to</span> <span class="nv">do</span> <span class="nv">script</span> <span class="s2">&#34;cd /Users/soto/Code/soto-blog &amp;&amp; hugo server&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">end</span> <span class="k">tell</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">delay</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">do shell script</span> <span class="s2">&#34;open http://localhost:1313&#34;</span>
</span></span></code></pre></div><p>美观好用，非常让人满意。</p>
<p><img loading="lazy" src="https://pic.mcac.cc/202301040009617.png" alt=""  />
</p>
<h2 id="社区脚本">社区脚本</h2>
<p><img loading="lazy" src="https://pic.mcac.cc/202301040014993.png" alt=""  />
</p>
<p>安装插件很方便，除此以外一些简单的脚本可以在官方维护的这个库里找到 <a href="https://github.com/raycast/script-commands">raycast
/script-commands</a> 例如这个从当前文件夹打开终端就很方便，省的右键点击目录再打开了。</p>
<p><img loading="lazy" src="https://pic.mcac.cc/202301040015940.png" alt=""  />
</p>
<p>这个图标太丑了，可以自己改一下。</p>
<p><img loading="lazy" src="https://pic.mcac.cc/202301040015673.png" alt=""  />
</p>
<h2 id="其他功能">其他功能</h2>
<table>
<thead>
<tr>
<th style="text-align:center">Functions</th>
<th style="text-align:center">Screenshots</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">剪切板历史</td>
<td style="text-align:center"><img loading="lazy" src="https://pic.mcac.cc/202301040017318.png" alt=""  />
</td>
</tr>
<tr>
<td style="text-align:center">计算器</td>
<td style="text-align:center"><img loading="lazy" src="https://pic.mcac.cc/202301040018234.png" alt=""  />
</td>
</tr>
<tr>
<td style="text-align:center">内置字典</td>
<td style="text-align:center"><img loading="lazy" src="https://pic.mcac.cc/202301042158529.png" alt=""  />
</td>
</tr>
</tbody>
</table>
<p>另外还有可以替换著名付费软件的分屏，但是我不用。</p>
<h2 id="其他插件">其他插件</h2>
<p><img loading="lazy" src="https://pic.mcac.cc/202301042151560.png" alt=""  />
</p>
<p>装了几个很方便的社区插件</p>
<table>
<thead>
<tr>
<th style="text-align:center">Extensions</th>
<th style="text-align:center">Screenshots</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><a href="https://www.raycast.com/fedevitaledev/music">AppleMusic</a> 可以快速播放歌单/加入资料库/喜欢</td>
<td style="text-align:center"><img loading="lazy" src="https://pic.mcac.cc/202301040039801.png" alt=""  />
</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://www.raycast.com/loris/safari">Safari</a> 这个直接搜历史记录</td>
<td style="text-align:center"><img loading="lazy" src="https://pic.mcac.cc/202301042159601.png" alt=""  />
</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://www.raycast.com/mblode/quick-event">Quick Event</a> 速建日程(可惜不支持汉语)</td>
<td style="text-align:center"><img loading="lazy" src="https://pic.mcac.cc/202301042149577.png" alt=""  />
</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://www.raycast.com/thomas/github-repository-search">GitHub Repository Search</a> 快速去仓库，另外还有快速 Git 操作的插件，我用不到就没装。</td>
<td style="text-align:center"><img loading="lazy" src="https://pic.mcac.cc/202301042149577.png" alt=""  />
</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://www.raycast.com/gdsmith/jetbrains">JetBrains Toolbox Recent Projects</a> 这个也很方便，可以快速打开某个项目</td>
<td style="text-align:center"><img loading="lazy" src="https://pic.mcac.cc/202301042155859.png" alt=""  />
</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://www.raycast.com/MarkusLanger/vscode-project-manager">Visual Studio Code - Project Manager</a>  同上</td>
<td style="text-align:center"><img loading="lazy" src="https://pic.mcac.cc/202301042246228.png" alt=""  />
</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://www.raycast.com/marcjulian/obsidian">Obsidian</a> 可以快速搜笔记/开仓库</td>
<td style="text-align:center"><img loading="lazy" src="https://pic.mcac.cc/202301042246261.png" alt=""  />
</td>
</tr>
</tbody>
</table>
<h2 id="彩蛋">彩蛋</h2>
<p>confetti!</p>
<p><img loading="lazy" src="https://pic.mcac.cc/202301042141088.gif" alt=""  />
</p>
<p><a href="https://www.ray.so">Rayso</a></p>
<p>突然发现之前收藏的一个好看的代码截图工具网站也是Raycast维护的。同样的，右下角可以获取这个脚本。</p>
<p><img loading="lazy" src="https://pic.mcac.cc/202301042143074.png" alt=""  />
</p>
<h2 id="end">End</h2>
<p>总之就是如果用习惯了能省不少事儿，配置起来也很方便基本就是装插件，重要的是好看好玩，已经把默认的 ⌘ + Space 换掉了，就唯一不满意的是这个软件图标太难看了。</p>
<p>几篇很好的介绍:</p>
<ul>
<li><a href="https://sspai.com/post/63521">快捷启动器中的「潜力股」，它想成为你的 Mac 默认搜索工具：Raycast</a></li>
<li><a href="https://sspai.com/post/72540">能少一个是一个：我用 Raycast 替代了这些应用</a></li>
<li><a href="https://sspai.com/post/72951">Raycast 小技巧之 Quicklink 二三事</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>重拾RSS</title>
      <link>https://zzhgo.com/posts/%E9%87%8D%E6%8B%BErss/</link>
      <pubDate>Fri, 05 Aug 2022 23:20:00 +0000</pubDate>
      
      <guid>https://zzhgo.com/posts/%E9%87%8D%E6%8B%BErss/</guid>
      <description>之前新鲜过一段时间的RSS，还专门买了Reeder，当时只是关注了少数派，知乎精选，几个微博，后来逐渐就不看了。因为爱看的东西比较分散，微信上看订阅号，在TG上看竹新社和BBC，看少数派APP，看知乎，看国家地理app，偶尔就落了某个，所以最近又开始集中到RSS源，集中时间看，还是比分散着偶尔看这个偶尔看那个好很多。下面看看订阅的东西。
RSSHub 一个很重要的平台：RSSHub，有极其丰富的RSS源。
RSSHub 是一个开源、简单易用、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源。RSSHub 借助于开源社区的力量快速发展中，目前已适配数百家网站的上千项内容
新闻 用RSSHub可以订阅TG频道，就不用专门去TG这么个聊天软件上看新闻了。
另外还订阅了RSSHub的BBC，这个比BBC自家的源的好处是有封面有全部内容
fake news，仅供参考
图片类 有些更新的很勤快，可以归到一个文件夹里，全是图片没有乱七八糟的东西的体验还是很好的。
感兴趣的 比如Decohack，少数派，一般都自家有RSS源。
微信订阅号 微信订阅号也是可以挪到这里的，但是比较麻烦，而且也不是很必要，因为每天都要看微信，不过看微信的时候，一般很难专注的看一个长篇，比如三联生活周刊和新京报书评周刊这样的订阅号，质量很好，但总没法有时间很好地读完，就只能说收藏下来有时间看，但是有了时间又忘了看。
Newsletter Newsletter最近貌似很火，我目前还没有get到对于读者来说，这个东西有多少意义，不过用这个网站可以把内容转为RSS。
https://kill-the-newsletter.com
好东西还是很多的，我订阅的没几个，主要还是希望能好好看完自己喜欢看的东西。
对了，这个博客也是可以订阅的。</description>
      <content:encoded><![CDATA[<p>之前新鲜过一段时间的RSS，还专门买了Reeder，当时只是关注了少数派，知乎精选，几个微博，后来逐渐就不看了。因为爱看的东西比较分散，微信上看订阅号，在TG上看竹新社和BBC，看少数派APP，看知乎，看国家地理app，偶尔就落了某个，所以最近又开始集中到RSS源，集中时间看，还是比分散着偶尔看这个偶尔看那个好很多。下面看看订阅的东西。</p>
<h2 id="rsshub">RSSHub</h2>
<p>一个很重要的平台：<a href="https://docs.rsshub.app">RSSHub</a>，有极其丰富的RSS源。</p>
<blockquote>
<p>RSSHub 是一个开源、简单易用、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源。RSSHub 借助于开源社区的力量快速发展中，目前已适配数百家网站的上千项内容</p>
</blockquote>
<h2 id="新闻">新闻</h2>
<p>用RSSHub可以订阅TG频道，就不用专门去TG这么个聊天软件上看新闻了。</p>
<p><img loading="lazy" src="https://pic.mcac.cc/soto/202208052335826.png" alt=""  />
</p>
<p>另外还订阅了RSSHub的BBC，这个比BBC自家的源的好处是有封面有全部内容</p>
<p>fake news，仅供参考</p>
<p><img loading="lazy" src="https://pic.mcac.cc/soto/202208052337222.png" alt=""  />
</p>
<h2 id="图片类">图片类</h2>
<p>有些更新的很勤快，可以归到一个文件夹里，全是图片没有乱七八糟的东西的体验还是很好的。</p>
<p><img loading="lazy" src="https://pic.mcac.cc/soto/202208052341595.png" alt=""  />
</p>
<h2 id="感兴趣的">感兴趣的</h2>
<p>比如Decohack，少数派，一般都自家有RSS源。</p>
<h2 id="微信订阅号">微信订阅号</h2>
<p>微信订阅号也是可以挪到这里的，但是比较麻烦，而且也不是很必要，因为每天都要看微信，不过看微信的时候，一般很难专注的看一个长篇，比如三联生活周刊和新京报书评周刊这样的订阅号，质量很好，但总没法有时间很好地读完，就只能说收藏下来有时间看，但是有了时间又忘了看。</p>
<h2 id="newsletter">Newsletter</h2>
<p>Newsletter最近貌似很火，我目前还没有get到对于读者来说，这个东西有多少意义，不过用这个网站可以把内容转为RSS。</p>
<p><a href="https://kill-the-newsletter.com">https://kill-the-newsletter.com</a></p>
<p>好东西还是很多的，我订阅的没几个，主要还是希望能好好看完自己喜欢看的东西。</p>
<p>对了，这个博客也是可以<a href="https://atksoto.com/index.xml">订阅</a>的。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Obsidian体验与新工作流</title>
      <link>https://zzhgo.com/posts/obsidian%E4%BD%93%E9%AA%8C%E4%B8%8E%E6%96%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</link>
      <pubDate>Tue, 07 Dec 2021 12:11:00 +0000</pubDate>
      
      <guid>https://zzhgo.com/posts/obsidian%E4%BD%93%E9%AA%8C%E4%B8%8E%E6%96%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid>
      <description>最近在玩Hexo，加上很多零散的笔记和文档也是markdown写的，发现自己用markdown的频率高了很多。本来就在计划换一个效率更高的markdown编辑器，毕竟确实有很多markdown的场景是单个编辑器没法覆盖的，Typora现在也收费了，趁着这个契机，打算换一个软件用。
听说 all in one 的 Notion 很好使，身边也有人在用，于是先试了一下，发现首先这个东西已经不是传统的markdown了，有点趋近于word那种富文本，并且云端依赖太高了，我要求得有一套本地可以用来渲染的md文件，所以没法用这个。
另外就是一直感觉很神秘但是不会用的Obsidian。由于习惯停留在Typora，刚下载下来Obsidian感觉非常不习惯，没法直接打开一个md，而且没法实时预览。
但是经过一番研究之后，发现Obsidian确实是很适合我的需求。
主题 首先Obsidian的社区非常丰富，有很多非常好看的主题，换上之后感觉比之前typora的打字体验好了很多。
推荐一个 主题 YIN &amp;amp; YANG 我现在在用，很好看。
而且主题，包括插件加完之后就是多端同步的，连手机上也有。
插件 还是因为社区文化好，插件也很多，但是目前我没什么需要的，唯一装了一个模板插件，可以用快捷键生成我预置的内容，这个和Hexo配合起来非常舒服，之前为了让md生成FrontMatter，必须手动hexo n，现在只要提前设置好Hexo的FrontMatter，设置好快捷键，即可一键生成需要的内容，包括时间这种变量。
如下，我设置好模板后，只需 command+T 即可生成下面的内容
--- title: &amp;lt;% tp.file.title %&amp;gt; date: &amp;lt;% tp.file.creation_date() %&amp;gt;:00 tags: [] cover: image: --- --- title: Obsidian体验——新工作流 date: 2021-12-07 12:11:00 tags: [] cover: image: --- 插件名：Templater
双链 这个双向链接，指的就是你的一个md对象可以指向另一个对象，然后目标对象也会知道有哪个对象指向了自己。我理解这个东西就是类似于一个图，模拟你的神经网络，形成一种你的第二大脑的感觉，但其实到现在我也没感觉到有多强大，没有get到他的点。
这是他给我的仓库生成的图谱，因为没怎么建双链，所以边比较少，倒是挺好玩
不过标签和查找功能倒是感觉很好用，我之前给hexo写的标签他也很好的解析下来了，在我真正写笔记的时候，可以非常方便的查到我需要的东西。
同步 Obsidian很好的一点是可以用iCloud同步，这是我之前的需求：云同步编辑markdowndo的最好的解决方案。
Obsidian有iOS端，而且非常轻量，此时此刻这段话就是我在手机上打下的（但是汉字输入法适配不太好）
在这个情况下，我把所有的笔记都放到一个仓库里，标签和双链让他们相互关联，在任何设备上都可以看到，很好的保证了整体性，而我又可以分开哪些是要发布的哪些是不发布的。
图片处理 Obsidian不同于Typora的一点是图片不是很好处理，Obsidian的方法是把你放进来的图片复制到库目录下，然后加上双链。其实这也不是软件的问题，md格式本身就对图片本地加载不是很友好，加上我要上传到博客，整个目录会非常凌乱。同时我想要遵循数据方便转移的原则，以便在之后出现任何问题，我的原数据都整齐保留，于是我用阿里云对象存储OSS建了一个图床，同时使用CDN加速。
同时使用uPic（picgo也很好）这个软件，在写笔记的时候，只需要用快捷键上传图片，即可马上拿到图片的链接，以后就不会再在笔记里放上一堆杂乱的图片了，发布到Github Pages的时候也会快很多。
日记 这个东西甚至可以记日记，有专门的日记系统，还有配套的日历插件，尝试了一下体验确实不错，这是我曾经有过的需求。
官方介绍：
正如其名，当你使用日记功能时，Obsidian 会为你创建一篇以当天日期命名的空白笔记。当然，如果这篇笔记已经存在了的话，Obsidian 则会为你打开它。日记功能就是为了让你更方便地记录日常生活而设计的，你可以在每天的日记中写下你的生活记录、待办事项，抑或是当天的笔记总结，等等。日记功能允许你为日记指定模板，这样你就不需要重复调整日记的格式。
用双链和以前的自己对话，也是很有趣的一件事情。</description>
      <content:encoded><![CDATA[<p>最近在玩<a href="https://hexo.io/">Hexo</a>，加上很多零散的笔记和文档也是markdown写的，发现自己用markdown的频率高了很多。本来就在计划换一个效率更高的markdown编辑器，毕竟确实有很多markdown的场景是单个编辑器没法覆盖的，<a href="https://www.typora.io">Typora</a>现在也收费了，趁着这个契机，打算换一个软件用。</p>
<p>听说 all in one 的 <a href="https://www.notion.so">Notion</a> 很好使，身边也有人在用，于是先试了一下，发现首先这个东西已经不是传统的markdown了，有点趋近于word那种富文本，并且云端依赖太高了，我要求得有一套本地可以用来渲染的md文件，所以没法用这个。</p>
<p>另外就是一直感觉很神秘但是不会用的<a href="https://obsidian.md">Obsidian</a>。由于习惯停留在Typora，刚下载下来Obsidian感觉非常不习惯，没法直接打开一个md，而且没法实时预览。</p>
<p>但是经过一番研究之后，发现Obsidian确实是很适合我的需求。</p>
<h2 id="主题">主题</h2>
<p>首先Obsidian的社区非常丰富，有很多非常好看的主题，换上之后感觉比之前typora的打字体验好了很多。</p>
<p><img loading="lazy" src="https://pic.mcac.cc/soto-pictures/2021-12/MIXxm6.png" alt="社区主题"  />
</p>
<p>推荐一个 <a href="https://github.com/chetachiezikeuzor/Yin-and-Yang-Theme">主题 YIN &amp; YANG</a> 我现在在用，很好看。</p>
<p>而且主题，包括插件加完之后就是多端同步的，连手机上也有。</p>
<h2 id="插件">插件</h2>
<p>还是因为社区文化好，插件也很多，但是目前我没什么需要的，唯一装了一个模板插件，可以用快捷键生成我预置的内容，这个和Hexo配合起来非常舒服，之前为了让md生成FrontMatter，必须手动hexo n，现在只要提前设置好Hexo的FrontMatter，设置好快捷键，即可一键生成需要的内容，包括时间这种变量。</p>
<p>如下，我设置好模板后，只需 <code>command+T</code> 即可生成下面的内容</p>
<pre tabindex="0"><code>---
title: &lt;% tp.file.title %&gt;
date: &lt;% tp.file.creation_date() %&gt;:00
tags: []
cover:
    image: 
---
</code></pre><pre tabindex="0"><code>---
title: Obsidian体验——新工作流
date: 2021-12-07 12:11:00
tags: []
cover:
    image: 
---
</code></pre><p>插件名：<a href="https://silentvoid13.github.io/Templater/">Templater</a></p>
<h2 id="双链">双链</h2>
<p>这个双向链接，指的就是你的一个md对象可以指向另一个对象，然后目标对象也会知道有哪个对象指向了自己。我理解这个东西就是类似于一个图，模拟你的神经网络，形成一种你的第二大脑的感觉，但其实到现在我也没感觉到有多强大，没有get到他的点。</p>
<p>这是他给我的仓库生成的图谱，因为没怎么建双链，所以边比较少，倒是挺好玩</p>
<p><img loading="lazy" src="https://pic.mcac.cc/soto-pictures/2021-12/eam3iK.png" alt="关系图谱"  />
</p>
<p>不过标签和查找功能倒是感觉很好用，我之前给hexo写的标签他也很好的解析下来了，在我真正写笔记的时候，可以非常方便的查到我需要的东西。</p>
<p><img loading="lazy" src="https://pic.mcac.cc/soto-pictures/2021-12/XmECh3.png" alt="我写笔记的时候"  />
</p>
<h2 id="同步">同步</h2>
<p>Obsidian很好的一点是可以用iCloud同步，这是我之前的需求：云同步编辑markdowndo的最好的解决方案。</p>
<p>Obsidian有iOS端，而且非常轻量，此时此刻这段话就是我在手机上打下的（但是汉字输入法适配不太好）</p>
<p>在这个情况下，我把所有的笔记都放到一个仓库里，标签和双链让他们相互关联，在任何设备上都可以看到，很好的保证了整体性，而我又可以分开哪些是要发布的哪些是不发布的。</p>
<h2 id="图片处理">图片处理</h2>
<p>Obsidian不同于Typora的一点是图片不是很好处理，Obsidian的方法是把你放进来的图片复制到库目录下，然后加上双链。其实这也不是软件的问题，md格式本身就对图片本地加载不是很友好，加上我要上传到博客，整个目录会非常凌乱。同时我想要遵循数据方便转移的原则，以便在之后出现任何问题，我的原数据都整齐保留，于是我用阿里云对象存储OSS建了一个图床，同时使用CDN加速。</p>
<p>同时使用<a href="https://github.com/gee1k/uPic">uPic</a>（<a href="https://github.com/Molunerfinn/PicGo">picgo</a>也很好）这个软件，在写笔记的时候，只需要用快捷键上传图片，即可马上拿到图片的链接，以后就不会再在笔记里放上一堆杂乱的图片了，发布到Github Pages的时候也会快很多。</p>
<h2 id="日记">日记</h2>
<p>这个东西甚至可以记日记，有专门的日记系统，还有配套的日历插件，尝试了一下体验确实不错，这是我曾经有过的需求。</p>
<p>官方介绍：</p>
<blockquote>
<p>正如其名，当你使用日记功能时，Obsidian 会为你创建一篇以当天日期命名的空白笔记。当然，如果这篇笔记已经存在了的话，Obsidian 则会为你打开它。日记功能就是为了让你更方便地记录日常生活而设计的，你可以在每天的日记中写下你的生活记录、待办事项，抑或是当天的笔记总结，等等。日记功能允许你为日记指定模板，这样你就不需要重复调整日记的格式。</p>
</blockquote>
<p><img loading="lazy" src="https://pic.mcac.cc/soto/202112142314916.png" alt="日记效果"  />
</p>
<p>用双链和以前的自己对话，也是很有趣的一件事情。</p>
<p>用双链看那年今日，也是个非常好的选择（加上双链到电影和书籍，完爆某Memo（？））</p>
<h2 id="新的工作流">新的工作流</h2>
<p>倒也谈不上什么工作流，可能是少数派看多了，只是觉得折腾好玩。</p>
<p>以下是我现在发布博客的过程，非常简单</p>
<ol>
<li>打开Obsidian，新建文件，输入标题，cmd+T 生成FrontMatter</li>
<li>写</li>
<li>打开控制台，输入hexos</li>
</ol>
<p>解释一下最后一步
我在本地建立了一个全局脚本hexos</p>
<p>内容如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">  <span class="m">1</span> <span class="c1">#!/bin/bash</span>
</span></span><span class="line"><span class="cl">  <span class="m">2</span> rm -rf /Users/soto/Documents/HexoBlog/source/_posts 
</span></span><span class="line"><span class="cl">  <span class="m">3</span> cp -r /Users/soto/Library/Mobile<span class="se">\ </span>Documents/iCloud<span class="se">\~</span>md<span class="se">\~</span>obsidian/Documents/&gt;
</span></span><span class="line"><span class="cl">    笔记/HexoBlog /Users/soto/Documents/HexoBlog/source/_posts
</span></span><span class="line"><span class="cl">  <span class="m">4</span> <span class="nb">cd</span> /Users/soto/Documents/HexoBlog
</span></span><span class="line"><span class="cl">  <span class="m">5</span> hexo g
</span></span><span class="line"><span class="cl">  <span class="m">6</span> hexo d
</span></span></code></pre></div><p>其过程为</p>
<ol>
<li>删除hexo下的posts</li>
<li>把obsidian目录下的文件夹复制到hexo的posts</li>
<li>生成，部署</li>
</ol>
<p>这样做的好处是分离hexo目录和真正的笔记，我把笔记目录放到了iCloud上，以便在任何设备上直接用obsidian打开仓库，不需要把hexo上传到iCloud，就不用担心Obsidian只能打开整个hexo目录的问题</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
