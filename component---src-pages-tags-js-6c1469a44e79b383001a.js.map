{"version":3,"file":"component---src-pages-tags-js-6c1469a44e79b383001a.js","mappings":"qNAMO,MAAMA,EAAO,IAAM,gBAAC,IAAG,CAACC,MAAM,SAoCrC,UAlCa,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAU,EAC9B,MAAMC,EAAQF,EAAKG,kBAAkBC,MAC/BC,EAAS,IAAIC,IACnB,IAAK,MAAMC,KAAQL,EACjB,GAA8B,OAA1BK,EAAKC,YAAYC,KACnB,IAAK,MAAMC,KAAOH,EAAKC,YAAYC,KAC7BJ,EAAOM,IAAID,GACbL,EAAOO,IAAIF,EAAKL,EAAOQ,IAAIH,GAAO,GAElCL,EAAOO,IAAIF,EAAK,GAKxB,MAAMI,EAAUC,MAAMC,KAAKX,GAE3B,OADAS,EAAQG,MAAK,CAACC,EAAMC,IAAUA,EAAM,GAAKD,EAAK,KAE5C,gBAAC,IAAM,CAACjB,SAAUA,EAAUF,MAAO,eACjC,uBAAKqB,UAAU,YACf,uBAAKA,UAAU,wBACZN,EAAQO,KAAI,IAAmB,IAAjBX,EAAKY,GAAM,EACxB,OACE,gBAAC,EAAAC,KAAI,CAACH,UAAW,sDAAuDI,GAAI,SAAWd,GACpFA,EACD,uBAAKU,UAAU,SAASE,GACnB,KAIN,C","sources":["webpack://gatsby-starter-blog/./src/pages/tags.js"],"sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Seo from \"../components/seo\";\nimport Layout from \"../components/layout\";\n\nexport const Head = () => <Seo title=\"Tags\" />;\n\nconst Tags = ({ data, location }) => {\n  const posts = data.allMarkdownRemark.nodes;\n  const tagMap = new Map();\n  for (const post of posts) {\n    if (post.frontmatter.tags !== null) {\n      for (const tag of post.frontmatter.tags) {\n        if (tagMap.has(tag)) {\n          tagMap.set(tag, tagMap.get(tag) + 1);\n        } else {\n          tagMap.set(tag, 1);\n        }\n      }\n    }\n  }\n  const tagPair = Array.from(tagMap);\n  tagPair.sort((left, right) => right[1] - left[1]);\n  return (\n    <Layout location={location} title={\"SOTO | Tags\"}>\n      <div className=\"divider\"></div>\n      <div className=\"flex flex-wrap gap-4\">\n        {tagPair.map(([tag, count]) => {\n          return (\n            <Link className={\"btn btn-outline btn-primary gap-2 text-lg font-bold\"} to={\"/tags/\" + tag}>\n              {tag}\n              <div className=\"badge\">{count}</div>\n            </Link>\n          );\n        })}\n      </div>\n    </Layout>\n  );\n};\n\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          image\n          tags\n        }\n      }\n    }\n  }\n`;\n"],"names":["Head","title","data","location","posts","allMarkdownRemark","nodes","tagMap","Map","post","frontmatter","tags","tag","has","set","get","tagPair","Array","from","sort","left","right","className","map","count","Link","to"],"sourceRoot":""}