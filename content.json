{"pages":[{"title":"friends","text":"FRIENDSCharlot’s Blog cetlewa","link":"/friends/index.html"},{"title":"Photo","text":"","link":"/photo/index.html"},{"title":"Video","text":"","link":"/video/index.html"},{"title":"github","text":"","link":"/github/index.html"}],"posts":[{"title":"AC又被黑了","text":"下午突然看到服务器有人发 仔细一看 打开链接一看： 很无语，一开始以为是国外作案，黑进数据库了，一看我数据库根本没对外网开放 查来查去发现是有人盗了一个用来处理封禁的账号，进去之后一通乱封 把数据库恢复了一下备份，玩家还是进不去，我能进去，查了一下litebans的官网，是用了一个封锁服务器进入权限的指令，打了个指令就解决了。 很低级的手段，很无聊的恶趣味 后续原本晚上前往教学楼复习数分，没有带电脑。 没想到，在傍晚又被黑了，因为只是还有管理号没有停掉，仅凭手机暂时解决了问题，在仔细推敲后，认为其是通过非法调用我部署在web服务器的litebans端的api来实现用拥有权限的玩家账号去封禁其他玩家。 结果在稍晚一点又一次被黑，终于意识到，事情根本没有那么复杂，只是因为litebans是BC插件，Authme没办法限制登陆前对指令使用权限，任意一个有litebans权限的账号都在未登陆的情况下可以随意使用指令。其实早就应该发现我留了这种低级漏洞的，也没想道竟然这么久了才有人发现了这个这么简单的漏洞。","link":"/2021/11/28/AC%E5%8F%88%E8%A2%AB%E9%BB%91%E4%BA%86/"},{"title":"Alxa_Compiler 编译器","text":"相关文章：[[编译实验总结感想]] 词法分析Before CodeRequriement: read testfile.txt, parse every char to word and print them. At the same time, memorize type, content and line number of each word. File readingRead by line, scan every char of every string and analyse. 123while ((s = bf.readLine()) != null) { ...} AnalyseWhen i get the key word, enter the next analyst. 1234567891011121314151617181920212223while ((c = getChar()) != null) { if (c == ' ' || c == '\\r' || c == '\\t') { continue; } else if (c == '+' || c == '-' || c == '*' || c == '%') { words.add(new Word(c)); } else if (c == '/') { analyseSlash(); } else if (c == '(' || c == ')' || c == '[' || c == ']' || c == '{' || c == '}') { words.add(new Word(c)); } else if (c == '&gt;' || c == '&lt;' || c == '=' || c == '!') { analyseRelation(c); } else if (c == ',' || c == ';') { words.add(new Word(c)); } else if (c == '&quot;') { analyseCitation(); } else if (c == '&amp;' || c == '|') { analyseLogic(c); } else if (Character.isDigit(c)) { analyseDigit(c); } else if (Character.isLetter(c) || c == '_') { analyseLetter(c); }} CommonFor example, when I get ‘+’, I directly new a Word typify the “PLUS”. FunctionFor example When I get &lt; , enter functionanalyseRelation read one char more. If it is=, analyze LEQ… 12345678if (c == '&lt;') { c = getChar(); if (c == '=') { words.add(new Word(&quot;&lt;=&quot;)); } else { unGetChar(); words.add(new Word(&quot;&lt;&quot;)); } analyseLogic is as the same. Digit and LetterDigit: When I get a digit, it means I will scan a serial of some digits and turn them into a Word typify “INTCON”. Letter: When I get a letter, it means I will scan a string about letter or digit. It maybe a “IDENFR” or “STRCON”, which depends on whether it is in key map or not. Wordclass Word: 12345public class Word { private String identification; private String content; private String type;} Capsulate the initial function, I only need to new Word(...) in the main processor, which will create the corresponding word. For example 12345public Word(char identification) { this.identification = String.valueOf(identification); this.type = new KeyWordMap().getType(this.identification); this.content = this.identification;} As for KeyWordMap, it is a HashMap, mapping the string of word and its type. 1234567public KeyWordMap() { keyWords = new HashMap&lt;&gt;(); keyWords.put(&quot;main&quot;, &quot;MAINTK&quot;); keyWords.put(&quot;const&quot;, &quot;CONSTTK&quot;); keyWords.put(&quot;int&quot;, &quot;INTTK&quot;); ... } After CodeFile readingRead file by line is not convenient for preread and undo, so I read the file into a single String at first. The method is read by line, add \\n after every line and scan every char. When I get \\n, lineNum++ 123456789private String transferFileToCode() { BufferedReader bf = new BufferedReader(reader); StringBuffer buffer = new StringBuffer(); String s = null; while ((s = bf.readLine()) != null) { buffer.append(s).append(&quot;\\n&quot;); } return buffer.toString();} AnalyseAbout analyst, it is different from what before coding. First, I need analyze word one by one, so I add global variety index to memorize where is the pointer. Besides, I met the situation that I need read one more or undo, so I encapsulate the function ungetChar and getChar, which will be convenient for me to analyze. 1234567891011121314151617181920private Character getChar() { if (index &lt; code.length()) { char c = code.charAt(index); if (c == '\\n') { lineNum++; } index++; return c; } else { return null; }}private void unGetChar() { index--; char c = code.charAt(index); if (c == '\\n') { lineNum--; }} Slash // : When it comes to \\n , stop. 1234567do { c = getChar(); if (c == null || c == '\\n') { return; // 判断为//注释，结束分析 }} while (true); /* */: Get char until */ appears 123456789101112131415do { c = getChar(); if (c == null) { return; } if (c == '*') { c = getChar(); if (c == '/') { return; // 判断为/* */注释，直接结束分析 } else { unGetChar(); } }} while (true); 语法分析Requirement: Based on the words identified by the lexical analysis program, identify various grammatical elements according to the grammatical rules. Recursive descent method is used to analyze the grammatical components defined in the grammar. Before CodeData ReadingLike the lexical analyst, I prepared function getWord getNextWord and so on. At the same time, there is a global variety (Word) curWord to display which word it is when I read ArrayList&lt;Word&gt; words from lexical analyst one by one. My analyst tragedy is as follows: To normal rule: I keep getting words and analyze them To expression rule: I scan the whole expression first, which is implemented by function getExp. Then I divide the expression and use method recursive descent to analyze them. getExp like 12345678910111213private ArrayList&lt;Word&gt; getExp() { ArrayList&lt;Word&gt; exp = new ArrayList&lt;&gt;(); while (true) { if (word is symbol of end) { break; } ... getWordWithoutAddToGrammar(); exp.add(curWord); word = getNextWord(); } return exp;} recursive descentAccording to Grammatical Rules, code function for every term of rule. Main idea: read a word, check what it symbolize and enter the next analyzing function. For example: to 1CompUnit → {Decl} {FuncDef} MainFuncDef // 1.是否存在Decl 2.是否存在 FuncDef I analyze like this: 12345678910111213141516171819private void analyseCompUnit() { Word word = getNextWord(); while (word.typeEquals(&quot;CONSTTK&quot;) || ( word.typeEquals(&quot;INTTK&quot;) &amp;&amp; getNext2Word().typeEquals(&quot;IDENFR&quot;) &amp;&amp; !getNext3Word().typeEquals(&quot;LPARENT&quot;))) { analyseDecl(); word = getNextWord(); } while (word.typeEquals(&quot;VOIDTK&quot;) || ( (word.typeEquals(&quot;INTTK&quot;) &amp;&amp; !getNext2Word().typeEquals(&quot;MAINTK&quot;)))) { analyseFuncDef(); word = getNextWord(); } if (word.typeEquals(&quot;INTTK&quot;) &amp;&amp; getNext2Word().typeEquals(&quot;MAINTK&quot;)) { analyseMainFuncDef(); } else { error(); } grammar.add(&quot;&lt;CompUnit&gt;&quot;);} grammar is used for memorize output of lexical analyst and grammar analyst list. left recursion1加减表达式 AddExp → MulExp | AddExp ('+' | '−') MulExp // 1.MulExp 2.+ 需覆盖 3.- 需覆盖 Check if the exp has ‘+’ or ‘-‘. If it has, separate the exp to AddExp and MulExp. Then analyze them separately. After Codeleft recursionThe method used before is not perfect for recursive descent. So I changed my rewrite way. to 1加减表达式 AddExp → MulExp | AddExp ('+' | '−') MulExp // 1.MulExp 2.+ 需覆盖 3.- 需覆盖 Rewrite it like 1AddExp → MulExp ('+' | '−') MulExp ('+' | '−') MulExp ... Code like 1234567891011private void analyseMulExp(ArrayList&lt;Word&gt; exp) { Exps exps = divideExp(exp, new ArrayList&lt;&gt;(Arrays.asList(&quot;MULT&quot;, &quot;DIV&quot;, &quot;MOD&quot;))); int j = 0; for (ArrayList&lt;Word&gt; exp1 : exps.getWords()) { analyseUnaryExp(exp1); grammar.add(&quot;&lt;MulExp&gt;&quot;); if (j &lt; exps.getSymbols().size()) { grammar.add(exps.getSymbols().get(j++).toString()); } }} Function divideExp is used for divide the whole exp passed by getExp or the pre function. divideExp: In: orignal: exp stop symbol: symbol Out: List of divided exp and symbol. 12345678910111213141516171819202122232425262728293031323334353637383940private Exps divideExp(ArrayList&lt;Word&gt; exp, ArrayList&lt;String&gt; symbol) { ArrayList&lt;ArrayList&lt;Word&gt;&gt; exps = new ArrayList&lt;&gt;(); ArrayList&lt;Word&gt; exp1 = new ArrayList&lt;&gt;(); ArrayList&lt;Word&gt; symbols = new ArrayList&lt;&gt;(); boolean unaryFlag = false; int flag1 = 0; int flag2 = 0; for (int i = 0; i &lt; exp.size(); i++) { Word word = exp.get(i); if (word.typeEquals(&quot;LPARENT&quot;)) { flag1++; } if (word.typeEquals(&quot;RPARENT&quot;)) { flag1--; } if (word.typeEquals(&quot;LBRACK&quot;)) { flag2++; } if (word.typeEquals(&quot;RBRACK&quot;)) { flag2--; } if (symbol.contains(word.getType()) &amp;&amp; flag1 == 0 &amp;&amp; flag2 == 0) { //UnaryOp if (word.typeOfUnary()) { if (!unaryFlag) { exp1.add(word); continue; } } exps.add(exp1); symbols.add(word); exp1 = new ArrayList&lt;&gt;(); } else { exp1.add(word); } unaryFlag = word.typeEquals(&quot;IDENFR&quot;) || word.typeEquals(&quot;RPARENT&quot;) || word.typeEquals(&quot;INTCON&quot;) || word.typeEquals(&quot;RBRACK&quot;); } exps.add(exp1); return new Exps(exps, symbols);} Exps 1234public class Exps { private ArrayList&lt;ArrayList&lt;Word&gt;&gt; words; private ArrayList&lt;Word&gt; symbols;} other bugsMost bugs are produced by function getExp and divideExp because of some situations are ignored. So I always get something like index out of range… So I changed some symbol of stop getting expression and modify the rules to divide or not the expression and so on. 错误处理Before CodeCreate the symbol tableSymbol class 123456public class Symbol { private String type; private int intType; private String content; private int area = 0;} Type means the type of the symbol. IntType is an integer. If it’s 0, the symbol is int. if it’s 1, the symbol is int[], if it’s 2, the symbol is int[] []… Content is its content. Area is where is it. I create a HashMap of Symbols, memorizing symbols created in each area. When I enter a new area, area++. When I leave an area, area–, with the corresponding Symbols are destroyed. 123456private HashMap&lt;Integer, Symbols&gt; symbols = new HashMap&lt;&gt;();private HashMap&lt;String, Function&gt; functions = new HashMap&lt;&gt;();private ArrayList&lt;Error&gt; errors = new ArrayList&lt;&gt;();private int area = -1;private boolean needReturn = false;private int whileFlag = 0; needReturn means if the current function need to return. whileFlag means if the current code block is in while circle. ErrorsaJust check format 12345678910111213141516public boolean isFormatIllegal() { for (int i = 1; i &lt; content.length() - 1; i++) { char c = content.charAt(i); if (!isLegal(c)) { if (c == '%' &amp;&amp; content.charAt(i + 1) == 'd') { continue; } return true; } else { if (c == '\\\\' &amp;&amp; content.charAt(i + 1) != 'n') { return true; } } } return false;} b cB: Every time I get an identity, check if there is the same symbol has been defined in this area. 123private boolean hasSymbolInThisArea(Word word) { return symbols.get(area).hasSymbol(word);} C: Check all area. If the symbol has been defined. Functions are as the same. 12345678private boolean hasSymbol(Word word) { for (Symbols s : symbols.values()) { if (s.hasSymbol(word)) { return true; } } return false;} d eTo check if the function parameters are matched, I memorize parameters of every function and when I met a function call, I will scan the function call parameters and match them. I prepare a function to do this. Finally I found I need to use recursive descent again, so I add the check procedure to the recursive descent of the grammatical analyst. Please check the After Code/Error d and e f gThere is a global variety needReturn used to display if the current function need return. if it does but there is no return in the end of the code block, or if it doesn’t but there is return, the error will be memorized. hJust check if it is a const. 123if (isConst(word)) { error(&quot;h&quot;, word.getLineNum());} i j kCapsulate function about checking missing of the symbol For example: 1234567private void checkParent() { if (getNextWord().typeEquals(&quot;RPARENT&quot;)) { getWord();// ) } else { error(&quot;j&quot;); }} lCount the number of the parameters of string and printf separately and check if they equal. mThere is a global variety whileFlag symbolize if the code block is in while circle. If it isn’t, any continue and break will produce error. After CodeAreaI mark the area++ when I get a block or a function, but it will lead to the situation that when enter a code block of a function, the parameters of the function can’t be memorize in the different are with the block of the function. So I changed the rules to mark area++. 1234567private boolean analyseBlock(boolean fromFunc) { ... if (!fromFunc) { addArea(); } ...} Only when the block is not from the function, the area++. Error d and eTo check if the function parameters are matched, I set an array for every function. 123456public class Function { private String type; private String content; private String returnType; private ArrayList&lt;Integer&gt; paras;} When I get a function, I memorize its return type and paras. As for the ArrayList&lt;Integer&gt; paras, it reflects as follows: Type Example Integer Void -1 Int a 0 Int[] a[] 1 Int[] [] a[] [3] 2 So when I get a function call, I will check the parameter of it with what I have memorized before. 1234567891011private void checkParasMatchRParas(Word ident, ArrayList&lt;Integer&gt; paras, ArrayList&lt;Integer&gt; rparas) { if (paras.size() != rparas.size()) { error(&quot;d&quot;, ident.getLineNum()); } else { for (int i = 0; i &lt; paras.size(); i++) { if (!paras.get(i).equals(rparas.get(i))) { error(&quot;e&quot;, ident.getLineNum()); } } }} As for getting the parameters real type, I add the analyst procedure to the recursive descent of the grammatical analyst. Just like: 12345private int analyseExp(ArrayList&lt;Word&gt; exp) { int intType = analyseAddExp(exp); grammar.add(&quot;&lt;Exp&gt;&quot;); return intType;} Every recursion will return an intType, which symbolize the final type of the expression. Because the terms of one expression must be the same type, so I return only one of them. This is the exit of the recursion. It will return a correct type of the expression to the top of the function. 1234567891011121314private int analyseLVal(ArrayList&lt;Word&gt; exp) { int intType = 0; ... if (word.typeEquals(&quot;LBRACK&quot;)) { intType++; ... } ... if (hasSymbol(ident)) { return getSymbol(ident).getIntType() - intType; } else { return 0; }} 代码生成In this part, I chose to generate Pcode. I designed a type of Pcode which is an Inverse Bolan expression stack and symbol table based virtual code. At the same time, I designed virtual machine to execute them. The Pcode virtual machine is an imaginary machine used to run Pcode commands. It consists of: A code area (code), an instruction pointer (EIP), a stack, a var_table, a func_table and a label_table. In the following passage, I will introduce how Pcode executes first and how to produce Pcode next. Before CodeHow does the virtual machine runFirst, we need a codes list and a stack(int). An eip: presents the address of current running code. A varTable: memorizes the address of the variety in stack. A funcTable: memorizes the address of the function in codes list. A labelTable: Memorizes the address of the label in codes list. Then, run the code one after another and manage the stack. How to distinguish different varietyBefore generate codes, differentiate varieties from different scopes by its only scope number, like: areaID + &quot;_&quot; + curWord.getContent(). In this situation, the variety will not appear more than once in codes, except for recursive function call, which will be solved by push varTable to stack(show later). Specific Code DefinitionFirst, define a class for PCode: 12345public class PCode { private CodeType type; private Object value1 = null; private Object value2 = null;} It presents one code object, which has a CodeType and two operating values. CodeType is an enum. Value1 and value2 maybe Integer or String or null, which depends on specific code type. Calculation TypeTwo operators: 123int b = pop();int a = pop();push(cal(a,b)); Single operator: 1push(cal(pop())); VARVAR command to declare a variable, save the variable name and the address assigned to it in the variable table. 1234case VAR: { Var var = new Var(stack.size()); varTable.put((String) code.getValue1(), var);} Var.class: 123456public class Var { private int index; private int dimension = 0; private int dim1; private int dim2;} DIMVARDIMVAR command to declare an array. Set the dimension information of the var. 1234567891011121314case DIMVAR: { Var var = getVar((String) code.getValue1()); int n = (int) code.getValue2(); var.setDimension(n); if (n == 1) { int i = pop(); var.setDim1(i); } if (n == 2) { int j = pop(), i = pop(); var.setDim1(i); var.setDim2(j); }} PLACEHOLDERPLACEHOLDER command to grow the stack down, allocate the new space to the variety and array. 1234567891011121314151617case PLACEHOLDER: { Var var = getVar((String) code.getValue1()); int n = (int) code.getValue2(); if (n == 0) { push(0); } if (n == 1) { for (int i = 0; i &lt; var.getDim1(); i++) { push(0); } } if (n == 2) { for (int i = 0; i &lt; var.getDim1() * var.getDim2(); i++) { push(0); } }} OtherCalculation type: pop the stack top once or twice, calculate them and push again. Jump Type: When it’s command about jump, just check if the condition is satisfied and change the eip. Function call: as follows Function call procedureFirst, before function call, there will be some parameters to be pushed into the stack. Each will be followed by a RPARA command, which memorize the address of the previous variety. 12345678case RPARA: { int n = (int) code.getValue1(); if (n == 0) { rparas.add(stack.size() - 1); } else { rparas.add(stack.get(stack.size() - 1)); }} Second, function CALL. Memorize the eip, stack top address, and information about the function(In fact, they will be pushed into stack too). Then update the varTable and eip. Ready for execute function. 12345678case CALL: { Func func = funcTable.get((String) code.getValue1()); retInfos.add(new RetInfo(eip, varTable, stack.size() - 1, func.getArgs(), func.getArgs(), nowArgsNum)); eip = func.getIndex(); varTable = new HashMap&lt;&gt;(); callArgsNum = func.getArgs(); nowArgsNum = 0;} Finally, return when it’s RET Restore eip, varTable from RetInfo, clear the new information pushed when function in the stack. 12345678910111213case RET: { int n = (int) code.getValue1(); RetInfo info = retInfos.remove(retInfos.size() - 1); eip = info.getEip(); varTable = info.getVarTable(); callArgsNum = info.getCallArgsNum(); nowArgsNum = info.getNowArgsNum(); if (n == 1) { stack.subList(info.getStackPtr() + 1 - info.getParaNum(), stack.size() - 1).clear(); } else { stack.subList(info.getStackPtr() + 1 - info.getParaNum(), stack.size()).clear(); }} Value or AddressPush value or address of the variety is an important thing, it depends on what I need, which will be presented when I describe how to generate codes. The command action is as follows(getAddress is used for get the address of the previous variety ). 12345678910111213case VALUE: { Var var = getVar((String) code.getValue1()); int n = (int) code.getValue2(); int address = getAddress(var, n); push(stack.get(address));}...case ADDRESS: { Var var = getVar((String) code.getValue1()); int n = (int) code.getValue2(); int address = getAddress(var, n); push(address);} Code GenerateCode generated from the grammatical analyst procedure. DeclarationThere is no need to distinguish const and var. When declare a variety, just new a variety and let it point to the stack top. Then if it has an initialization, just push the values one after another. If not, add a PLACEHOLDER command to push something(I push 0) to the stack to hold the place. Assign sentenceIn this situation, first calculate and push the address of the variety to the stack top. Then analyze expressions. After that, there are only two number in the stack, which are address and value. Assign the value to the address. Condition control sentenceFirst, generate labels. Then, place jump sentences in the proper places. labels about if and while will be generated and then stored in a stack type structure. like: 1234whileLabels.add(new HashMap&lt;&gt;());whileLabels.get(whileLabels.size() - 1).put(&quot;while&quot;, labelGenerator.getLabel(&quot;while&quot;));whileLabels.get(whileLabels.size() - 1).put(&quot;while_end&quot;, labelGenerator.getLabel(&quot;while_end&quot;));whileLabels.get(whileLabels.size() - 1).put(&quot;while_block&quot;, labelGenerator.getLabel(&quot;while_block&quot;)); Take if as example: 12345678910111213141516if (word.typeEquals(&quot;IFTK&quot;)) { codes.add(new PCode(CodeType.LABEL, ifLabels.get(ifLabels.size() - 1).get(&quot;if&quot;))); ... analyseCond(&quot;IFTK&quot;); ... codes.add(new PCode(CodeType.JZ, ifLabels.get(ifLabels.size() - 1).get(&quot;else&quot;))); codes.add(new PCode(CodeType.LABEL, ifLabels.get(ifLabels.size() - 1).get(&quot;if_block&quot;))); analyseStmt(); codes.add(new PCode(CodeType.JMP, ifLabels.get(ifLabels.size() - 1).get(&quot;if_end&quot;))); codes.add(new PCode(CodeType.LABEL, ifLabels.get(ifLabels.size() - 1).get(&quot;else&quot;))); if (word.typeEquals(&quot;ELSETK&quot;)) { getWord(); //else analyseStmt(); } codes.add(new PCode(CodeType.LABEL, ifLabels.get(ifLabels.size() - 1).get(&quot;if_end&quot;)));} while: 12345678910111213141516171819202122232425262728if (word.typeEquals(&quot;WHILETK&quot;)) { ... codes.add(new PCode(CodeType.LABEL, whileLabels.get(whileLabels.size() - 1).get(&quot;while&quot;))); ... analyseCond(&quot;WHILETK&quot;); ... codes.add(new PCode(CodeType.JZ, whileLabels.get(whileLabels.size() - 1).get(&quot;while_end&quot;))); codes.add(new PCode(CodeType.LABEL, whileLabels.get(whileLabels.size() - 1).get(&quot;while_block&quot;))); analyseStmt(); ... codes.add(new PCode(CodeType.JMP, whileLabels.get(whileLabels.size() - 1).get(&quot;while&quot;))); codes.add(new PCode(CodeType.LABEL, whileLabels.get(whileLabels.size() - 1).get(&quot;while_end&quot;))); whileLabels.remove(whileLabels.size() - 1);}// breakif (word.typeEquals(&quot;BREAKTK&quot;)) { getWord();//break codes.add(new PCode(CodeType.JMP, whileLabels.get(whileLabels.size() - 1).get(&quot;while_end&quot;))); ...}// continueif (word.typeEquals(&quot;CONTINUETK&quot;)) { getWord();//continue codes.add(new PCode(CodeType.JMP, whileLabels.get(whileLabels.size() - 1).get(&quot;while&quot;))); ...} After CodeBecause of some runtime errors and information shortages, I added and removed some Pcode. At the same, there are some new troubles about address pass and short circuit calculation. Specific Code DefinitionIn Operation, push() means put value into the top of the stack. pop() means pop the value from the top of the stack. Common Type CodeType Value1 Value2 Operation LABEL Label_name Set a label VAR Ident_name Declare a variety PUSH Ident_name/Digit push(value1) POP Address Ident_name *value1 = value2 JZ Label_name Jump if stack top is zero JNZ Label_name Jump if stack top is not zero JMP Label_name Jump unconditionally MAIN Main function label FUNC Function label ENDFUNC End of function label PARA Ident_name Type Parameters RET Return value or not Function return CALL Function name Function call RPARA Type Get parameters ready for function call GETINT Get a integer and put it into stack top PRINT String Para num Pop values and print. DIMVAR Ident_name Type Set dimension info for array variety VALUE Ident_name Type Get the variety value ADDRESS Ident_name Type Get the variety address PLACEHOLDER Push something to hold places EXIT Exit CodeType Value1 Value2 Operation ADD + SUB - MUL * DIV / MOD % CMPEQ == CMPNE != CMPGT &gt; CMPLT &lt; CMPGE &gt;= CMPLE &lt;= AND &amp;&amp; OR || NOT ! NEG - POS + short circuit calculationThere are two situations I need to use short circuit calculation : 121. if(a&amp;&amp;b) // a is false2. if(a||b) // b is true This seems not an easy thing and I acutally spent lots of time to solve it. My method is as follows: First, when I analyze analyseLOrExp, every analyseLAndExp will be followed by a JNZ, which is used for detect if the cond is false. If it is, jump to the if body label. At the same time, I generated cond label, which is ready for the analyseLAndExp. 12345678910111213141516171819private void analyseLOrExp(ArrayList&lt;Word&gt; exp, String from) { ... for (...) { ... String label = labelGenerator.getLabel(&quot;cond_&quot; + i); analyseLAndExp(exp1, from, label); codes.add(new PCode(CodeType.LABEL, label)); if (...) { codes.add(new PCode(CodeType.OR)); } if (...) { if (...) { codes.add(new PCode(CodeType.JNZ, ifLabels.get(ifLabels.size() - 1).get(&quot;if_block&quot;))); } ... } ... }} In the analyseLAndExp, every analyseEqExp will be followed by a JZ, which is used for detect if the cond is true. If it is, jump to the cond label I set just now. 12345678910111213141516private void analyseLAndExp(ArrayList&lt;Word&gt; exp, String from, String label) { ... for (...) { ... analyseEqExp(exp1); if (...) { codes.add(new PCode(CodeType.AND)); } if (...) { if (...) { codes.add(new PCode(CodeType.JZ, label)); } ... } }} By these means, short circuit calculation is solved. 总结感想[[编译实验总结感想]]","link":"/2021/11/16/Alxa_Compiler%20%E7%BC%96%E8%AF%91%E5%99%A8/"},{"title":"IoTMonitor","text":"IoTMonitor用于展示IoT课程开发板的相关信息并进行控制 可以通过调用我们部署的服务器api及时获取开发板的温湿度数据，也可以发送开关电机的指令，并且可以设置温湿度超过某阈值后报警，同时有历史记录来提供任意时间段内好看的温湿度曲线 图片 简介主页面分为三个部分：设备状态，历史记录，设置 UI整体使用卡片式扁平设计 设备状态刷新按钮和更新温湿度数据，温湿度可以显示此时设备的温湿度传感器信息，打开电机和关闭电机功能用于控制控制板马达 其中，温湿度会每秒自动进行更新，2位小数点保留 历史记录通过DatePicker选择起止时间，再点击获取，即可得到此段时间内的温湿度曲线，触摸曲线还可以动态显示任意一点的数值（此处使用了ChartView库） 默认显示2天前到现在的曲线，第一次打开app时会同步一次 设置在设置页面，通过选择器选择阈值后点击保存，当温度高于此阈值时，开发板电机将会转动 同时，打开app后每次阈值的设置会被记录，以便查看设置情况 功能 实时显示开发板传感器温湿度 实时控制开发板电机马达转动与否 获取任意时间段开发板传感器温湿度历史曲线 通过设置过热阈值，当温度超过此值，进行报警 后台实时更新 实现该app主要通过HTTP GET和POST请求像我们的服务器后端发送请求，后端通过电信平台的api调用来发送相关指令，电信平台再把指令下达到开发板，来实现app与开发板的交互 该app的UI其中一部分复用了我之前的项目Memo的代码","link":"/2021/11/28/IoTMonitor/"},{"title":"与鸟巢的匆匆一面","text":"今赴一场蓄谋已久的生日宴会，开场一个半小时后先行撤退且不辞而别，在此先把责任全部归咎于我自己，母上也对我的行为直呼无趣，倒也不是自讨没趣，只是封校许久难得有机会出来，想要自行去溜达一圈。 我在乘车前往目的地的路上，看到鸟巢灯火通明的一瞬间，突然感到与繁景告别已久（一个多月），仿佛自己离开了这个城市。恍然间审视起来自己这一个月真的是在有意义的活着吗？貌似是陷在编译里面虚度时间。忽然想起那句：北航人是没有生活的(链接)，直呼赞同。故在按部就班完成生日的惊喜后按耐不住，感觉在座的各位都有自己在这一场聚会中想要做的事情，我不甚相融其中，只想奔赴鸟巢，而且还有点饿，想吃点告别已久的，学校外边的食物，遂离开。 奔赴鸟巢并不顺利，沿湖东路莫名被封，我四处绕路，路上遇见几位也是如此，最后还是从东侧大道进入，赶在闭园的前几分钟，好心的保安提示我赶紧进去，进去后反倒不如在湖边拍下的风景好，中轴线的人也不多，只有几个年轻人还在滑滑板，却也算完成了今日的心愿。 见到倒计时板只剩下76天，想到第一次来这个地方，已相隔七百来天，不甚感慨，在BUAA的这两年，在北京的这两年。 离开之际，地铁口附近有一些劲爆的音乐和放纵的，各个年龄段的朝阳群众正在狂欢。待了一会儿，离开了，也没吃到饭。（回BUAA吃了难吃的烤冷面和土豆）","link":"/2021/11/19/%E4%B8%8E%E9%B8%9F%E5%B7%A2%E7%9A%84%E5%8C%86%E5%8C%86%E4%B8%80%E9%9D%A2/"},{"title":"我的GitHub数据","text":"","link":"/2021/11/27/%E6%88%91%E7%9A%84GitHub%E6%95%B0%E6%8D%AE/"},{"title":"我的语言使用统计","text":"","link":"/2021/11/27/%E6%88%91%E7%9A%84%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8%E7%BB%9F%E8%AE%A1/"},{"title":"推歌 第二期","text":"uu们最近给我推的歌大家一起分享 YOASOBI新专辑 稚名林檎","link":"/2021/12/04/%E6%8E%A8%E6%AD%8C%20%E7%AC%AC%E4%BA%8C%E6%9C%9F/"},{"title":"推歌 第一期","text":"uu们最近给我推的歌大家一起分享 カンタレラgrace edition 这首的交响版本也很棒： ODDTAXI 魂之轮回 HB to 剑风 魂のルフラン (魂之轮回) イナヅマ侍 旅行","link":"/2021/12/01/%E6%8E%A8%E6%AD%8C%20%E7%AC%AC%E4%B8%80%E6%9C%9F/"},{"title":"数学分析","text":"1 考完了，nmd难死了 数列极限 定义 Stolz 单调有界 函数极限 定义 连续 无穷大 无穷小 等价无穷小 1的无穷次 $e^{…}$ 一致连续 证明 $|f(x_1)-f(x_2)| &lt; A |x_1-x_2|$ $arctanx$与中值定理 导数 隐函数求导 参数方程求导 $\\frac{dy}{dx} = \\frac{\\frac{dy}{dt}}{\\frac{dx}{dt}}$ 高阶导数 莱布尼兹公式 $(uv)^n = \\sum_{k=0}^nu^{(n-k)}v^{k}$ 微分中值定理 罗尔中值定理 拉格朗日中值定理 函数性质 洛必达 泰勒公式 微分 Taylor公式 Peano余项 Lagrange余项","link":"/2021/12/04/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/"},{"title":"新北老年活动中心","text":"新北区迷惑大赏我真的不理解为什么他们喜欢在这片区域晒太阳和带小孩 上个学期上早八吃早饭，总会有一群阿姨比我更早，我不知道他们着不着急，反正我很着急 新的乒乓球桌也理所应当的成为了他们的活动设施 合一又是另一回事，属于是中小学食堂了","link":"/2021/11/26/%E6%96%B0%E5%8C%97%E8%80%81%E5%B9%B4%E6%B4%BB%E5%8A%A8%E4%B8%AD%E5%BF%83/"},{"title":"泳社约游群的有趣见闻","text":"想来自己第一次跟着泳社学游泳到现在已经2年了，当初教我的人大多都已经毕业了。","link":"/2021/11/23/%E6%B3%B3%E7%A4%BE%E7%BA%A6%E6%B8%B8%E7%BE%A4%E7%9A%84%E6%9C%89%E8%B6%A3%E8%A7%81%E9%97%BB/"},{"title":"Hexo-Front-matter","text":"Demotitle:date: 2021-11-23 10:09:18tags: [hexo]categories:cover: 官方说明以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。 参数 描述 默认值 layout 布局 config.default_layout title 标题 文章的文件名 date 建立日期 文件建立日期 updated 更新日期 文件更新日期 comments 开启文章的评论功能 true tags 标签（不适用于分页） categories 分类（不适用于分页） permalink 覆盖文章网址 excerpt Page excerpt in plain text. Use this plugin to format the text disableNunjucks Disable rendering of Nunjucks tag {{ }}/{% %} and tag plugins when enabled lang Set the language to override auto-detection Inherited from _config.yml thumbnail 封面","link":"/2021/11/23/Hexo/Hexo-Front-matter/"},{"title":"Hexo食用方法","text":"Blog搭建https://zhuanlan.zhihu.com/p/26625249 https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html 安装：npm install -g hexo Hexo指令基本1234hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章hexo g == hexo generate #生成hexo s == hexo server #启动服务预览hexo d == hexo deploy #部署 域名解析在github项目根目录新建一个名为CNAME的文件，里面填写域名 然后CNAME解析 图片https://www.cnblogs.com/bzsheng/p/13802829.html","link":"/2020/12/21/Hexo/Hexo%E9%A3%9F%E7%94%A8%E6%96%B9%E6%B3%95/"},{"title":"BUAAOO-第一单元总结","text":"BUAAOO-第一单元总结基于度量分析程序结构第一次作业对多项式的求导，Expression类表示一个表达式，其成员变量为Term对象的hashmap，Interpreter用于解析输入字符串，返回一个Expression (1) 基于度量分析类复杂度 方法复杂度 可以看到Term.toString过于复杂，原因是在幂函数转化为string类型时使用了过多的if，此处可以进行优化。 本次作业没有被其他同学hack。性能方面，由于使用了hashmap，表达式基本上达到了最短，没有考虑到正负号打头和x**2拆分为x*x等细节 本次作业没有很好的给下一次作业做好铺垫，表达式解析方法过于粗暴。 第二次作业本次作业难度骤升，因为要考虑表达式因子，第一次作业使用的暴力解析字符串方法骤然失效，遂彻底进行重构。我在本次作业中大量时间用于研究如何递归下降读取表达式。求导本身并不困难，创建Factor接口，sin，cos，幂函数，常量，term，poly均继承Factor，保证每个因子都有实现tostring和求导以及simplify方法。其中，Term是一些Factor构成的List，Poly是一些Term构成的List。在对Poly进行求导会自然向下递归。 Patterns存放了提前编译好的正则表达式 Parser用于递归下降解析表达式 类复杂度 可见Parser中方法复杂度较高，这是因为在解析字符串过程中，我调用了过多的私有方法，此处可以进行模块化优化。 Term中由于simplify和diff的操作过于复杂，整体复杂度较高，此处可以把一些操作在初始化term时完成来优化。 方法复杂度 复杂度较高的几个方法 其中Term的simplify如前文所述，该方法过于臃肿。 第三次作业本次作业加入了sin和cos内的嵌套已经wrong format的检测。由于和上一次作业的架构相似，仅需调整sin和cos内成员变量为Poly，并且对parser进行进一步递归下降即可。wrong format成为了难点，由于上一次作业的递归下降读取基于表达式正确的情况，这次由于格式可能的错误，我对parser进行了较大的调整，首先对字符串进行多余空白符和非法字符的判断，随后在递归下降读取过程中判断格式错误，包括括号和幂函数的错误。 结构与第二次作业相似，加入了format checker和WF exception 类复杂度 方法复杂度 其中较高的和第二次作业类似 其中getCosFactor和getSinFactor是由于进行了格式的判断，此处重用了相似的代码，可以归类为一个方法进行优化。 分析自己程序的bug在前两次作业中，互测阶段没有被找到bug，在个人初期写代码过程中，遇到的一些BUG如：没有及时在while循环中continue，在if判断中逻辑过于复杂导致自己搞错了与或非逻辑，往往正是这类小的失误导致耗费大量时间debug，因此在写程序过程中应该时刻关注代码的复杂度。 第三次作业，互测阶段被hack了两次，问题均是出在格式判断正负号和常数之间的空格时，我的判断条件出了问题，误判了一些正确的格式，自己写wrong format时没有考虑到各种情况，测试不够充分。 对比分析出现bug的方法和未出现bug的方法在代码行和圈复杂度上的差异：在我的前两次作业中自己发生的BUG很明显主要是因为圈复杂度导致的，在第三次作业被hack的这个BUG主要是因为Wrong Format欠考虑。 分析自己发现别人程序bug采用策略主要采取的策略构建一些我在写代码过程中遇到的容易发生bug的数据点来对别人的代码进行测试，使用python进行核对。 重构经历总结第一次到第二次作业过程中经历了重构，原因是第一次作业没有留下足够的拓展空间，解析字符串过于暴力，但是在第二次作业理解了如何递归下降进行读取解析之后，重构反而显得思路更加清晰，在这个架构下，第三次作业完成的比较容易。由于重构前后属2次作业内容，没有可比较性，故未通过数据进行对比。 吸取的教训是：尽可能给程序留下充足的可扩展空间，已经写好的类尽量保证其完备性，在拓展时就尽量不去修改了，类之间的保证解耦，方法复杂度尽可能底，如此下来可以保证程序的鲁棒性。 心得体会第一次作业思维还是比较偏面向过程的，对字符串进行了暴力解析，对象也仅仅停留在所谓的Term和Expression上。 在第二次作业难度骤然增加后，明白了面向对象的重要性，一个接口下的多个类逻辑分明，调用各自的方法，另外，在第二次作业过程中，理解了递归下降的思路，这是一种逻辑非常清晰的做法，为我的第三次作业节省了大量的时间。 第三次作业在格式判断上填了第二次作业留下的坑，更进一步理清了整个程序的逻辑，虽然最后在性能分上没有占到很多优势，但是总体下来我认为代码的结构和逻辑还是很清晰的，代码总计行数705完成了。 总的来说，本次作业虽然遇到一些困难（指第二次作业递归下降和如何优化）但总体来说还是学到了很多东西，包括但不仅限于面向对象的思维，正则表达式的使用，Java容器操作的熟练，递归等。","link":"/2021/03/28/BUAAOO/BUAAOO-%E7%AC%AC%E4%B8%80%E5%8D%95%E5%85%83%E6%80%BB%E7%BB%93/"},{"title":"BUAAOO-第三单元总结","text":"BUAAOO-第三单元总结实现规格所采取的设计策略在第一次作业中，开始没有经验，采取了直接对规格进行“翻译”的策略，对数据保存直接使用了定长数组，后发现这样操作代码可读性不高且性能较差，于使重新改写为使用HashMap保存。 第二次作业中，虽然使用容器实现了数据存储，但是算法方面由于直接按照规格描述进行实现，导致了大量的CTLE。于使此后，阅读完规格后我能对方法有彻底理解后再根据自己的理解去实现。 再有以上经验后，认为实现规格应采取如下步骤： 完整阅读规格 选择正确的数据结构，容器 正确处理异常 选择合适的算法实现方法 基于JML规格来设计测试的方法和策略 再次阅读JML规格，检查在方法被实现前，异常是否被正确，处理检查方法是否满足规格的ensure 使用Junit，针对每一个具一定不确定因素的方法编写测试样例进行测试 对程序整体进行大数据集测试 本单元看似简单，但在测试方面我做的并不理想，在三次作业中均出现了非常低级的BUG 第一次： 原因是在阅读JML时并未彻底理解其含义，直接按照规格进行书写，导致进行了逻辑完全错误的一个判断 第二次： 低估了自己犯低级错误的的概率（当然本次作业主要问题在CTLE上） 第三次： 自作聪明在判断异常之前就删除了message，造成了大量WA 三次作业出现的bug基本都是在阅读JML规格时丧失理性造成的，事实证明在阅读JML时候一定要保证独立思考的能力，当然锅也不能全部甩到这里，归根结底还是自己懒得测试且高估了自己写简单代码不出错的能力。 (Junit暴力测试？) 12345678910111213141516171819202122232425262728293031@org.junit.jupiter.api.Testvoid sendIndirectMessage() throws EqualPersonIdException, PersonIdNotFoundException, EqualRelationException, MessageIdNotFoundException, EmojiIdNotFoundException, EqualMessageIdException, RelationNotFoundException, EqualEmojiIdException { Network network = new MyNetwork(); network.addPerson(new MyPerson(1, &quot;A&quot;, 10)); network.addPerson(new MyPerson(3, &quot;N&quot;, 10)); network.addPerson(new MyPerson(6, &quot;F&quot;, 10)); network.addRelation(1, 3, 10); network.addRelation(3, 6, 15); network.addRelation(1, 6, 26); network.storeEmojiId(1); network.storeEmojiId(3); network.storeEmojiId(5); network.storeEmojiId(7); network.storeEmojiId(9); network.storeEmojiId(91); network.addMessage(new MyMessage(1, 10, network.getPerson(1), network.getPerson(6))); network.addMessage(new MyEmojiMessage(2, 1, network.getPerson(1), network.getPerson(6))); network.addMessage(new MyEmojiMessage(3, 1, network.getPerson(1), network.getPerson(6))); network.addMessage(new MyEmojiMessage(4, 1, network.getPerson(1), network.getPerson(6))); network.addMessage(new MyEmojiMessage(5, 3, network.getPerson(1), network.getPerson(6))); network.addMessage(new MyEmojiMessage(6, 9, network.getPerson(1), network.getPerson(6))); network.addMessage(new MyEmojiMessage(7, 91, network.getPerson(1), network.getPerson(6))); network.addMessage(new MyEmojiMessage(8, 91, network.getPerson(1), network.getPerson(6))); for (int i = 0; i &lt; 8; i++) { network.sendMessage(i + 1); } assertEquals(4, network.deleteColdEmoji(1)); assertEquals(true,network.containsEmojiId(91)); network.deleteColdEmoji(3); assertEquals(false,network.containsEmojiId(91));} 容器选择和使用的经验 避免直接使用定长数组。 根据需求进行容器的选择，如果对象是通过ID来进行大部分操作，那么使用HashMap进行存储，如果对象如Person.messages，需要从头取出，从尾放入等操作，则使用ArrayList进行存储。适当的情景下也可使用Hashset来做集合的不重复性。 不确定要用什么的情况下，似乎还是用HashMap比较靠谱 性能问题本次作业会出现的性能问题主要集中在容器的选择，qbs的算法，ageMean，ageVar等的算法。 对于容器的问题，我的避免超时的方法是采取了适合的容器如HashMap 我在第二次作业中大面积出现了性能问题（估计能踩的坑我都踩了） qbs的算法采用了规格描述的算法直接进计算，于使我对其进行了并查集算法的修改，在addPerson和delPerson的时候就对拥有同一个根节点的节点构成一个集合。（一开始还写了DFS，慢的要死就算了，还写了一堆BUG，忙一下午，服了。） 1234567891011121314151617181920212223242526 private final HashMap&lt;Integer, Integer&gt; parent = new HashMap&lt;&gt;(); private final HashMap&lt;Integer, Integer&gt; rank = new HashMap&lt;&gt;();private int find(int id) { if (parent.get(id) != id) { parent.put(id, find(parent.get(id))); } return parent.get(id); } private void union(int id1, int id2) { int p = find(id1); int q = find(id2); if (p == q) { return; } if (rank.get(p) &lt; rank.get(q)) { parent.put(p, q); } else if (rank.get(p) &gt; rank.get(q)) { parent.put(q, p); } else { parent.put(p, q); rank.put(q, rank.get(q) + 1); } } ageMean，ageVar等的计算，起初我的计算直接采用了每次调用方法是从头开始计算的实现，结果导致每次计算要消耗大量的CPU超时，导致了CTLE，后改为在进行addperson的时候直接进行累加加和的操作，在询问ageMean的时候可以直接进行返回。 123456789101112131415161718192021222324252627282930313233343536private int ageSum = 0;private int ageMean = 0;private int ageVar = 0;private int valueSum = 0;@Overridepublic void addPerson(Person person) { people.put(person.getId(), person); ageSum += person.getAge(); ageMean = ageSum / people.size(); ageVar = 0; for (Person p : people.values()) { ageVar += (p.getAge() - ageMean) * (p.getAge() - ageMean); if (p.isLinked(person)) { valueSum += p.queryValue(person) * 2; } } ageVar = ageVar / people.size();}@Overridepublic void delPerson(Person person) { people.remove(person.getId()); if (people.isEmpty()) { initialData(); return; } ageSum -= person.getAge(); ageMean = ageSum / people.size(); ageVar = 0; for (Person p : people.values()) { ageVar += (p.getAge() - ageMean) * (p.getAge() - ageMean); if (p.isLinked(person)) { valueSum -= p.queryValue(person) * 2; } } ageVar = ageVar / people.size();} 架构设计除了各个对象的HashMap以外，network维护一个并查集，group维护多个基本数据，在addPerson的能操作时进行各个数据的更新。 不知道写什么了，这单元挺搞心态的，对自己写BUG的能力又有了新的认识，因为自己时间不够能力不足，总做不好测试这一块，我也不知道怎么办，就尽力别写bug吧。不讲丧气话，这单元学到了JML规格相关知识，好像还是挺“严谨”的，如果以后工作或者什么遇到了，应该挺受益的，不过有一说一，我是不会愿意去自己写这个JML的，如果有中文版的JML能几句话讲清楚，那没准可以试试。","link":"/2021/05/29/BUAAOO/BUAAOO-%E7%AC%AC%E4%B8%89%E5%8D%95%E5%85%83%E6%80%BB%E7%BB%93/"},{"title":"BUAAOO-第二单元总结","text":"BUAAOO-第二单元总结作业分析同步块与锁InputThread捕捉输入，将其加入waitQueue队列中 Dispatcher负责控制waitQueue，对waitQueue的操作需要经过Dispatcher Elevator为电梯个体对象，其内包含一个requests用于表示目前位于电梯里的请求 其中，锁全部位于调度器中 例如 12345678910111213public PersonRequest checkTopRequest() { synchronized (waitQueue) { int max = 0; PersonRequest request = null; for (PersonRequest r : waitQueue) { if (r.getFromFloor() &gt; max) { max = r.getFromFloor(); request = r; } } return request; }} 三次作业都为相同的设计，Dispatcher基本没有变动。 调度器设计与线程交互外部可以放心与调度器进行交互，类似生产者消费者模型，调度器维护waitQueue，输入线程通过调度器向其中加入请求，电梯通过调度器查询和获取请求 第二、三次作业中加入了多个电梯与dispatcher交互 电梯策略： Random：自由竞争，直接去找队列中第一个目标，接到请求后，优先处理电梯中的第一个请求，在运行过程中在每层判断是否可以接送乘客并且进行操作。 Morning：电梯位于1层，开始接人，2s后出发，一直送到电梯内请求列表的最高层后返回，依次循环 Night：直接前往队列中最高层接人，向下过程中继续接人，回到一层后依次循环。 UML第一次作业Main创建输入和电梯线程以及调度器，输入线程提供mode，requests，end等，调度器负责控制队列，elevator进行运行。 流程图： 第二次作业相比第一次作业，输入线程负责创建新的Elevator 流程图 第三次作业结构和第二次没有什么不同，在电梯类内部进行了ABC的区分，没有进行换乘的优化，仅仅是规定了各个电梯可人的层数后进行自由竞争。 流程图 分析自己程序的bug在第一次作业没有互测bug。 第二次作业自测的bug主要集中在没有正确结束线程。互测没有被找到bug，但是强测出现了一个超载的bug，原因在进行电梯可承载人数时加减号使用错误导致超载。 第三次作业自测阶段的bug主要在电梯由于型号不同，理论上结束标志不一，我在while循环结束的时候仅判断了input的信号，导致部分电梯提前结束，后来又因为没有正确结束导致while死循环CPU超时。 在互测中被hack一次，原因是我没有进行换乘优化，对方的数据点为集中的密集底层到高层数据，我的电梯只有C会去接人，导致超时。 分析自己发现别人程序bug所采用的策略能力有限，这几次没有对他人的程序进行bug测试 心得体会多线程的加入使得程序有了更多的不确定性，增加了测试的难度，但总而言之，只要做好线程的安全，如定义好线程安全类在进行操作，处理好线程的结束，不产生轮询，就可以避免多线程带来的bug。线程之间的交互在逻辑上就如同P6流水线的竞争一样，需要进行大量情况的考虑。在这几次作业中，我学会了多线程程序的正确处理。 最终代码量","link":"/2021/04/25/BUAAOO/BUAAOO-%E7%AC%AC%E4%BA%8C%E5%8D%95%E5%85%83%E6%80%BB%E7%BB%93/"},{"title":"BUAAOO-第四单元总结","text":"BUAAOO-第四单元总结总结本单元作业的架构设计本单元任务为设计UML分析器，包括类图，顺序图，状态图 第一次作业实现类图分析 将UML元素根据其含义分为如下层次结构 部分元素根据需求分装为MyXXX 根据逻辑层次，读入过程分为三个循环，分别处理三个层次的元素 循环轮次 处理元素 1 UmlClass UmlInterface UmlAssociationEnd 2 UmlOperation UmlAttribute UmlAssociation UmlGeneralization UmlInterfaceRealization 3 UmlParameter 第二次作业实现顺序图，状态图 将UML元素根据其含义分为如下层次结构 部分元素根据需求分装为MyXXX 根据逻辑层次，读入过程分为四个循环，分别处理四个层次的元素 循环轮次 处理元素 1 UmlClass UmlInterface UmlAssociationEnd UmlInteraction UmlStateMachine UmlRegion 2 UmlOperation UmlAttribute UmlAssociation UmlGeneralization UmlInterfaceRealization UmlLifeline UmlState UmlPseudostate UmlFinalState 3 UmlParameter UmlMessage UmlTransition 4 UmlEvent 第三次作业架构同第二次。 其他的就是一些图算法的问题了。 总结自己在四个单元中架构设计及OO方法理解的演进 单元 理解 第一单元 面向对象的层次化设计：factor，term，poly层次结构逻辑分明，各司其职，同时又都实现某接口，递归下降的操作过程中非常符合人的直觉感受。认识到清晰的逻辑架构的重要性。 第二单元 多线程设计：多线程的加入使得程序有了更多的不确定性。线程之间的交互在逻辑需要深入理解，UML流程图的作用。 第三单元 基于JML的设计：学到了JML规格相关知识，工程化思想进一步提升 第四单元 UML：清晰且彻底的理解了面向对象层次化设计的形态和结构 总结自己在四个单元中测试理解与实践的演进 单元 理解 实践 第一单元 利用python生存复杂数据，边界数据进行测试 第二单元 需要考虑线程之间时间差异可能带来的问题，性能方面也要注意特殊情况，形式化验证 第三单元 没怎么测，错了一片，看来测试很重要 第四单元 利用工具，手动构造较为复杂的UML图，进行测试。 总结自己的课程收获​ 16周连续的任务（其中一周有休息）任务量确实比较大，回首自己的前三篇博客，也能看到自己泡一天图书馆写程序的影子，为BUG抓狂的夜晚，周三看结果看到“你在强测中得到0分”的悲痛心情。 ​ 每周精确到天的任务，不得不说，这是一门硬课。但重要的是确实看到了自己的在这门课上的收获有多大。这是一门实实在在能学到很多东西的课程，无论是代码风格，程序基础，性能算法，还是最重要的架构设计，我都得到了比较大的提升，在最重要的架构设计上，我深刻理解了对于复杂程序甚至是工程程序中，无论是对个人还是团队合作，面向对象思想的重要性。 ​ 前几周投入的精力更大一些，第一单元和第二单元收获颇丰，得分也比较好看，第三单元有所松懈，有幸得到了强测0分体验。这门课没有考试，却比考试周突击的课能学到更多东西。 ​ 虽然最后作为社恐和菜鸡没有在研讨课发过言，也没得到什么奖，或许最后得分比较一般，但是这门课确实是我在计算机学院到目前为止感觉上的最舒服的一门课，没有什么遗憾了。 ​ 非常感谢可爱的吴际老师一学期的辛勤教学，lyj学长前两单元架构经验的倾情分享和研讨课课程组织，还有其他助教们全程的辛勤付出！ 立足于自己的体会给课程提三个具体改进建议 建议第三单元第四单元互换时间，第三单元内容简单，适合考期时间紧张的情况下写，第四单元的工作量相对来说太大了，难顶 对于面向对象这门课，希望少一些算法考察，第三单元的CTLE现象太坑人，第四单元的图算法太多，虽然算法也是必须掌握的内容，但是在本来任务量就大的情况下，我认为重心应该只放在架构设计上 第三单元可以压缩，三次作业难度都明显低于其他单元。 第四单元的重复工作希望可以有所减少，代码量感觉有点大。 希望每个单元的三次作业的描述能标记增量部分，每次拿到大几千字的文档，好多内容都和之前一模一样，也容易看不进去 研讨课加分政策感觉有点卷了，对于我这种又比较弱又社恐的人有种被push的感觉 （超过3个了，不好意思） 以上仅是作为一个比较弱的人的个人主观想法，可能存在发牢骚现象，如有不合理内容请无视，相信课程组多年来积累的经验，祝OO课程组越来越好！ 完结撒花！！！","link":"/2021/06/26/BUAAOO/BUAAOO-%E7%AC%AC%E5%9B%9B%E5%8D%95%E5%85%83%E6%80%BB%E7%BB%93/"},{"title":"最近在听","text":"苍白星辰于苍穹陨落 April 30, 2005Our child became the phantomWe named “The life of phantom” TsukushiIt was a night with the red moonBlazing beautifully, beautifully 而我将爱你所爱的人间 愿你所愿的笑颜 年年不相忘 月月常记起 也许雨一停 我就能再见到你 也许雨该一直下不停 凛冬将至 灵魂却燃烧着 感慨着 悲壮着 让我与你握别 再轻轻抽出我的手 是那样万般无奈的凝视 我也是高原的孩子啊 心里有一首歌","link":"/2021/11/20/%E5%B8%B8%E7%94%A8%E9%A1%B5/%E6%9C%80%E8%BF%91%E5%9C%A8%E5%90%AC/"},{"title":"Unknown collation- &#39;utf8mb4_0900_ai_ci&#39;","text":"运行sql脚本时 sql报错如下 Unknown collation: ‘utf8mb4_0900_ai_ci’ 原因mySQL版本不兼容，将sql文件中 utf8mb4_0900_ai_ci 替换成 utf8mb4_general_ci","link":"/2021/11/19/%E6%8A%80%E6%9C%AF%E7%B1%BB/Unknown%20collation-%20'utf8mb4_0900_ai_ci'/"},{"title":"Memo","text":"MemoMemo用于随时记录，记录生活中的某一刻，记录今天的心情，或是记录看过的一部电影，一本书，留下自己此时的感想，并在自己最爱的电影或书籍的二刷三刷后再次记录下时间和新的想法… 灵感来源于豆瓣，比起豆瓣的功能多出的个人需求为：需要一个简洁没有过量冗余信息的片单和书单记录软件，记录二刷，三刷的时间，以及想要随时记录每一天，并且在几年后回顾那年今日，留一些感动与感慨，让每一天都值得被纪念，故开发此软件。 图片 （介绍及短评摘自豆瓣，侵删） Mac, iPad适配 简介主页面主界面分为3个标签：主页，电影，书籍 主页 电影这里是你看过的电影片单，你可以随时看到你标记过的所有电影，以及在任何时候添加一个新的电影进入你的片单 进入某条电影，如果你输入的电影在数据库之中（数据来自豆瓣，侵删），你就可以看到关于电影的介绍：演员，导演，豆瓣评分，类别，介绍等，以及最重要的，在最下方，看到你第一次观看的时间以及感想 当然，点击此方框，你可以进入到第二次标记的页面，记录下你的第二次观影以及新的感想 书籍类似电影，这里是你的书单，你可以添加你看过的书籍，并且记录第n次阅读的体验，相信每一次阅读，都会发现不少新东西 功能 标记某一天的感受 标记某本电影，某本书 多次标记某电影和书的观看时间和感受 自动展示电影和书籍的相关图片与简介 图文并茂的主页卡片展示设计 在主页展示进一个月看过的电影 在主页展示今天以及那年今日的感想 架构以及实现源代码文件共25个 主要分为三个部分：Controller Model Views Controller一些静态函数，实现点击界面按钮后的某些后端反应以及后端用到的函数，如图像获取，日期格式化，Mark筛选等 其中图片的读取使用了异步加载url的方式，如果url没有解析成功将不会显示图片 123456789101112131415161718192021222324class ImageLoader: ObservableObject { var didChange = PassthroughSubject&lt;Data, Never&gt;() var data = Data() { didSet { didChange.send(data) } } init(urlString: String) { guard let url = URL(string: urlString) else { return } let task = URLSession.shared.dataTask(with: url) { (data, response, error) in guard let data = data else { return } DispatchQueue.main.async { self.data = data } } task.resume() }} Model主要用到的对象为Mark： 123456789101112131415class Mark: Codable, Identifiable{ var index:Int = 0 var type:ModelType = ModelType.NONE var name = &quot;&quot; var dates: [Date] = [] var feeling = &quot;&quot; init(index: Int,type:ModelType, name:String, date:Date, feeling:String){ self.index = index self.type = type self.name = name self.dates.append(date) self.feeling = feeling }} Movie, Book 为电影和书籍的简介，不进行重复的展示 他们遵循MarkableObject协议，用于在展示Mark详情时读取object后再作类型判断 1234struct Movie: Hashable, Codable, Identifiable, MarkableObject { var id: String = &quot;&quot; ...} ModelData负责数据存储的任务 用到了自带的UserDefaults.standard存储数据 movies和books分别为电影和书籍数据集，内置在app中 123456789101112131415161718final class ModelData: ObservableObject { var moviesDict = getMoviesDict(movies: load(&quot;movies.json&quot;)) var booksDict = getBooksDict(books: load(&quot;books.json&quot;)) @Published var marks: [Mark] = [] init() { loadMarks() } func loadMarks() { marks = UserDefaults.standard.object(([Mark]).self, with: &quot;Marks&quot;) ?? [] } func saveMarks() { let standard = UserDefaults.standard standard.set(object: marks, forKey: &quot;Marks&quot;) }} ModelType为枚举类型，用于Mark类型判断 123456enum ModelType: String, Codable { case NONE = &quot;无&quot; case MOVIE = &quot;电影&quot; case BOOK = &quot;书籍&quot; case DAY = &quot;今天&quot;} Views界面UI 用到了environmentObject来同步各个界面的数据 父界面给子界面传递@Binding的变量，子界面拿到引用直接演示和修改，不会出现数据不同步的问题 12345678910@mainstruct MemoApp: App { @StateObject private var modelData = ModelData() var body: some Scene { WindowGroup { ContentView() .environmentObject(modelData) } }} MainMenuMarkList: Mark列表，即展示电影和书籍列表 使用NavigationLink，向子界面：MarkDetail传递mark的引用 HomeView: 主界面 Mark关于Mark的界面 MarkDetail: 一个Mark的详情 大部分子界面都如此UI一样，引入modelData的环境变量，承接上一级传下来的@Binding变量，实现数据的同步 12@EnvironmentObject var modelData: ModelData@Binding var mark: Mark 其中要进行object的解析，如果用户输入能索引本地数据集的一个条目上，将会展示此object的详情 MarkAdd: Mark增加界面 MarkEdit: Mark修改界面 MarkToday: 标记今天界面 这三个UI都用到了@State来实时同步Form表单中的信息 以至于用户输入能够及时的反应在变量上并且写入modelData Kit其他组件 电影和书籍详情，时间线，圆形和方形图片，卡片组件等 均已展示在各个页面中","link":"/2021/10/28/Memo/README/"},{"title":"假如爱有天意","text":"《假如爱有天意》 最近又在听《假如爱有天意》，遂又回去二刷原作一年了，依然感动","link":"/2021/12/03/%E7%94%B5%E5%BD%B1/%E5%81%87%E5%A6%82%E7%88%B1%E6%9C%89%E5%A4%A9%E6%84%8F/"},{"title":"我爱我度过的所有时间","text":"《现在去见你》 哪怕早知道我会早早离开，也不愿辜负有你们的这一生。","link":"/2021/11/26/%E7%94%B5%E5%BD%B1/%E7%8E%B0%E5%9C%A8%E5%8E%BB%E8%A7%81%E4%BD%A0/"},{"title":"Our Little Sister","text":"《海街日记》","link":"/2021/12/01/%E7%94%B5%E5%BD%B1/%E6%B5%B7%E8%A1%97%E6%97%A5%E8%AE%B0/"},{"title":"Big Data","text":"Python BasicString functionsplit can help divide a long sentence to words and [::-1] can make the list reverse; if you use [:-1] you can just get the list from 0 to the last one 12string1 = 'are you kidding me'print(string1.split()[::-1]) Class123456789101112131415161718class StringManipulator: &quot;&quot;&quot;Docstring of StringManipulator&quot;&quot;&quot; category = 'Manipulator' def __init__(self, original): self.string = original def reverse_words(self): words = self.string.split() self.string = ' '.join(reversed(words)) def make_title(self): # Create implementation for this self.string = self.string.title() def get_manipulated(self): return self.string 12345678910assert StringManipulator.__doc__ == 'Docstring of StringManipulator'assert StringManipulator.category == 'Manipulator'str_manip = StringManipulator('cOOL pyThON')str_manip.reverse_words()assert str_manip.get_manipulated() == 'pyThON cOOL'str_manip.make_title()assert str_manip.get_manipulated() == 'Python Cool' Deal with exceptionThe function means you turn something to float by float() function. If there are anything can not be turned, it will throw an exception, catch it and then continue next loop. 123456789101112131415161718192021222324def sum_of_list(values): n = 0 for val in values: try: numeric_val = float(val) except Exception as e: continue n += numeric_val return n# outlist1 = [1, 2, 3]list2 = ['1', 2.5, '3.0']list3 = ['', '1']list4 = []list5 = ['John', 'Doe', 'was', 'here']nasty_list = [KeyError(), [], dict()]assert sum_of_list(list1) == 6assert sum_of_list(list2) == 6.5assert sum_of_list(list3) == 1assert sum_of_list(list4) == 0assert sum_of_list(list5) == 0assert sum_of_list(nasty_list) == 0 custom exception 123456class TooLongString(Exception): pass def verify_short_string(s): if len(s)&gt;10: raise TooLongString","link":"/2021/08/05/%E7%AC%94%E8%AE%B0/Big%20Data/"},{"title":"CO","text":"P6课下改数据通路的时候，爆改变量名，有些变量名没改，随手把imm_2改成imm32，de了一个小时。 debug真浪费时间，一定一定要尽可能一次写对，改的时候改彻底。 这个ISE也是真的毫不人性化，我考P5改了一点数据通路，那时候P6已经建工程了，做P6我还以为是改过的，整了半天EX里我都没给传进去PC信号，然后EX里在用PC，不知道在debug什么东西，你线根本没定义，或者线根本端口对不上号，模块缺信号，ISE都不给说，自己要注意的太太太多了。 直接用三目当MUX方便得多（除了有时候搞不清楚signed的逻辑） P3先入为主了，写了几个MUX，亲身实践又不好改又浪费时间 对比： 1234wire [31:0] NPC_0 = (branch==2'b11)?ra: //jr (branch==2'b10)?{PC[31:28],bits26,2'b00}://j 26 (PC+4); 123456789101112131415161718192021module mux_4_32b( input [1:0]sel, input [31:0]in0, input [31:0]in1, input [31:0]in2, input [31:0]in3, output reg [31:0]out ); always @(*) begin case(sel) 2'b00: out&lt;=in0; 2'b01: out&lt;=in1; 2'b10: out&lt;=in2; 2'b11: out&lt;=in3; endcase endendmodulemux_4_32b _forward_RS_1(forward_RS_1,regRD1_1,toRegout,ALUOut_3,0,forward_RSout_1); 别写没用的小部件…随定随用（连考三周P5后：真不知道自己写P4P5的时候为什么要这样 12345678910111213module CMP( input [31:0] A, input [31:0] B, output equal, output bigger, output smaller ); assign equal=(A==B); assign bigger=(A&gt;B); assign smaller=(A&lt;B);endmodule 1wire equal = (regRD1_1==regRD2_1); P6加指令虽然多，但是分类后就清晰了，分为以下几部分 ALU指令：（R型，I型）主要是给ALU加功能 B类：ID模块加，类似beq L, S类：S：可以在DM中创建一个子模块，根据addr[1:0]和指令类型进行分类，用新旧数据按位拼接起来，构成新的WD，不用修改DM，感觉这样更加清晰直观，但多了读DM的步骤似乎会增加延时？ 1234wire [31:0] dataH=(addr[1]==0)? {RD[31:16],WD[15:0]}: {WD[15:0],RD[15:0]}; ... 12assign WD_new = (sh)?dataH: ... L：课程组要求在MEM/WB后拓展，不可直接修改DM 123456789wire [15:0] Hdata=(addr[1]==0)? RD[15:0]: RD[31:16]; ...assign RD_new = (LoadEXTOP==1)?({{16{1'b0}},Hdata}): (LoadEXTOP==2)?({{16{Hdata[15]}},Hdata}): (LoadEXTOP==3)?({{24{1'b0}},Bdata}): (LoadEXTOP==4)?({{24{Bdata[7]}},Bdata}):RD; WB级要用的Adress是传过来的ALUout_4 PS:我真是加一个模块bug一次，而且每次觉得可能是很复杂的bug最后发现都是信号忘写了/写错了 乘除：一个小型状态机 卡了好长时间的bug： mfhi和mflo的regwirte没置1 mfhi和mflo的regdst没置01，我以为是写进rt其实是rd 忘弄乘除槽的Tuse Tnew了 （真没想到，因为测试结果是PC多跳了几个值，我以为是阻塞的问题，找了俩小时，最后发现居然就只是信号没搞对） （而且这ISim会出莫名其妙的bug的，ins没错他解析出来的regWrite是错的，我de了半小时百思不得其解，重开了下Isim就好了，遇到不止一次。） PS：惊了，我居然在写乘除时候终于发现我的isWritePC一直写成了isWirtePC，有5处 以上注意善用wire xx|xx归类，写控制信号的时候会清爽很多 比如这样 123456789101112 wire R_ins = add|addu|sub|subu|slt|sltu|sll|srl|sra|sllv|srlv|srav|and0|or0|xor0|nor0; wire I_ins = addi|addiu|andi|ori|xori|lui|slti|sltiu; wire save_ins = sw|sh|sb; wire load_ins = lw|lh|lhu|lb|lbu; wire ls_ins = load_ins|save_ins;... assign Tnew = (load_ins)?2: (R_ins|I_ins|jal|jalr)?1:0; assign rsTuse = (R_ins|I_ins|ls_ins)?1:0; assign rtTuse = (I_ins)?3: (save_ins)?2: (R_ins)?1:0;","link":"/2020/12/25/%E7%AC%94%E8%AE%B0/CO/"},{"title":"PC","text":"win10系统关闭”允许应用对你的设备进行更改” 控制面板-用户账户-更改用户帐户控制设置 针对联想 联想电脑管家卸载 锁屏壁纸自带的锁屏壁纸，很不清晰，有的时候还有广告 C:\\Program Files (x86)\\lLockscreen uninstall","link":"/2020/12/26/%E7%AC%94%E8%AE%B0/PC/"},{"title":"Python数据处理","text":"numpy读写csv 123np.savetxt('a.csv', a, fmt='%d', delimiter=',') #将数组a存为csv文件b=np.loadtxt('a.csv', delimiter=',') #将csv文件读取为数组#delimiter 默认为 ',' DataFramedrop1DataFrame.drop(labels=None,axis=0, index=None, columns=None, inplace=False) 参数说明：labels 就是要删除的行列的名字，用列表给定axis 默认为0，指删除行，因此删除columns时要指定axis=1；index 直接指定要删除的行columns 直接指定要删除的列inplace=False，默认该删除操作不改变原数据，而是返回一个执行删除操作后的新dataframe；inplace=True，则会直接在原数据上进行删除操作，删除后无法返回。 dataframe 和 array 转换123import pandas as pdarray = df.valuesdf = pd.DataFrame(array)","link":"/2021/03/21/%E7%AC%94%E8%AE%B0/Python%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"},{"title":"OS复习","text":"多级反馈队列调度算法(Multilevel Feedback Queue Scheduling) N个队列，优先级依次降低，越低时间片越长 对于第N个队列，遵循时间片轮转法 对于其他队列，先来先服务，给一定的时间片，若某进程未结束，则移到下一队队尾 新来高优先级进程抢占CPU IO型放前，CPU型放后","link":"/2021/06/09/%E7%AC%94%E8%AE%B0/OS%E5%A4%8D%E4%B9%A0/"},{"title":"基于反应扩散动力模型的微博热点话题研究","text":"文献阅读报告初次浏览知网[1]张梦瑶,朱广丽,张顺香,张标.基于情感分析的微博热点话题用户群体划分模型[J/OL].数据分析与知识发现:1-11[2020-12-30].https://kns-cnki-net.e2.buaa.edu.cn/kcms/detail/10.1478.G2.20201216.1154.004.html. 提到群体划分的概念 基于微博热点话题下对用户群体进行划分，需要考虑以下2 个方面：第一，使用何种特征对用户群体划分；第二，使用该特征对用户群体划分有什么现实意义。 基于情感分析对群体进行划分，更好的反应用户对热点的情感态度和观点 可以参考的方法： 部分学者提出各种模型对新词进行提取与确定新词的情感极性以增强情感分析的准确性[14,15]。也有部分学者对文本进行情感分析时选择了其他的方法以提高分析的效率与准确性[16,17]，比如机器学习和深度学习的方法，通过构建模型分析文本情感极性。Igor Santos 等人[18]使用了机器学习中卷积神经网络执行情感分析任务；Tao Chen 等人[19]提出了对句子分类，将不同类型的句子分别输入到一组卷积神经网络进行情感分类。 朱晓霞等人[20]提出一种基于动态主题的情感演化模型的舆情信息分析方法。通过改进TF-IDF 方法，结合聚类提取主题词构建主题-情感匹配词表，再引入时间节点，进行动态情感演化分析。Zhang X 等人[21]以关系社会稳定和经济发展的基本养老保险为例，建立情感分析模型，分析微博中用户对该舆情事件的态度。 思路：采集信息，处理后计算情感值，划分群体 以微博热点话题下的评论文本为例，首先对爬取到的微博文本进行预处理操作，包括删去文本中无用的字符、分词以及去停用词操作。根据预处理后的结果，一方面基于词典和规则的方法计算用户文本的情感值；另一方面根据预处理后得到的分词集，统计每个词出现的频率，选取前50 名词语作为文本特征词。得到特征词后，结合文本情感值计算文本特征词的权重，构造用户观点情感特征向量。随后在利用该特征向量使用K-means 聚类算法对用户群体进行划分。 [2]吴迪,张梦甜,生龙,黄竹韵,顾明星.改进在线词对主题模型的微博热点话题演化[J/OL].计算机工程与应用:1-7[2020-12-30].https://kns-cnki-net.e2.buaa.edu.cn/kcms/detail/11.2127.TP.20201027.1846.023.html. 研究微博热点话题的演化，基于OBTM，采集数据后按时间切片，按标签区分语料库，分析得到结果， OBTM 是一种借鉴了OLDA 并更适用于短文本的主题演化模型，该模型的主要思想是：首先，将所有文本集按时间片划分；然后，对于每一个时间片上的文本子集分别使用BTM 建模 其中 OBTM论文 https://dl.acm.org/doi/abs/10.1145/2488388.2488514 Xiaohui Yan, Jiafeng Guo, Yanyan Lan, and Xueqi Cheng. 2013. A biterm topic model for short texts. In Proceedings of the 22nd international conference on World Wide Web (WWW ‘13). Association for Computing Machinery, New York, NY, USA, 1445–1456. DOI:https://doi.org/10.1145/2488388.2488514 Specifically, in BTM we learn the topics by directly modeling the generation of word co-occurrence patterns (i.e. biterms) in the whole corpus. [3]黄勃,陈欢,方志军,王明胜,刘文竹.基于微博的COVID-19热点话题分析[J].武汉大学学报(理学版),2020,66(05):425-432. 通过编写爬虫脚本对几位官方媒体的微博评论进行采集，在OLDA 模型的基础上，使用K-means 聚类算法对词向量模型表示后的主题进行聚类，发现评论中热点主题簇的变化情况。 其中用到了TF-IDF（词频-逆文本频率）的方法用于分析文本中重要的信息，OLDA模型，K-menas算法 TF 表示词频，为该词出现的频率除以该文章中总的词数目；IDF 表示的是一个词在所有文本中出现的频率，倘若一个词在所有的文本中都出现，则说明该词不是那么重要［9］；如果一个词在较少的文本中出现，则说明该词比较重要。 OLDA 模型，引入文本的时间信息到LDA 模型。OLDA 模型与LDA 模型的最大不同是加入了时间维度信息。 K-means 通过随机选择l 个主题作为簇的中心，计算每个主题和各个簇中心主题的距离，将样本点划入距离最近的簇中心主题，根据已经划分的簇，重新计算簇中心主题的位置。通过增加迭代次数来提高主题聚类的准确率 [4]郭兆辰.群体传播在舆论发展中的特点与作用——以“996”热点事件为例[J].科技传播,2020,12(21):170-172. 提到微博热点中群体传播是传播热点的主导，有去中心化的特点，领袖作用明显。 存在群体极化现象，产生沉默的螺旋效应 互联网的群体传播一大特点是去中心化， 但是在这之中 ，“不同节点的可见度与连接数、话 语权与影响力都大不相同”。因此 ，互联网群体传 播的过程中 ，意见领袖的作用也就更加明显 [5]董少林,李钟慎.采用Scrapy分布式爬虫技术的微博热点舆情信息获取与分析[J].电脑与信息技术,2020,28(05):23-26. 方法：采用Scrapy分布式爬虫进行信息获取与分析 借助SnowNLP进行情感分析（中文自然语言处理库） GitHub链接：https://github.com/isnowfy/snownlp jieba分词，Github链接：https://github.com/fxsjy/jieba 文本聚类方法类似[3] 用到的词云工具：https://amueller.github.io/word_cloud/（**标签云**或**文字云**是关键词的视觉化描述，用于汇总用户生成的[标签](https://zh.wikipedia.org/wiki/标签)或一个网站的文字内容。） [6]王林,许郡蒙.分布式K-means聚类在微博热点主题发现的应用[J].计算机仿真,2020,37(08):121-125. 用中 国科学院计算技术研究所研制的汉语词法分析系统 ICTCLAS( Institute of Computing Technology，Chinese Lexical Analysis System) ，该分词系统的主要功能包括中文分词、词性标 注、命名实体识别、新词识别，同时支持用户词典。目前已经 升级到了 ICTCLAS3. 0，ICTCLAS3. 0 分词速度单机 996kB/s， 分词精度 98. 45% ，API 不超过 200kB，各种词典数据压缩后 不到 3M，是当前世界上最好的汉语词法分析器。 K － means 算法是一种无监督学习算法，该算法接收一 个未标记的数据集，然后将数据聚类成不同的组。其步骤可 总结如下: 1) 从数据集中随机选取 K 个对象作为初始聚类中心; 2) 计算样本中的数据对象，根据每个聚类的均值( 中心 对象) ，计算每个对象与 K 个聚类中心的距离，并根据最邻近 — 123 — 原则将其分到距离最小的聚类中心所对应的类中; 3) 更新聚类中心: 将每个类别中的所有对象的均值作为 该类别的聚类中心，并计算目标函数的值; 4) 判断聚类中心和目标函数的值是否发生变化，若不 变，则算法终止否则回到步骤 2) ，否则继续进行迭代操作， 直到聚类中心的位置不再变化。 [7]黄瀚宇. 面向微博数据的热点事件发现与分析方法[D].重庆邮电大学,2020. 基于计算引擎Spark的计算框架 https://spark.apache.org/ [8]李嘉兴,王晰巍,常颖,王微.社交网络用户行为国内外研究动态及发展趋势[J].现代情报,2020,40(04):167-177. 机器学习建模用户特征预测用户行为，用户画像 [9]唐蕾. 基于卷积神经网络分析的微博用户情绪传播研究[D].电子科技大学,2020. 用计算机学中的卷积神经网络分析模型,对微博数据进行了情感分析以及可视化呈现;对用户情绪演化阶段进行划分,对每一个阶段的用户情绪特征进行了分析。 [10]王新胜,马树章.融合用户自身因素与互动行为的微博用户影响力计算方法[J].计算机科学,2020,47(01):96-101. 计算用户的影响力，给出数个公式，影响力大的用户可能与热点传播有关 本文提出的 ＭＢＵＩ－ＳＦＩＭ 算法在微博用户影响力计算 的过程中，从直接影响力与间接影响力两个方面考虑，在直接 影响力计算中，通过量化用户自身因素与用户行为因素，使用 改进 的 ＰａｇｅＲａｎｋ算法得到用户直接影响力计算结果，在 计 算用户间接影响力时，根据不相邻节点连接路径不同，将用户 间接影响力具体分成３类进行处理，最终得到用户间接影 响 力。最后将本文提出的 ＭＢＵＩ－ＳＦＩＭ 算法在覆盖率和准确率 两方面与 ＭＲ－ＵＩＲａｎｋ算 法 和 经 典 的 ＰａｇｅＲａｎｋ算 法 进 行 比 较，验证本文算法的有效性。 [11]李海明.基于SSDKmeans算法的微博热点话题发现研究[J].软件导刊,2019,18(09):173-175+182. 用于数据流计算的ss算法，基于距离改进的Kmeans算法SSDKmeans ss 算法主要用于数据流计算， 其思想是：有 N 个数据，如果一个新的数据项 ei 在 N 里面， 则对应的计数加 1；如果不在则判断空间是否已经满了，满 了则替换计数最小的 em，否则直接添加到数据集合 D 中。 SSDKmeans 算法描述如下（其中，输入是微博数据流， 输出是微博聚类簇）： ①数据集 D 有 N 个微博记录词条，每个词条的计数为 ci，输 入微博词条； ②判断 ei是否在 D 中； ③如果在，fi = fi + ci作为 ei的统计频数； ④如果不在，再判断 D 空间是否满了； ⑤D 空间没满，将加到 D 中； ⑥否则查找 D 中计数值 fm 最小的数据项 em ，将其替换掉； ⑦对步骤⑥频繁项的数据集进行 VSM 建模； ⑧基于最大最小距离初始 m 个中心点； ⑨对 W［i］［j］的每一条微博，分别计算它们与 m 个聚类中 心的距离（通过余弦距离）distance（i，m）； ⑩ 对 W［i］［j］的 每 一 条 微 博 ，计 算 最 近 聚 类 的 中 心 near （i）= mi； 􀃊􀁉􀁓评判 W［i］［j］每一条微博，如果所有的微博文本集都属于 174 ·· 第 9 期 最近的 near（i）这一类别，那么终止。如果不是就继续执行； 􀃊􀁉􀁔near（i），把 i 归并到 m 中，重新计算各个中心（即各条微 博的平均值），再循环从步骤⑩开始执行。 [12]陈凤,蒙祖强.基于BTM和加权K-Means的微博话题发现[J].广西师范大学学报(自然科学版),2019,37(03):71-78. 为适应微博数据的短文本、低词频、缺乏语义表达等特殊性,提高话题发现的准确性,利于用户从大量微博数据中获取有用信息,本文提出一种基于BTM和加权K-Means方法实现微博话题发现。 ＢＴＭ 模型解决了微博文本数据稀疏性的问题，获得更准确的话题词，可以提高微 博话题发现的质量并减少其时间复杂度［１０－１１］。 ＢＴＭ 模型是针对短文本建模提出来的，该模型是通过整个语料库建立 ＢＴＭ 语料库，不是利用简单 的词频进行建模，而是挖掘微博短文本深层的语义关系。ＢＴＭ 模型通过词共现模式（ｂｉｔｅｒｍ）来加强文本 语义的学习，直接对共 现 词 建 模 揭 示 话 题。 算是一个总结： 在知网阅读了一些相关微博热点的文献，大致都是用到python爬虫获取信息，用到Kmeans的聚类方法，TF-IDF，文本处理有jieba分词等，做情感分析，还有一些其他的方法来研究热点。 李老师：关注两个内容：1.社交网络中其实有一些机器人，这些机器人会对热点话题的形成有一定的影像，如果找到和识别出；2. 微博的传播模型；3.深度学习在微博热点话题研究中的相关应用 阅读英文文献1.1 李老师下午好，我的期末考试已经全部结束了。看了您那天发给我的论文，他的方法是提出Bi-GCN（双向图形卷积网络）模型，利用深度学习研究如微博和推特等平台的谣言传播。我认为可以参考的有他提到的rumors有propagation和dispersion两个特性，分别通过自上到下和自下而上两种有方向性的GCN模型进行研究。研究的具体过程我阅读起来比较困难，所以没有看的太仔细。 如何判断微博上机器人参考了两篇： Jin Z, Li Q, Zeng D, et al. Filtering spam in Weibo using ensemble imbalanced classification and knowledge expansion[C]//2015 IEEE International Conference on Intelligence and Security Informatics (ISI). IEEE, 2015: 132-134. We propose a three step approach: 1) extracting distinguished features from Weibo; 2) developing a computational approach to expand keywords features automatically by utilizing external knowledge source; 3) employing an ensemble under-sampling based strategy to handle the class-imbalance problems and boost the performance of spam filtering. We have empirically evaluated the proposed algorithm on a real-world Weibo data. The results show that our algorithm could filter spam accurately 曲铭. 微博机器人检测技术的研究与实现[D].国防科学技术大学,2014. 研究基于机器学习的微博机器人检测方法,分析朴素贝叶斯、逻辑回归以及支持向量机三种机器学习模型 对微博用户特点,从微博内容特征和用户行为特征两个角度分析微博机器人的特征,并给出这些特征的形式化计算方法用于机器学习模型对微博用户的分类,再通过实验方式使用真实的数据集对用户特征进行分析与评价。 1.26 李老师，最近我进度比较慢，看了一些英文论文，阅读起来有点困难，而且有些文章看半天感觉还是理不出思路或者感觉用不到，另外深度学习这块我之前没有接触过，这几天正在看相关课程。这个是感觉可能能用到的3篇论文 关于微博的传播扩散 K. Wu, S. Yang and K. Q. Zhu, “False rumors detection on Sina Weibo by propagation structures,” 2015 IEEE 31st International Conference on Data Engineering, Seoul, 2015, pp. 651-662, doi: 10.1109/ICDE.2015.7113322. 通过微博传播结构模型检测谣言。建模树结构，结点包含四个信息：信息发布者，时间，客户端，图片。 信息发布源作为根结点，repost为其他结点。分析方法使用a hybrid kernel function which combines a novel random walk graph kernel and a normal radial basis function (RBF)。 graph kernel用于评测2个传播树的相似度，RBF用于计算距离。把用户分成opinion leaders和normal users。 L. Li et al., “Characterizing the Propagation of Situational Information in Social Media During COVID-19 Epidemic: A Case Study on Weibo,” in IEEE Transactions on Computational Social Systems, vol. 7, no. 2, pp. 556-562, April 2020, doi: 10.1109/TCSS.2020.2980007. 影响propagation的features：内容是否包含需要的tag，发布时间，内容长度，类型，emotions，发布者的粉丝数，发布者所在的地区（是否发达？），是否目击者（灾难情况下），发布者所属机构。 Maofu Liu, Weili Guan, Jie Yan, Huijun Hu: Correlation identification in multimodal weibo via back propagation neural network with genetic algorithm. J. Vis. Commun. Image Represent. 60: 312-318 (2019) 应用基于基因算法（GA）的BP神经网络识别微博的相关性 目前大致的思路： 使用爬虫爬取微博热点条目，其中每一条包含发布者，标签，时间等信息 通过文本聚类的方法和时间顺序，或者微博的转发关系，确定微博之间的传播关系 按照propagation和dispersion分别自下而上和自上而下构建图关系，需要的话考虑加上一些基于发布者的粉丝数或者发布时间间隔之类的权重 深度学习让机器分析微博热点扩散（此部分目前还不明确） 目前我的问题： 还不太清楚反应扩散动力模型具体指什么样的模型？ 我理解在此课题下深度学习是要用于分析微博热点的扩散，但是我尚不明确怎么去应用深度学习，据查阅资料知深度学习有supervised和unsupervised之分，如果要应用在让机器按照已经存在的反应扩散动力模型去学习判断微博热点的扩散，需要给机器提供已经存在的学习样本，这个样本应该怎么得到呢？ 李老师：关于动力模型这个，先不着急入手，关于深度学习，建议先从cnn看起。先熟悉cnn，cnn的东西明白了，就一切明白了","link":"/2021/05/19/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E4%BA%8E%E5%8F%8D%E5%BA%94%E6%89%A9%E6%95%A3%E5%8A%A8%E5%8A%9B%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BE%AE%E5%8D%9A%E7%83%AD%E7%82%B9%E8%AF%9D%E9%A2%98%E7%A0%94%E7%A9%B6/"},{"title":"格式化输出","text":"格式化输出进制%o —— oct 八进制%d —— dec 十进制%x —— hex 十六进制 浮点数保留位数%.3f，保留3位小数位%.3e，保留3位小数位，使用科学计数法%.3g，保留3位有效数字，使用小数或科学计数法 字符串%10s——右对齐，占位符10位%-10s——左对齐，占位符10位%.2s——截取2位字符串%10.2s——10位占位符，截取两位字符串 整数前0%03d——补3个前导0的十进制 %03x——补3个前导0的十六进制","link":"/2021/11/08/%E7%AC%94%E8%AE%B0/%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/"},{"title":"约瑟夫环","text":"约瑟夫环大坑 数组实现：12345678910111213141516171819202122#include &lt;stdio.h&gt;int main(){ int line[3001]={0}; int n,m; int count=0; scanf(&quot;%d%d&quot;,&amp;n,&amp;m); for (int i = 0; i &lt; n; ++i) { line[i]=i+1; } while (1){ count+=m-1; if(count&gt;=n)count%=n; printf(&quot;%d\\n&quot;,line[count]); for (int i = count; i &lt; n-1; ++i) { line[i]=line[i+1]; } n--; if(n==0)break; } return 0;} 链表实现：12345678910111213141516171819202122232425262728293031#include&lt;stdio.h&gt;struct s{ int num; struct s *next;};void main(){ int n,i; struct s peo[100],*p,*q; scanf(&quot;%d&quot;,&amp;n); for(i=0;i&lt;n;i++) peo[i].num=i+1; for(i=0;i&lt;n-1;i++) peo[i].next=&amp;peo[i+1]; peo[n-1].next=peo; q=p=peo;while(p!=p-&gt;next ) { for(i=0;i&lt;1;i++) { q=p; p=p-&gt;next; } q-&gt;next =p-&gt;next ; printf(&quot;被删除的元素:%-4d\\n&quot;,p-&gt;num); p=q-&gt;next ; } printf(&quot;\\n最后报号出来的是原来的:%d\\n&quot;,p-&gt;num); }","link":"/2020/11/08/%E7%AC%94%E8%AE%B0/%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF/"},{"title":"知乎北航","text":"大二大家好，距离发出这个回答已经一年时间了，很荣幸在6系度过了大二的时光，因为这几天6系主要的专业课都已经提前结束，没有什么事情做，回想起了去年写的这个回答，这一年时间对北航又有了很多新的感受，实话说，这一年对北航的好感逐渐减少，也逐渐理解为什么北航给那么同学留下了相当不好的印象。 在此简单谈一谈这一年的感受吧，只是为了给这几天高考填志愿的，或者北航大一即将专业分流的同学，站在我的角度更多的了解北航，不吹不黑，仅供参考。 1. 大类专业分流本人是2019级以所在省份北航工科试验班（信息类）最高分数录取到士谔书院，在报名之前，有很多学长学姐表示过选专业的时候要注意某些学校的大类捆绑垃圾专业问题，要和填报大学做好沟通，必要时留下字据。当然我觉得北航这样的学校不可能在这方面做出什么耍流氓的行为，但是我出于谨慎还是询问了当地招办的工作人员，他们明确告诉我，北航大类招生0调剂，只要大一期间没有彻底放弃学习，认认真真完成大一的课程内容，在专业分流的时候一定可以去到自己心仪专业，我当时是比较明确自己想要去计算机学院或者软件学院的，于使放心的填了北航。 然而北航的同学都知道大类分流是什么情况，在此给不清楚的同学具体说一下，虽说北航没有相当差劲的专业，但是专业是有热门冷门之分的，志愿优先确实没错，但是志愿满了必然是要用成绩来排序的，举例说，北航热门的计算机专业在每年的专业分流时只有大类前200/800敢保证自己能进去，事实也是如此，除了我们这一年，基本上每年都会出现计算机学院只能录到前200名的，软件学院前400名，自动化成为很多同学不愿意去却被调剂去的专业。而北航所谓的0调剂指的是什么呢？你要在大类分流的时候把所有院系都进行排序，随后由系统进行志愿优先，成绩第二的算法进行排序，就算你去到了你的第9志愿，也算是0调剂。事实情况就是如此，我没有主观的表示这个制度的坏处，只是这个没有早早声明的制度对于一大部分同学都非常的不友好。 大一上学期我过着比较憧憬的大学生活，参加各种活动，学业方面只是尽力完成了课程内容，考试没有挂科，但也并没有考得很好，因为我压根没有意识到，也几乎没有人告诉我卷一个高GPA的用处。在大一下学期，选专业的焦虑开始环绕在我周围。我意识到大一上学期的成绩导致我可能去不了自己想去的专业了，想到自己以后可能要学着自己不喜欢的东西度过三年时间，我每天都很焦虑。（虽然最后还是误打误撞进了计算机学院） 2. 基础物理实验这个基础物理实验争议比较大，在知乎也有过不少讨论，这里我不多说，我仅站在我自己的角度，这个课程我没有学到任何东西，但是在这一年时间里我至少50%的压力和痛苦都来源于这个课程，这门课的相关情况可以去看： 3. 某不再被提及的图书馆事件4. 计算机学院不是为了黑6，只是因为我在6，只能谈我观察到的。之后更。 大一利益相关，北航大一。 一直在关注这个问题，一直觉得北航没有问题描述的那么不堪。今天忍不住答一下。 部分学生戾气重注：这个答案是我在发生情况后立刻写下的，可能存在冲动的主观因素，而且个例也不能代表所有北航学生的素质，因此留下这个部分仅供参考！！！ 你航学生的素质堪忧。 就在刚刚，一个6系大二学姐在给我们大一对数据结构部分答疑，腾讯会议，讲了大概半个小时了，学姐很耐心给说了之前自己考数据结构时候的试题结构，然后给我们讲了一些基础操作的思想。 突然有一个男生开麦大声说（戾气很重）：你这tm答疑的是个屁，sha bi，**（请自行脑补脏字），cao。 我整个人都震惊了：？？？这个人是忘了关麦了？不对啊，没有其他人一直开着麦，这人是打开话筒后完整的骂完然后人又不见了啊？这分明是故意在骂啊？这别说是低年级对高年级，男生对女生，一点点尊重都没有就算了，满口脏字。如果真的觉得讲的不好，默默退出不行吗？为什么要做出这种行为？？这是一个又红又专的985高校学生的素质？？ 学姐以诚挚并且颤抖的声音说：那你想让我怎么样答疑？我肯定不能让所有人都满意 真的特别心疼这个学姐，但是这时候评论区近100人没有一个人说话，气氛尴尬。从学姐的屏幕分享看到有个同学私聊安慰了学姐，学姐说没事，她心理承受能力没那么差。但是我明显感觉出来她声音变得急促并且紧张了。 这或许是一个个例吧，但我真的非常非常震惊，一个人还没学会做人，他是被什么样的标准选到了这样的“双一流”大学？ —————分割线——————— 当事人1个小时后的答复 。 我不多做评论了…每个人有自己的理解吧… 既然已经道歉了大家也别去追究了，保护这名同学的名誉吧。 —————分割线——————— 说都说了，顺便说说这一年观察到的其他现象。就我个人感觉，我们的工科数分老师，作为一个大学教师，已经是顶级的负责了。她开学第一节课就说了，如果觉得她水平不行，可以去其他班上课，她不会点名的。她会尽可能给你多讲考试不考，但是未来你科研可能用到的东西。最近录播课录得时间比上课时间还长，从她的录播课还可以看出来很多内容是反复录了很多遍之后剪辑起来的，真的非常非常不容易。 就这样一个负责的老师，只要犯一个错误就去担心叫大家不要去举报她发生了教学事故。本来我上个学期觉得老师有些夸张，怎么会有这样的同学呢，后来才知道是真的是有同学去举报了，所以老师总是提心吊胆。我真的很难理解这样的行为？？ 后记这个答案或许会在我大学四年过程中持续更新，发表的观点都尽可能客观，不是为了发牢骚黑北航，只是为了给各位同学留下参考，同时希望北航能尽力去解决问题，如果有问题可以评论区交流我也会在我毕业之后解除该回答的匿名。","link":"/2021/06/16/%E7%AC%94%E8%AE%B0/%E7%9F%A5%E4%B9%8E%E5%8C%97%E8%88%AA/"},{"title":"西方音乐鉴赏第七次课","text":"早期浪漫主义艺术歌曲主要采用诗人诗作 钢琴：伴奏烘托 歌唱：意大利美声 例：《魔王》——歌德叙事诗 舒伯特艺术歌曲（600多首）、交响曲…… 作品比前人更具有抒情性，充满歌唱感 艺术歌曲《鳟鱼》 交响曲 《第八未完成交响曲》 罗伯特 舒曼19世纪德国作曲家、音乐评论家 《蝴蝶》《狂欢节》《童年情景》 钢琴《A小调钢琴协奏曲》OP 54 《桃金娘》（单三部曲式 ABA）献给爱妻克拉拉（著名钢琴家） 标题音乐分类： 音乐会序曲标题交响曲交响诗 音乐会序曲门德尔松（学院派作曲家，风格多奏鸣曲快板，甜美轻盈）首创 门德尔松《仲夏夜之梦》序曲 门德尔松《婚礼进行曲》 瓦格纳《婚礼进行曲》 埃克托 柏辽兹交响曲 《幻想交响曲》 李斯特交响诗《前奏曲》 曲式结构 4/4 自由-奏鸣曲 呈示部——展开部——再现部——尾声 钢琴音乐音域拓宽，音锤改为毛毡布包裹，钢琴装上2个踏板 舒曼《儿时情景》——《梦幻曲》 门德尔松——无词歌《春之歌》 弗朗茨 李斯特钢琴之王，作曲家，宗教神父 三部曲式 钢琴小品《爱之梦》","link":"/2021/11/23/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E5%8F%B2/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E9%89%B4%E8%B5%8F%E7%AC%AC%E4%B8%83%E6%AC%A1%E8%AF%BE/"},{"title":"西方音乐鉴赏第八次课","text":"肖邦波兰 历经坎坷的国家 波兰沦陷时一直在播放《革命练习曲》钢琴诗人 只创作钢琴音乐《E大调练习曲（离别曲）》1830年后在法国巴黎发展《第6号（小狗）圆舞曲》 音乐的诗情画意 采用不对称结构 朗诵音调 自由速度 tempo rubato 遗作 《升C小调夜曲》 具肖邦特色 音乐中的民族性玛祖卡舞曲： 3/4拍舞曲 重音在第二拍 曲式：回旋曲式 ABAC 谐谑曲 四首谐谑曲。 其中《降b小调谐谑曲》 最富于诗意 曲式：自由的奏鸣曲式 3/4 拍 中期浪漫主义 - 歌剧威尔第 《奥菲欧》 意大利 威尔第主要采用浪漫主义时期小说创作 作品： 早期 《纳布科》 合唱《飞吧，金色的翅膀》（被称为意大利第二国歌） 中期 《弄臣》 《游吟诗人》 《茶花女》 晚期 《阿依达》 （巅峰之作） 创作特点： 分曲体结构 强烈的戏剧冲突 咏叹调和宣叙调采用乐队伴奏 旋律简单易记 拓展歌唱家音域，增加紧张和激情 自由速度 有戏剧结构。场景与卡巴列塔常常出现在歌剧的每一幕结尾 乐队不可喧宾夺主 德国 瓦格纳文学家，戏剧家，音乐家，哲学家自创歌剧 神话色彩音乐戏剧 “乐剧”独特的德国歌剧 作品 《汤豪瑟》单三部曲式ABABA 四联剧 《尼伯龙根的指环》 史上篇幅最大作品 序夜：《莱茵的黄金》 第一夜 ：《女武神》 第二夜 ：《齐格飞》 第三夜 ：《诸神的黄昏》 创作特点： 无终止旋律 器乐是统治一切的原则（乐队淹没人声） 主导动机的手法 浪漫主义晚期-勃拉姆斯的创作勃拉姆斯德国作曲家“浪漫的古典主义”作曲家 作品： 《摇篮曲》 室内乐《C小调第三钢琴弦乐四重奏》-献给克拉拉([[第七次课]]) 《第二交响曲》 柴可夫斯基俄国作曲家受影响：俄国民族 能歌善舞俄国社会 沙皇统治时期，农民起义三个女人 初恋(法国歌唱家) ，妻子，精神支柱 作品（涉猎各种题材）： 三部芭蕾 《天鹅湖》 《睡美人》 《胡桃夹子》 七部交响曲 《E小调第五交响曲》-命运动机-贯穿四个乐章 … 理查德 施特劳斯《七纱舞》 马勒奥地利作曲家","link":"/2021/11/30/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E5%8F%B2/%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E9%89%B4%E8%B5%8F%E7%AC%AC%E5%85%AB%E6%AC%A1%E8%AF%BE/"},{"title":"C++基础","text":"结构 123456struct Student{int i;int j;char c;} 由于int需要占用4个字节，由于结构的空间分配是大对齐，总共需要12个空间。 当然也可以压缩空间，把它压缩为实际只使用的9个字节。 压缩： 1#pragma pack(1) 宏函数宏 1#define ARRAY_SIZE(a) sizeof(a)/sizeof(a[0]) 控制宏 123456#define HOME //用于控制开关#ifdef HOMEcout &lt;&lt; &quot;link a&quot; &lt;&lt; endl;#elseifcout &lt;&lt; &quot;link b&quot; &lt;&lt; endl;#endif 123#ifdef WIN32 //windows平台上一定会有的宏#include &lt;windows.h&gt;#endif 如果把C++程序和C程序混合编译 1extern &quot;C&quot; void fun_C(); 这个语句就是用于告诉链接器，这个函数是用C标准编译的，不要按照C++编译器修饰的方式去找。 函数 1234567891011//1.overloading//2.default parameter//默认参数必须放后void fun2(int a, int b = 3, int c = 4) { cout &lt;&lt; a &lt;&lt; b &lt;&lt; c &lt;&lt; endl;}//3.占位参数void fun3(int) { cout &lt;&lt; 233 &lt;&lt; endl;} C++ 面向对象1234567891011121314151617struct Person {private: int age; char *name;public: Person(int aage, char *aname); ~Person();};Person::Person(int aage, char *aname) { this-&gt;age = aage; this-&gt;name = aname;}Person::~Person(){ //析构函数} struct和class区别：class默认成员变量private 默认构造：不带括号 123456Test t1(3);Test *t2 = new Test();Test t3(2,3);Test t4(); //this is a functionTest t4;Test *t5 = new Test(3); 函数的原则：尽量不用返回值去返回，输入输出参数放在参数里 成员变量原则： value：必然组成部分 address：可有可无的部分 类嵌套： 1234567class Point;class Circle{ Point *p;};class Point{ Circle c;}; 析构函数(destructor)： 对象消亡时自动调用 可用于free堆区malloc 防止重复free，free时： 1234if (p != NULL) { free(p); p = NULL; } 指针与引用指针的问题 1234//1. fly pointer (if null / assert)//2. memory leak (free)//3. return addr of local var//4. multi-pointers for one object 引用 123//reference 引用int m = 5;int &amp;r = m; //m的小名 对象的copy 12345678//bitwise copy 浅拷贝（默认） vs. logical copy 深拷贝//copy constructorTest::Test(Test &amp;t) { this-&gt;i = t.i; //!!!this-&gt; = t.j this-&gt;j = (int *) malloc(sizeof(int)); *j = *t.j;} e 12345// pass by value vs. pass by address(pointer or reference)//效果 read read/write//性能 sizeof(object) sizeof(int)//麻烦 copy-constructor nothing//conclusion: never pass by value(build-in type except) new and delete12345678//Test *p = (Test *)malloc(sizeof (Test));Test *p =new Test(1,2);//new = malloc + constructordelete p;//delete = destructor + free;//多个对象Test *p = new Test[10]; //要求有默认构造delete []p; 常量12345void Test::fun() const{ //read only function};const Test t;t.fun(); static123void fun(){ static int i; //堆区，与全局变量同} extern全局变量不定义在头文件，定义在某一源文件中 extern外链接放在头文件。 函数默认extern外链接，用static修饰表明作用域为本文件。 1extern int g_i; 类中static修饰：全类的共享空间 123456789class test{ static int i; int j; public: Test(int aj);}//显示一次性初始化int Test::i = 100; static无this指针 operator 重载运算符 [] 重载数组 * 重载取内容 new delet 重载malloc ++重载++ 12345678910111213141516171819202122232425262728293031class Account{ int id; int balance;public: Account &amp;operator+(int n); //++a Account&amp; operator++(); //a++ Account operator++(int);};Account &amp;Account::operator+(int n) { this-&gt;balance += n;}Account&amp; Account::operator++() { this-&gt;balance++; return *this; }Account Account::operator++(int) { Account old = *this; this-&gt;balance++; return old;}int main(){ Account a; a = a+100;} 继承(inheritance)与组成(composition)12345678910111213//(derived class)子类class Student : public Borrower{public: void borrow_book(); };void Student::borrow_book(){ Borrower::borrow_book(); cout &lt;&lt; &quot;if&gt;=5 return&quot; &lt;&lt; endl;} 注意构造顺序 子类构造器自动调用父类构造器，析构相反 组成也会先自动调用内部对象的构造(Engine initial - Car initial) 12345678//构造器初始化列表(若没有默认构造无法默认调用)Derived::Derived(int ai, int aj):Base(ai){ }//有先后顺序Test::Test(int ai, int aj) :i(ai),j(aj){ } 多继承(菱形结构) 1class Derived : public Base1, public Base2{} 多态 upcasting 向上转换 later binding vs. early binding polymorphism 多态性 virtual constructor &amp; destructor 构造无多态，析构往往多态 abstract class (interface in Java &amp; C#) 123456789101112131415class Pet{ char *name; int age;public: virtual void speak(); //虚函数 内存占用+8 子类自动virtual};#include&lt;cstdlib&gt;void Needle(Pet&amp; pet) //never pass by value 拷贝构造使多态失效{ //binding //1. early binding //2. later(dynamic/runtime) binding pet.speak();} 多态的实现： 类：V-table 虚函数表 对象：V-ptr 指向本类虚函数 123//纯虚函数virtual void speak() = 0;//抽象类：含纯虚函数，无法创建对象 行为串联：当两个类别家族因为行为共性发生关系时，用抽象类来关联两个类别家族 template class1234567891011121314151617181920212223//template class 模板类 collection in Javatemplate&lt;class T&gt;class Stack { T pool[100]; int top;public: //内联函数 inline function //top=0 Stack() : top(0) { } void push(T v) { pool[top++] = v; } T pop() { return pool[--top]; }};int main() { Stack&lt;int&gt; s1; Stack&lt;double&gt; s2;} STL 123456789101112//STL: standard template library#include &lt;vector&gt;int main() { vector&lt;int&gt; v; for (int i = 0; i &lt; 10000; ++i) { v.push_back(i); } cout &lt;&lt; v[9988] &lt;&lt; endl;} iterator 123456789vector&lt;int&gt; v;for (int i = 0; i &lt; 10; ++i) { v.push_back(i);}vector&lt;int&gt;::iterator it = v.begin();while (it != v.end()) { cout &lt;&lt; *it &lt;&lt; endl; it++;} name space类上一级层次 1using namespace my_nsp try catch 和Java一样 assert 12//让断言全部失效#define NDEBUG friend","link":"/2021/04/30/%E8%AF%BE%E7%A8%8B/CPP/"},{"title":"失败的逻辑课程笔记","text":"失败的规律墨菲定律定义如果做某项工作有多种方法，而其中有一种方法将导致事故，那么一定有人会按这种方法去做。 四种表现形式（注意：都不是一定的） 任何事都没有表面看起来那么简单 所有的事都会比你预计的时间长 会出错的事不论概率多小总会出错 如果你担心某种情况发生，那么它就更有可能发生 启示 不忽视小概率事件 未雨绸缪 应急预案，动态调整 事故学习，反思 海因里希法则定义1：29：300 事故因果连锁论伤亡事故的发生不是一个孤立的事件，是一系列事件相继发生的结果。 1，事故往往起于人而又终止于人 2，人的不安全行为是大多数工伤事故的原因 3，人在受到伤害前，已经历数百次没有造成伤害的同类事故 4，人受到伤害的严重程度具有随机性，大多可以避免 5，人不安全行为的主要原因是不正确的态度 启示企业安全工作的中心就是防止人的不安全行为，消除机械的或物质的不安全状态，中断事故连锁的进程而避免事故的发生。 浴盆曲线可靠性：完成规定功能的能力 可靠度：完成规定功能的概率 可靠度 MTBF 不可靠度 MTTF 故障率 浴盆曲线 失败的分析失败分析三种方式模式FMECA 故障模式影响及危害性分析 原因FTA 故障树 事件ETA 事件树 失败风险两个要素：失败的概率和后果 技术，费用，进度风险 风险识别，风险分析（可能性，后果严重性），风险排序 管理，评估，应对 失败的预防优生优育 优质材料 降额\\裕度设计 余度设计 健壮设计 耐环境设计 放错设计 养生保健 熟练的使用 定期的维护 有力的保障 持续的改进 失败的思维如何看待失败知识管理的概念从失败中学习：知识的螺旋吃一堑长一智：失败知识从哪来失败知识的共享失败知识的应用 如何看待成功发明的等级技术的进化矛盾的冲突创新的原理案例的分析 系统思维系统工程方法：霍尔方法论 系统定义与特性： 系统是由相互作用和相互依赖的若干组成部分结合成的、具有特定功能的有机整体。 6个特点 系统思维的感性认识","link":"/2020/10/29/%E8%AF%BE%E7%A8%8B/%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%80%BB%E8%BE%91%E6%80%BB%E7%BB%93/"},{"title":"(军理)浅谈保护国家网络信息安全的重要性","text":"浅谈保护国家网络信息安全的重要性周子航 北京航空航天大学 摘要21世纪，随着信息化的发展，保护网络信息安全的重要性愈发增长。在经济与社会生活高度数字化的今天，网络空间已经成为国家社会治理的重要对象，事实上也成为国家主权的一部分。预防网络信息安全存在的隐患，保护网络信息安全，加强法制，科技，人才的建设，在国际上主导凝聚共识、合作共赢的理念，向世界传达网络信息安全的重要性，与各国共同捍卫网络安全，构建有序的国际网络空间是当今时代的重要议题。 关键词：网络信息；国家安全；保护措施；布局构想 一、网络信息安全的概念信息安全，意为保护信息及信息系统免受未经授权的进入、使用、披露、破坏、修改、检视、记录及销毁。政府、军队、公司、金融机构、医院、私人企业积累了大量的有关他们的雇员、顾客、产品、研究、金融数据的机密信息。绝大多数此类的信息现在被收集、产生、存储在电子计算机内，并通过网络传送到别的计算机。国家网络信息安全受到损害的破坏性不亚于其他方式的损害，我们应当重视网络信息安全。 二、网络信息安全对国防事业的重要性在互联网飞速发展的今天，网络信息安全能力成了国家经济实力 与生存能力的根本，是当前各国隐形较量的新战场。有报道称，曾有一款刺探与窃取他人秘密的间谍型软件肆虐于国际互联网上。此款软件最初的目标主要是用于商业竞争，而后逐渐被一些别有用心的军事集团所利用，继而慢慢变成了国际军 事强国用于窃取他国国防安全机密的常用工具。据相关报告称，美国国防部计算机系统于 2005 年间累积遭受黑 客攻击次数多达 21124 次，而每次若想成功抵御攻击，需要耗费资金 150 万美元左右。这样的情况于我国而言也是屡见不鲜的，中国作为 后起之秀，在国际引发的关注越多，遭受的暗算攻击也就相应地倍增， 因此在此互联网与大数据环境下，国防信息安全也是棘手问题。如此之外，如 2013 年斯诺登事件，此次事件的表象就是美国的“棱镜”计划， 其主要通过互联网技术实现对各国及个人互联网信息活动的监听，并析其价值展开一系列的后续活动，此次事件让世界各国都对本国的互联网提高了警惕；由于我国的发展与 进步使某些大国对我们虎视眈眈，在这种环境下我国国防工程稍有不慎便会掉入陷阱。通过此次事件也警醒了我国对互联网国防安全的重视。[1]总的来说，网络信息安全对国防事业非常重要。 三、网络信息存在的隐患一般来说，网络信息存在如下安全隐患。 （一）病毒入侵 从目前现状来看，病毒形式多种多样，在入侵计算机网络后造成的后果也不尽相同。例如，在计算机网络出现病毒入侵后，有可能出现信息数据的丢失和篡改，系统卡顿或黑屏，甚至破坏计算机硬件系统，导致计算机主板的损坏。另外，病毒的特点之一就是具有极快的升级换代速度，使得一旦出现病毒入侵就难以对其进行彻底清除，给计算机网络与信息埋下安全隐患。 （二）黑客攻击 黑客攻击对计算机网络和信息安全具有极大威胁，所以电脑黑客，主要指的是高水平的计算机操作者肆意利用计算机网络漏洞、软件漏洞以及程序漏洞对计算机网络进行攻击，从而实现自己的目的。一般情况下，大部分黑客攻击都是为了信息数据的盗取或是勒索病毒的渗透，从而获取一定的经济效益。 （三）网络漏洞 在计算机使用过程中，其下载的软件和系统难免会出现不同程 度的漏洞，若是未对其进行及时的修补与更新，极易出现计算机病 毒，埋下不良网络分子入侵系统的隐患。而网络漏洞的后果亦是如 此，在计算机网络使用过程中，难以进行系统升级，虽然系统升级的本意是提供更好的网络服务与强化计算机网络的防御能力，但在 其升级过程中却极易出现网络漏洞，一旦网络攻击者发现漏洞并入侵，那么会影响局域网内所有的计算机，轻则数据丢失，重则网络 瘫痪。除了系统升级，造成网络漏洞的原因也有可能是网络管理者 的疏忽，没有及时发现网络漏洞并填补，从而埋下较为严重的安全隐患。[2] 虽然以上情况往往发生于个人计算机网络中，但是信息安全的隐患也随时可能出现在国家重要信息载体上，因此，无论是个人还是国家相关部门，都要做好安全隐患风险的排查，防患于未然。 四、网络信息安全保护措施（一）软件层面 使用一些安全检测软件可以起到一定的防范作用。 就目前的情形来看， 没有一项技术可以做到完全地预防计算机病毒的侵入。 在针对计算机网络安全的措施中要遵循 以预防病毒侵入为主要方法。 针对一些较为专业的计算机使用人员是可以将病毒查杀软件的作用发挥到最大限度。 及时更新电脑系统对电脑系统进行有效的修复。 （二）防火墙技术 防火墙技术能够有效地保护网络信息安全。只有发展网络防火墙技术得到，才能有效地阻止黑客等不法分子攻击计算机系统，可以保障计算机网络稳定、安全正常的运行。我国计算机专业人才应关注加大防火墙技术的研究，发展创新防火墙技术，使促进网络信息的安全推广。杜绝信息安全的威胁及隐患。 （三）监管 加强监测网络及认证管理力度。随着网络发展，也提高了网络监测技术的研究水平。入侵检测技术实时监控计算机网络是否有被入侵的迹象。运用入侵检测技术确实起到了降低信息安全风险的作用，但是，随着黑客、病毒等不断发展，我国应加大研究入侵检测技术防止黑客攻击计算机中存在的漏洞。同时在登录账户时，要加强用户信息识别、身份认证的管理，简单来说，就是用户在访问其他未知网络资源时，要求进行身份认证，或者口令密语等，控制用户使用网络的规范性，从而保障使用计算机时，网络信息的安全。[3] （四）协议与规范 制定相关协议和规范。标准规范知识图谱联盟第二 次工作会议近日在京召开。本次会 议由中国电子技术标准化研究院 及标准规范知识图谱联盟 (SKGA) 共同主办，来自高校、科研院所、 企业等五十余家联盟成员单位参 加了本次会议。 会议围绕“标准规范知识图 谱发展白皮书”编撰、IEEE P2959 标准项目《面向标准的知识图谱 技术要求》研制、标准规范知识 图谱联盟工作组任务以及标准规 范知识图谱平台系统功能展开研 讨。会议达成共识，标准图谱发 展前景良好，未来信息安全合规、 巡检维保故障排查、智慧集成系 统建设验收审查、公共安全防护、 集团标准法规智库等领域均可应 用标准规范知识图谱的高价值链 知识体系。[4]国际之间在某些情况下能够在网络信息安全方面做好合作共赢的工作。 （五）经验借鉴 适当借鉴经验。在欧盟和美国、英国、德国、法国、韩国等国家相继出台国家网络安全战略的大背景下，日本自 2013 年 6 月发布首份《网络安全战略》以来，不断推进和完善国家网络安全建设及其相关措施，并 已逐步建立了一套具有日本特色的网络安全治理体系。其在重视军民合作，推动数据共享，重视人才建设等方面做的不错，值得我们借鉴。[5]对于军民合作，2018 年 4 月 20 日，习近平总书记在全 国网络安全和信息化工作会议上强调，“网信军民融合是军民融合的重点领域和前沿领域，也是军 民融合最具活力和潜力的领域”[6] 。网络安全内容和斗争形式的复杂性决定了军队与地方、政府与民间的密切合作、相互融合，才是提高网络斗争能力、维护网络空间安全的有效途径，而这需要相关体制机制的设计、协调与磨合。 五、国家网络安全布局的设想习近平总书记在 2018 年 4 月 20 日全国网络安全和信息化工作会议上的讲话指出，“没有网络 安全就没有国家安全，就没有经济社会稳定运行，广大人民群众利益也难以得到保障”[7] 。 这一论断是极为高瞻远瞩的。在经济与社会生活高度数字化的今天，网络空间已经成为国家社会治理的重要对象，事实上也成为国家主权的一部分。 我认为国家的网络安全布局可以重视以下方面 法制方面。2015 年 7 月全国人大常委会发布的新 《中华人民共和国国家安全法》中，将网络安全上升到了国家安全的层面。2016 年 11 月 发布的 《中华人民共和国网络安全法》，对网络安全治理做出了基础性和原则性的规定。通过制度来保障网络安全，坚决捍卫国家网络安全主权。 科技方面。云计算、大数据挖掘、人工智能等技术的发展正如火如荼，我们应当大力加强国家信息网络技术的发展，运用相关技术，强化国家网络安全。 教育方面。大力加强人才培养，2017 年，中央网信办和教育部联合七所大学，开始筹建国家网络安全学院，标志着我国网络安全人才培养开始走向专业化和系统化。2016 年，中央网信办、教育部等六部门联合确 定每年 9 月的第三周为网络安全宣传周。网络安全需要全体人民共同维护，安全知识的普及至关重要。 国际方面。国家网络安全也应遵循人类命运共同体的原则，我国应当主导凝聚共识、合作共赢的理念，向世界传达网络信息安全的重要性，与各国共同捍卫网络安全，构建有序的国际网络空间。 [1]杨晓燕.网络信息安全与国防安全[J].网络安全技术与应用,2021(01):153-154. [2]刘金霞.计算机网络与信息安全的主要隐患及其管理[J].电子技术与软件工程,2020(22):232-234. [3]吴锐.大数据环境下计算机信息安全技术研究[J].山西能源学院学报,2017,30(02):202-204.[4].网络安全国家标准试点工作部署会在京召开[J].信息技术与标准化,2021(05):5. [5]胡薇.日本网络安全体系的布局、特征及其启示[J].重庆社会科学,2021(04):126-136. [6].张璁，张素轩，岳小乔.携手共建网络空间命运共同体［N］.人民日报，2016-11-19（01） [7].张晓松，朱基钗.敏锐抓住信息化发展机遇 自主创新推进网络强国建设［N］.人民日报，2018-04-22（01）.","link":"/2021/05/27/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E5%86%9B%E7%90%86)%E6%B5%85%E8%B0%88%E4%BF%9D%E6%8A%A4%E5%9B%BD%E5%AE%B6%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7/"},{"title":"(博雅)博雅课程期末总结报告大一上","text":"博雅课程期末总结报告 在北航的第一个学期，在信息大类工科实验班，士谔书院的这一段学习生活，时间不长，却经历了不少事情，长了不少见识。从开学的“我与祖国同框”活动，到共同观看70周年阅兵和庆典，我深深感受到了北航的红色工程师情怀，并且由衷为祖国的富强感到自豪与高兴，内心深处的爱国之情被召唤出来。从平日的学习生活中，我也感受到了来自不同地区的同学们学习能力之强，看到了大家为了自己的目标努力奋斗的样子，我也深受感染。再谈社团活动，到挑战杯志愿者服务，我感受到了来自大家的温暖和我给予他人的温暖给我带来的快乐，我非常庆幸能加入到这个大集体中，我不仅在几次社团活动中学到了各种技能和知识，拓宽了眼界，还交到了朋友，在我人生第一次的志愿活动中，我也体会了志愿者的辛苦，但也为帮助到了他人而感到高兴，感受到了我对于别人的意义。再谈思想道德之提高，在这短短的一学期中，我的思想也发生了变化，从对乱港分子之行感到愤怒，到思修课的课堂上，我对社会有了更深的思考，同时也能让自己格局更大，站在更实际的角度去看待问题。TD打卡和每周三的学习活动及博雅课程的参与，也对我有很大的意义，前半学期，我几乎每天去跑5公里左右，感受到了运动带来的乐趣和身心健康的重要，对于博雅课，我也是只要没有时间冲突的就去听一听，无论是专业知识，还是艺术欣赏，我都不同于从前，开阔了眼界。 总之，这个学期对我来说，在我的人生中，是非常有意义的，我见到了不一样的自己，也对我的人生志向有了更明确的努力方向，作为一个士谔学子，作为新时代的青年，应当做有理想有本领有担当的时代新人，我会继续坚守本心，爱党爱国，勤奋学习，只争朝夕，不负韶华。 19373185 周子航","link":"/2020/01/02/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E5%8D%9A%E9%9B%85)%E5%8D%9A%E9%9B%85%E8%AF%BE%E7%A8%8B%E6%9C%9F%E6%9C%AB%E6%80%BB%E7%BB%93%E6%8A%A5%E5%91%8A%E5%A4%A7%E4%B8%80%E4%B8%8A/"},{"title":"(博雅)博雅课程期末总结报告大一下","text":"“志士六艺”博雅课程期末总结主题报告 本学期已经接近尾声，在这一个学期居家学习的过程中，我在爱国爱党，勤奋学习，道德品格，身心健康等方面有了新的进步。 爱国爱党 新冠肺炎的突然爆发一时间让社会生产活动陷入瘫痪，我们也无法如期返校，然而在此紧急关头，我国顶着国外巨大的压力做出了武汉封城的重大举措，有效阻断了病毒的快速扩散，几个月过去了，我国抗疫工作取得了成功，最大程度上缩小了群众生命健康受到的威胁。在这几个月，国外舆论不断攻击我国政府和共产党，然而我国在疫情控制上取得的成功和其他国家现在的危机形成了鲜明的对比，加之近期美国由于黑人遭到白人警察跪压致死，引起了社会的动乱[1]，让每一个国人深刻认识到我国我党的决策的正确性和制度的优越性，我也前所未有的感受到祖国是非常安全的地方，党和国家在尽力的保护着我们的生命健康和人权。 勤奋学习 本学期由于无法返校，居家学习的生活遇到了一些困难，但是也正如此，更不能在居家的轻松氛围下放松了学习，克服困难，每周按时上课完成作业，认真参加每一次小测和考试，细致完成每一项任务，课外时间广泛阅读，学习英语，比上个学期的学习生活更加井井有条，投入更多的时间，效率更高，为自己的理想努力。同时在学校的多个专业讲座以及导学活动导师的复辅导下，也逐渐清晰了大学的规划。 道德品格 同样因为本学期基本居家没有外出，日常生活中只能通过新闻，公众号消息等接触世界，首先是疫情，让我认识到了美国等国家自私，虚伪的真面目，同时也看到了我国医护人员无私的伟大奉献。我认识到了美国暴乱下，社会中难以剔除的种族主义，也看到了我国全社会团结一心抗疫的巨大力量。在危机面前，能够在这次疫情中舍生取义的一个个护士，工人，志愿者才是值得赞颂的。 身心健康 本学期虽然居家，但在学校的鼓励下，我开始了每天keep的训练，并且养成了习惯，在学校打卡活动结束后仍坚持每天锻炼身体，保证充足的睡眠，整个春季学期身体健康没有生病。每周安排1-2个电影观看，每天阅读半小时，平时帮父母做家务，虽然没办法回到学校，但是精神生活很充实。 总而言之在本春季学期，本着不给国家添麻烦的原则，居家继续努力提高自己，窥探世界的百态，学习抗疫楷模，愿能在未来也能在国家需要时提供自己的力量。 [1] 刘程辉:《黑人遭美警察跪压锁脖7分钟致死，当地爆发大规模抗议》，https://www.guancha.cn/Shipin/2020_05_27_551943.shtml?s=zwyzxw,","link":"/2020/06/10/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E5%8D%9A%E9%9B%85)%E5%8D%9A%E9%9B%85%E8%AF%BE%E7%A8%8B%E6%9C%9F%E6%9C%AB%E6%80%BB%E7%BB%93%E6%8A%A5%E5%91%8A%E5%A4%A7%E4%B8%80%E4%B8%8B/"},{"title":"(围棋通识课)学院路围棋班  《围棋基础》感想","text":"围棋课感想 周子航 学院路围棋班 19373185 转眼间本学期的围棋课已经结束了，报名选择这门课之前，我从未想过通过这门课能学到围棋以外的东西，本以为围棋不过是一种竞技游戏，用来消遣打发时间，我也只是想学习一些简单的围棋技巧用以在闲时和朋友小下两局，抱着如此心态便选择了这门课。 万万没想到在上完第一节课后我的观念被刷新了，不仅仅是为薛老师涉猎的知识量之广所震撼，天文，地理，物理，化学，融会贯通，让我有一种跨学科的震撼感，我还因为薛老师讲述对的易经有了不同于高中时期停留在表层的重新认识，原来古人已经把如此渊博的文化和思想总结起来了。原来围棋背后有如此深层次的内涵，薛老师通过围棋想传达给我们的其实是一种易学的思维方式乃至整个人生的活法。 围棋文化是一种思想的具象化，薛老师通过围棋战局中各种情况的处理象征着人生遇到的各种问题的该怎么面对，让我感受到了前所未有的冲击力，人生如棋，当波澜不惊，安身立命。 阴阳，五行，风水，易学文化在薛老师的讲述下变得系统起来，我好像感受到了很多曾经遇到的事情，高兴的，悲伤的都有了新的感受，这是一种美妙的感觉，从开始对薛老师放下化学博士开始潜心研究易经的不解，在几节课后渐渐明白了潜藏在易学下的深厚的底蕴，那正是人活一生的法则与规律。 非常有幸选了这门课，学到的不仅是围棋，更是人生。感谢薛老师，最后一课的人生宝典让我受益匪浅，我对人生的思考又多了新的维度，愿未来能宠辱不惊过好这一生。","link":"/2020/11/23/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E5%9B%B4%E6%A3%8B%E9%80%9A%E8%AF%86%E8%AF%BE)%E5%AD%A6%E9%99%A2%E8%B7%AF%E5%9B%B4%E6%A3%8B%E7%8F%AD%20%20%E3%80%8A%E5%9B%B4%E6%A3%8B%E5%9F%BA%E7%A1%80%E3%80%8B%E6%84%9F%E6%83%B3/"},{"title":"(博雅)博雅课程期末总结报告大二下","text":"学期小结 本学期是在计算机学院的第二个学期，世界也仍旧处在疫情之中，好的地方是这学期大部分同学都打了疫苗，我国的疫情防控调动群众积极参与度还是非常高的，希望疫情能快快在世界范围结束，让一切都好起来。本学期我依旧是按部就班完成任务，如下是一些总结。 专业课之余，我丰富了我的课外生活，本学期我参与了十几次博雅，其中包括各种讲座，演出，实践活动等。除了博雅，我还前往国家大剧院听了一场管弦乐演出，感受了古典音乐的震撼 除了课余时间听的讲座，演出等，在本学期专业课程之外，我会坚持去操场跑步3~5km或者去游泳馆游1km，锻炼身体，让自己更有活力。同时按时睡觉，坚持每天早上吃早餐，尽可能过着健康的生活。 专业课压力依旧比较大，每周都要用大量的时间去学习，但是在这个过程中，培养了自己的系统工程思维和能力，比起上学期的计算机组成，在面向对象的学习过程中获得了进一步的架构设计思维，在未来面对大型工程的时候，会现有一个规划，在完成的过程中也会注意体系结构的划分等等。同时基础物理实验本学期继续耗费了很大的时间和精力，在这个过程中，我获得了如何检索和获取信息，抄写实验报告的能力。虽然在基物实验的期末考试非常不幸的抽中了困难的实验而且没完成，但是好在坚持过了两个学期煎熬的基物实验课程，，在本学期没有过多选择通识课程，但在课外时间我尝试做了一些科研的学习，在上一个假期我也和室友们一起参加了一次美赛，收获了很多经验。 除了以上部分，今年是建党100周年的重要时间节点，我也在日常空闲时间认真学习了党史，关注国家政策的发布，我国在党中央的领导下，率先完成了数以亿计的疫苗注射，让我国的生产生活基本回归了正常水平。世界范围，全人类仍处面临巨大挑战的时代，国外疫情形势严峻，在这样的特殊时期，我希望继续尽力提高自己的能力，同时尽可能的为疫情的防控，网络舆论的正确导向等事情上做一些小贡献。同时展望未来，为往后的大学生活，专业课学习等方面做好规划，面对机遇和挑战，努力提升。","link":"/2021/06/29/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E5%8D%9A%E9%9B%85)%E5%8D%9A%E9%9B%85%E8%AF%BE%E7%A8%8B%E6%9C%9F%E6%9C%AB%E6%80%BB%E7%BB%93%E6%8A%A5%E5%91%8A%E5%A4%A7%E4%BA%8C%E4%B8%8B/"},{"title":"(博雅)博雅课程期末总结报告大二上","text":"学期小结 本学期是一个全新的开始，我来到了计算机学院，新的环境，新的课程，新的集体，同样面临着新的挑战，课程难度变高，任务量变大，面对这样的困难，我尽力去提高了自己的学习效率。同时本学期因为仍处于疫情防控阶段，在学校也丝毫不能松懈，这一学期基本上没有出过校门，尽力不给别人和自己添麻烦，争取能在特殊时期做好自己分内的事情，不断提升自己的能力，应对未来可能要面对的挑战。 专业课之余，我仍丰富了我的课外生活，本学期我参与了外国语学院的外语文化节，看了同学们生动的话剧表演，参加了新年管乐团音乐会，感受了古典艺术的魅力。同时，参加了多次讲座，例如三只松鼠的廉政故事，了解了企业中的廉政建设；参加了急救知识讲座（同时本学期我选了健康常识教育这门课，在课上我也亲手体验了心肺复苏的基本操作）学到了应急预案，如果遇到紧急情况如何处理；爱情心理学讲座，了解了爱情之中我们需要知道的一些道理。 除了课余时间听的讲座，演出等，在本学期专业课程之外，我几乎每天都会去操场跑步3~5km或者去游泳馆游1km，锻炼身体，让自己更有活力。同时按时睡觉，坚持每天早上吃早餐，尽可能过着健康的生活。 专业课计算机组成的压力比较大，每周都要用大量的时间去学习，但是在这个过程中，培养了自己的系统工程思维和能力，在未来面对大型工程的时候，会现有一个规划，在完成的过程中也会注意体系结构的划分等等，与此同时基础课程不能落下，概率统计，大学物理等。同时基础物理实验也耗费了很大的时间和精力，在这个过程中，我获得了如何检索和获取信息，抄写实验报告的能力。在本学期选择的通识课程“失败的逻辑”中我拿到了较低的成绩，在这让人心痛的同时我也理解了要对自己的选择负责，要对生活中可能出现的任何不确定做好充分的准备，或好或坏的未知未来，本身也是生活中值得期待的事情吧。 在全人类仍处面临巨大挑战的时代，国外疫情形势严峻，美国等国家仍在出现着迷惑行为，我国近期也出现了疫情的一波反弹，在这样的特殊时期，我希望我要尽力提高自己的能力，同时尽可能的为疫情的防控，网络舆论的正确导向等事情上做一些小贡献。同时展望未来，为往后的大学生活，专业课学习等方面做好规划，面对机遇和挑战，努力提升。","link":"/2021/01/09/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E5%8D%9A%E9%9B%85)%E5%8D%9A%E9%9B%85%E8%AF%BE%E7%A8%8B%E6%9C%9F%E6%9C%AB%E6%80%BB%E7%BB%93%E6%8A%A5%E5%91%8A%E5%A4%A7%E4%BA%8C%E4%B8%8A/"},{"title":"(学习能力)大学生通用学习能力课程作业+2019年秋2-9周周三晚上（学院路校区）","text":"大学生通用学习能力课程作业+2019年秋2-9周周三晚上（学院路校区）+周子航19373185 大纲：0. 感受 剖析自己并定目标 运用大学生通用学习能力课程学到的方法 成果 总结 首先，请允许我先发表一下对这门课程感受。8节课的大学生通用学习能力的课程，我不仅学到了很多学习方法，还认识了许多朋友。由于我是第三周才选的课，比大家少了一节课，但我第一次去的时候，大家很热情的接纳了我，最开始让我印象最深刻的就是老师让大家听着音乐画一幅画，然后传给下一个人，下一个人再为你添上他心里想的东西，当时我最终拿到我的画之后真的非常开心，感受到了来自的大家的心意，当时就喜欢上了这门课，第一节课下了之后，我去测了自己的学习类型颜色，是绿色（感性+直觉），于是就这样，我成为了“是橙色不是橘色”组中唯一的绿色，每一周我都完全没有压力上周三晚上这一堂大学生通用学习能力的课，还非常期待，就这样一周周过去了，在前天结课时，拿到了老师准备的礼物：个人能力成长记录表，上面有我每一次课下作业填写的内容，让我回忆起了每一节课的一幕幕情形，下课后，突然感到一丝伤感，总之，真的非常感谢这门课，让我交到了各个学院的朋友，让我掌握了很多过去不曾想过用过实用的学习方法，给我在北航的每周生活中增添了一份姿色，十分感谢！ // 接下来是作业内容： 关于本学期英语学习的学习总结（一） 首先，我的小目标是：提高英语水平（尤其是听力），由于目前还没有进行过测试，没有办法给一个明确的英语提升的程度的标准，先以本次期中小测考85分以上作为第一个阶段目标，期末考85分以上作为第二阶段目标，如下为实现大目标需要执行的的小目标（运用smart原则）。 做到该目标需要完成的任务：1.每天背10个4/6级单词2.每天坚持在晚上9点50有效听10分钟听力3.每天晚上10点看几个美剧视频小片段4.认真完成课堂布置的作业，课堂上提高上课效果5.整理生词本并每天过一遍（二） 下面是如何运用“大学生通用学习能力”中所学到的内容来帮助完成目标的计划。首先，我认为最重要的是老师传达的：一定要实践，把在这门课上学到的东西变成自己的能力，所以，我先制定好如何运用这些能力的方案，然后坚持实践，根据效果进行调整。第一节课，我们探索学习风格，知道每个人有自己的风格，不一定非要去效仿其他成功人士的学习方法，我们应该根据最适合自己的情形，采取不同的学习方案，所以在下面的方案制定中，我将最适合自己的方法运用进去。针对第1，2，3条目标，需要用到的是时间管理方面的知识，对于时间管理，没有特别明确的方法，需要找到合适自己的并去实践，这里经过我的经验，我的解决方案是：由于每天晚上9点我会去运动，一定会在9点50前回来，因此9点50的时候是没有其他正在进行的工作的，此时我会安排第2，3项任务，由于目标时间较短，一定可以专注的完成。针对第1项任务，我将其安排在排队打饭的空闲时间或早上34节课下后在教室完成此任务。对于第4项的目标，认真完成课堂布置的作业，由于我总拖到课前写作业，导致作业质量不高，我需要用到反对拖延的方法，也就是召唤心中的怪兽去战胜拖延的猴子🐒，在每次英语课后，我会提醒自己，刚刚学习的知识如果不立刻写作业，拖下去就会忘记这些内容，这堂课就白上了，而你想小小娱乐，什么时间都可以，以此来迫使自己尽早高效的完成作业，如果实在事情太多没有办法立刻去做这件事，我就运用四象限原则，分类要做的事情，最终还是要尽早的完成作业。对于提高课堂效果，本来因为我本是听觉型学习者，我认为自己的上课效果足够好了，但在大学生通用学习能力这门课上，我了解到主动学习和被动学习之间的天壤之别，我是一个不太敢在课堂上积极发言的人，总是被拖着上台展示也只是应付，知道主动学习的效果远远好于被动学习之后，我决定以后在英语课上积极发言，做展示的时候珍惜好机会，锻炼自己的同时大大提高上课的质量。最后对于第5条目标，我用的方法是在每次英语学习时，及时把不熟悉的单词记录下来，并且复习曾经记录的单词，将3次以上都记着的单词划去。（三）（一段时间后）学习成果记录：APP每周单词背诵情况： 单词笔记： 期中小测听力分数26/30；换算为百分制为86分期中小测读写分数72/100；总的来说不算达成了小目标不过听力上，比起开学考试什么都听不懂（所在的内蒙古高考不考听力），还是有了比较大的进步，说明按照所学到的方法，每天坚持听听力和看英语小短片还有完成课程留的配音作业，都起到了不错的效果，坚持下去期末应该能收获更好的进步，与此同时，读写的分数不理想，主要是因为背课文这一题所占比例较大，考前没有复习，扣了14分，除此之外，这一段时间内阅读英语的量还是远远比以前少，这也是退步的一个原因。因此综上所述，前期规划的计划，我尽力在认真完成，除非有其他重要的事情耽误，这次考试也让我对计划做出一定的调整，以后要每天再抽10分钟看一篇英语的新闻报告，并且把每周背单词调整为每天背少量的单词。 （总结）我的本次学习报告就到此为止了，大学生通用学习能力课程给我带来了很多改进学习方法的措施，希望在未来，我能一直在现有的学习方法上做好改进，慢慢找到最最最适合自己的学习方法，相信这一门课能让我受益终身，再次感谢！ ——结束于2019-11-20 周子航 19373185","link":"/2019/11/20/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E5%AD%A6%E4%B9%A0%E8%83%BD%E5%8A%9B)%E5%A4%A7%E5%AD%A6%E7%94%9F%E9%80%9A%E7%94%A8%E5%AD%A6%E4%B9%A0%E8%83%BD%E5%8A%9B%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A+2019%E5%B9%B4%E7%A7%8B2-9%E5%91%A8%E5%91%A8%E4%B8%89%E6%99%9A%E4%B8%8A%EF%BC%88%E5%AD%A6%E9%99%A2%E8%B7%AF%E6%A0%A1%E5%8C%BA%EF%BC%89/"},{"title":"(支教)个人实践总结","text":"个人实践总结 历时两周，随爱行支教队完成了难忘的一次支教实践。 我们从五湖四海奔赴湖北恩施，在建始县相遇，共同前往了花坪镇民族学小学，开始了支教生活。在保障孩子安全上下学的前提下，我们每天上午和下午分别给1-5年级的孩子们上3节课，在和郑州大学微尘支教队的合作下，每天的30节课上的井井有条。丰富多彩的课程，基础课程，如语文数学英语等，其他课程，科学，音乐，美术等，还有特色的航模课，书法，编程课等。课程之余，我们的走访组同学每天抽出空余时间去采访当地孩子们的家庭，充分了解了当地生活，风土人情，经济情况，旅游特色等。宣传组的同学每天都在幸苦制作推送。我们几乎每个人都分配了课程任务，十几天下来，我们和孩子们都过得非常充实，几乎没有多少闲下来的时间。除此之外，我们还组织了阳光体育活动，即使响应国家阳光体育的号召，给孩子们多一些体育活动，有助于孩子们的健康成长，也是让孩子们在繁重的课业以外有放松的时间，以及和我们的进一步交流。对我个人而言，在上音乐课的过程中，大家很喜欢音乐课，上课很积极，每节课来到音乐教室都抢着拿小凳子，坐的很靠前，都要贴到白板上了。音乐课我们会给大家讲一些简单的知识，比如音乐的分类，音乐的联觉，乐器的识别，经典音乐剧片段欣赏等，此外我们带着大家唱一些流行歌曲还有大家喜欢的歌曲。小朋友们用清澈的童声唱出的《送别》，齐声高歌热血沸腾唱出他们喜欢的《踏山河》，无一不让我们感动和震撼。 支教结束之际，也是我们的实践活动圆满完成的结业仪式上，我们细细回顾这些天，我们和孩子们相处得非常愉快，离别之际，我们之间，我们与孩子，都已难舍难分，孩子们纷纷让我们留下了签名甚至联系方式，希望在未来的日子里还能记住彼此。也如我在结业仪式中谈到的，我期待看到孩子们数十年后的样子，看到他们精彩的未来。 这次实践的意义是多方面的，从孩子们说起，孩子们度过了开心的两周课程时间，得到了各个方面的知识，也跟着我们了解到了不少大山外的故事和见闻，孩子们也坚定了自己的理想，有了自己心里的小目标，知识以外，孩子们也玩的很开心，每天都洋溢着灿烂的笑容。对于我们实践队，我们了解了花坪镇的风土人情，近年来的发展，看到了社会中仍存在的小矛盾，如地区发展带动经济才能减少留守儿童的存在，也看到了党中央扶贫攻坚的任务成果，乡村振兴的成果。对于我个人，这些天快乐的支教体验，我看到的，我学习到的绝非只言片语能够讲述清楚，总而言之，是一次收获很大，意义非凡的难忘体验。","link":"/2021/08/31/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E6%94%AF%E6%95%99)%E4%B8%AA%E4%BA%BA%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/"},{"title":"(安协)民大观赛感想","text":"关于赴民大参观“予你平安”综艺大赛暨安全形象大使决赛的感想 本周三赴中央民族大学参观由平安民大协会组织的比赛，精彩的观赏后有一些感想。首先在各大大学中，只有北航有“安全体验馆”这样硬核的硬件设施，是一个非常大的优势，我们应该继续加以利用。其次，对于学习民大的相关举措，我认为有两点借鉴之处，第一是“安sir”的微信号，他和各个学院各个小班的安全员对接，能让安全员更及时的传达安全问题，再由安sir微信号及时公告，这样信息传递及时，效率非常高，我校目前每个小班都有安全委员，但是似乎没有很好的和保卫处对接，对此可以也采取类似的措施；第二是“安全形象大使”，同辈人直接的呼吁可能要好于长辈对晚辈的反复叮嘱，我们也可以借鉴这个活动，选出形象大使，既可以动员学生在评选过程中加强安全意识，还可以让学生更有责任感，参与度应该也会比较高。 2019/11/29 周子航","link":"/2019/11/29/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E5%AE%89%E5%8D%8F)%E6%B0%91%E5%A4%A7%E8%A7%82%E8%B5%9B%E6%84%9F%E6%83%B3/"},{"title":"(毛概)期待着世界的“瑞士军刀”","text":"“毛泽东思想和中国特色社会主义理论体系概论”文献读书报告 期待着世界的“瑞士军刀” 《共同构建人类命运共同体》 一、文献写作背景 法国思想家卢梭从社会契约论角度出发，谈到人把全部权利转让到由人民结合成的集体，个人服从集体，便意味着服从自己，人民就是对这个共同体的主权者，从那时起“共同体”作为一个社会角度的词语，便有了其意义[1]。在历史的长河中，人类仍在契约社会中跌跌撞撞的前进，数百年之后，“共同体”于社会仍然有着重要的意义。 2017年习近平总书记于日内瓦发表《共同构建人类命运共同体》的讲话。这基于世界近百年来发生的事情，人类经历了历史上重大惨烈的两次战争，无数被殖民者站了起来，惨痛的事实告诉人们，和平与发展才是世界应有的主基调，甚至基于几千年的历史，客观规律表面，这也是全人类的共同愿望，而当今世界机遇与挑战并存，只有全人类团结起来，相互依存，共同发展，才能实现人们心中迫切的愿望。同时，我国数十年以来飞速发展，如今承担起大国的责任，“人类命运共同体”也作为我国大国外交的方向，提供了中国为全世界全人类提供的方案，“纠正和超越了近代以来西方现代化道路、理论、制度”[2]。 二、文献主要内容 习近平总书记发表的讲话的主要内容分为以下几部分。提出人类命运共同体的原因、提供和介绍中国的解决方案、构建人类命运共同体需要坚持什么、对国际议论的回复、总结。 首先，习近平总书记提出了世界目前面临的挑战，全人类共同的心愿是和平与发展，然而全球面临着经济增速放缓，强权政治胁迫等问题，无论是站在当代的角度，还是站在为子孙后代负责的角度，都要求我们提出解决方案，而中国的解决方案便是构建人类命运共同体。坚持人道主义精神，坚持主权平等，沟通协商，国际形成公约，世界的命运掌握在每个国家手中。坚持对话协商，共建共享，合作共赢，交流互鉴，绿色低碳。习总书记指出，我国维护和平，促进共同发展，打造伙伴关系，坚持多边主义的决心不会变。构建人类命运共同体是一个美好但不容易的目标，中国愿与国际社会共同推进构建。 三、阅读心得体会 读完习总书记的发言后，我感到非常震撼，我国作为当今世界的一个大国，在自身发展的同时，主动承担起了大国的责任，提出构建人类命运共同体的设想，这不仅仅是为了让当今世界每一个国家能团结起来共同实现和平与发展的目标，还是为了对后代负责，让全人类的命运联系起来，共同进步。 和平与发展。从古至今，多少次战争的惨痛教训告诉我们，唯有和平与发展才是硬道理，当今世界，某些国家仍然在试图主导世界的发展，利用其他国家的战争去获取自己的利益，我们对这样的行为坚决反对，战争永远阻碍着人类的发展，鼓动战争损人不利己。如习总书记所说，只要坚持沟通，真诚相处，我们就可以避免发生矛盾，造成难以挽回的结果，人类命运共同体要求我们共同维护世界的和平。 普遍的安全。全人类的命运息息相关，没有一个人是一座孤岛，国家也是如此，如果对动荡的国家视而不见，只是思考自己的发展，必然会招来问题。恐怖主义就是例证，恐怖主义是对全球安全的威胁，如果我们不共同联合起来去抵制，恐怖主义终将带来更大的恐怖。如今的新冠肺炎亦是如此，但凡一个国家大意了，病毒便会肆虐，同时其他国家也会面临着危险，2020年，病毒给我们带来了太大的创伤，我国在疫情初期便做到了很好的控制，并且将数据资源无私的供给给全世界，然而部分国家非但不领情，还将其蔑称为阴谋论，如果人与人之间无法团结，那么人连最小的病毒都无法战胜。如果我们不联合起来共同抵御，只会让世界更长时间处于病毒肆虐的恐怖之中。习近平在2014年5月21日的亚信会第四次峰会上提出了包含人类命运共同体思想的亚洲新安全观以及“普遍安全世界”的概念，强调对话解决、发展安全并重的思路[3]。又在2017年乌镇互联网大会提出了“网络空间命运共同体”。这些都是以全人类的视角解决安全问题的举措。 共同繁荣。如习总书记所说，经济全球化是历史大势。没有一个国家能够闭关锁国快速发展，人类的发展是交织在一起的，我们唯有同舟共济，才能抓住机遇，迎接挑战，让人类取得长足的进步。 交流互鉴。如习总书记所说，全世界有200多个国家和地区，2500多个民族，宗教。任何文明都是人类璀璨的结晶，没有高低优劣，种族从来不应该作为歧视的标准，人和人生来平等，相互歧视只会导致无意义的冲突，阻碍人类的发展。借鉴多元文化中的好处，放弃糟粕，共同缔造人类文明的进步。 绿色低碳。这是新时代的重要旋律，节能环保不仅仅是为了自己，更是为了未来的人类负责，保护好地球村是全人类的职责。 如今，仍有不少国家在公然宣传着中国阴谋论，他们仅考虑自身的利益，格局狭隘，我们的格局应该足够大，全人类的命运息息相关，希望全人类能够团结起来，相信习总书记心中全世界的“瑞士军刀”终有一天能够实现。 参考文献： [1] 赵可金. 人类命运共同体思想的丰富内涵与理论价值. 《前线》 (前线网). 2017年08月18日08:28. [2] 人类命运共同体思想与中国外交新方向. [www.bjqx.org.cn.[2018-05-25](http://www.bjqx.org.cn.[2018-05-25)]. [3] 有冬. 郑先武：构建人类命运共同体“普遍安全世界”的思想真谛-中国社会科学网. 中国社会科学网.[2018-05-25].","link":"/2020/12/16/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E6%AF%9B%E6%A6%82)%E6%9C%9F%E5%BE%85%E7%9D%80%E4%B8%96%E7%95%8C%E7%9A%84%E2%80%9C%E7%91%9E%E5%A3%AB%E5%86%9B%E5%88%80%E2%80%9D/"},{"title":"(法科社)电车问题","text":"自动驾驶的“电车难题”能否从技术上解决？ 可以解决。第一种方案：当材料和机械足够强大，车内缓冲能力足够，可以直接解决电车无法紧急刹车的问题，这不仅可以解决电车难题，还能解决大部分交通事故，当然目前来说并不现实，而且失去了讨论电车难题的目的。第二种方案：既然一定要做出选择，给所有自动驾驶系统预置一套公认的价值评定准则，例如此人是否有过犯罪行为，此人已经实现的社会价值有多高，几个人加起来的价值和另外一个人的价值进行比较等，在遇到电车问题时根据该准则进行计算（计算机系统的计算速度可以达到在做出选择前计算出结果）然后做出相应的决定，当然如果这一套公认的价值评定准则从一开始不被大众认可，例如认为人的生命的价值没有办法评定等，这个方案就失去了意义，但我认为这一套体系同法律类似，是可以实现的，但是始终会有不同的声音，就像现在是否废除死刑也是一个争议一样。第三种方案：人工智能做出的判断根据电车运营者的意志提前预置，电车运营者进行相关协定的签订，如果真的遇到如此的情况，后果全部由运营者承担，这样可以理解为把决定权完全交回使用者手里，至少这样不会找不到追究责任的源头。总之我认为技术上总是可以解决的（指做出选择，并非直接两全其美的解决这个问题，如果要彻底解决这个问题，目前技术无法实现），关键还是人类怎么看待这个问题。 如果最终一定要在乘客与路人之间做出选择，你的解决方案是什么？理由是什么？ 如果一定要进行选择，我会选择救路人。理由如下：首先，选择乘客，对路人不公平，难以追责，选择路人，那这个车可能很难销售出去，两种方案都不是合理的解决方案，但是至少选择路人是本着对他人生命负责的态度，如果自动驾驶系统默认去放弃路人的生命，这明显是反人类的行为，在很多情况下和故意杀人无异，况且发生这样的事情后还难以追究责任，到底是追究车主的责任还是自动驾驶开发者的责任，当然和我第一题第三种方案所述的一样，如果能完美的解决把自动驾驶系统和车主的意识和责任完全绑定的话，还是可以实现和现在一样，把责任转移到车主身上，收到法律约束自然不会出现乱象。但是目前来看选择这样的方法也会存在其他争议，比如开发者的算法黑箱甚至车的故障，难以保证自动驾驶真的完全按照车主意志执行，而且技术上难以实现在事发前让车主想到所有情况来预置内容。因此我还是会选择救路人，只要政府保证要求开发商不可以开发保护乘客优先的系统，当然要保证开发商不能私下里违规串通等，这意味着买车的人或者坐车的人必须提前考虑到自己可能负担的生命危险，如果没有提前想好就不能购买或者乘坐自动驾驶的车辆，至少这样做可以在技术实现更好的解决方案之前，让伦理道德问题转移回原始的处理方法，不会引起大的争议。","link":"/2020/11/08/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E6%B3%95%E7%A7%91%E7%A4%BE)%E7%94%B5%E8%BD%A6%E9%97%AE%E9%A2%98/"},{"title":"(计导)大作业","text":"回答问题：3. 大数据会催生哪些新的行业？带来哪些新的职业需求？ 随着数据不断增多，首先，可能会出现专门维护，整理数据的的行业，将大量的数据进行收集，分类，删除垃圾数据，保证重要数据的完整性，储存起来，在需要的时候及时，快速地供给数据，这样就会带来需要擅长数据的维护人才职业要求。 其次，还可能出现关于保证数据安全的行业，用各类手段防止非法窃取数据的行为，保障群众的隐私安全，这将带来的职业要求是擅长网络安全的人才。 还可能有催生数据分析师的行业，一类能快速为用户筛选所需要的数据，并进行分析处理，然后得出结果，带来的职业需求即善于用各种手段处理分析数据的人才。 更可能会有大数据与将来的其他技术相结合催生的职业，拭目以待。 ——19373185 周子航","link":"/2019/12/19/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E8%AE%A1%E5%AF%BC)%E5%A4%A7%E4%BD%9C%E4%B8%9A/"},{"title":"(法科社)算法的可问责性","text":"为什么作者认为算法透明不足以解决算法的可问责性？ 取决于静态分析的有效性，识别代码难度高。 通常要对决策的要素和算法，关键的输入输出进行保密。保密可以防止“博弈”，防止用户反过来对预测的过程产生影响，算法透明会导致某些特征失去预测价值，决策价值。某些隐私数据是不应该共享的，同样可能引发法律问题 如果系统的设计未能考虑未来的评估和责任，就不足以验证软件系统属性 对于随机性决策，即使算法透明了，也无法保证每一次的输出结果相同，可预测，例如抽签。 系统设计者要随着时间的推移改变复杂的决策流程，算法，机器学习系统会改变对模型的预测，因此就算知道了源码和数据，也无法预测行为。 作者提出的程序规制性是如何实现的？如何评估程序规制性是否解决了算法的可问责性？ 实现：软件验证-加密承诺-零知识证明-公平随机选择 通过输入输出的验证，要求系统创建加密承诺，作为数字证据，让开发者在实施前发布承诺，阐述系统将做什么，在实际发布后承诺，阐述系统实际做了什么，用零知识证明确保系统行为对应其承诺等来确保系统虽然是不透明的，但是可通过一系列方法来对算法进行问责。 你认为作者提出的程序规制性能否解决算法的可问责性？你是否有解决算法可问责性的新思路新方法？ 我认为可以解决大部分算法的可问责性，算法只有开发者本人最清楚最熟悉，作者提出的程序规制性要求开发者直接描述自己算法的行为并且做出保证，这样既不限制开发者编写的独立性，也可以保证在发生特殊情况后可以有方法进行问责。算法本质上就是一个解决问题的手段，进行输入，得到输出，是最基本的流程，而让实现问责也基于这个层面可以很好的和算法设计契合。 我认为可以成立专门的不受利益影响的监管组织，类似纪检委，要求其有一定的技术能力，来对大厂开发的算法产生的数据（无论是简单的输入输出，还是机器学习产生的文件）进行保密性的监视，并且定期生成统计文件，此结果不对外界公开，来保证算法不出现违背规章和法律的情况，并且保证如果出现了问题，可以有充足的证据来进行问责。","link":"/2020/11/08/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E6%B3%95%E7%A7%91%E7%A4%BE)%E7%AE%97%E6%B3%95%E7%9A%84%E5%8F%AF%E9%97%AE%E8%B4%A3%E6%80%A7/"},{"title":"(职业规划课)个人发展规划","text":"职业规划与选择—克服迷茫，抓住现在 体会与收获 课程内容体会 在短短四周的课程结束后，我对职业规划与选择有了全新的认识。在前两次讲座中，我重新认识了大学阶段规划的一些要点 信息与决策 不同于高中时期，个人的发展已经被规划好，需要的只是努力即可，大学有着多种多样的选择，每一个选择都决定着不同的人生方向，在这种情况下，做出对自己来说正确合适的决策显得尤为重要，而做出决策的前提是获取充足的信息，如果信息不对称，将很难去权衡利弊，信息充足后，通过严密的分析，一些方法如SWOT或是数学加权，如对自己的兴趣，实现的难易程度，耗费的时间和精力等加权后进行考虑。信息加工理论便阐释了自我认知，决策技能，执行之间的关系。获取信息，综合自己的知识，根据一定的策略，再做出执行[1]。 正确的心理因素 要掌控好自己的主观情绪，不可冲动亦不可怠惰，不可以因为想要抓住所有机会就不经考虑去做决策，也不可以因为害怕失败就不去抓住任何机遇，在必要的阶段果断的做出选择在信息洪流中分析出适合自己的选择，做出正确的决策。同时，职业规划这件事本身是站在自我实现，人生不朽的高度上来规划职业的，不可仅停留于报告之中，而是应当将其根植于日常生活中[2]。 职业选择的因素和要点 职业选择要考虑的因素有性别，经济状况，家庭等各种个人因素，可以考虑比重，但不可只由某一个方面做出决定。同时，在选择就业时，地域，行业，企业，业务部门都是要考虑的要点，他们决定着能否在未来的职业生涯中持续发光发热。 设立目标并分解执行 遵循SMART原则，具体性，可衡量性，可实现性，相关性，时限性同样对职业规划有着强的指导性[3]，设立合理的目标，才有前进的动力，而分解目标为细致的条目去执行可以保证在正反馈机制下，管理好时间，脚踏实地前进。 对数据的感受 在课程中，我也看到了很多北航毕业生的调查数据，对我而言印象最深刻的在于第一，要选择本科毕业就业还是研究生毕业就业，我应当考虑自己对科研的兴趣，在未来的2年，我应参与到一些科研中去了解自己是否真的感兴趣。第二，可以看到，各大公司对员工素质要求的共同点是具有强的学习能力，这是因在高速发展的社会中，只有终身学习才能抓住机遇，迎接挑战。因此我应当在大学期间持续培养加强自己的学习能力。 校友经历感受 朱皞罡教授 朱教授更多的是分享一些经验。感受最深的点，第一，我之前认为学校的课程体系并不合理，但是现在明白计算机学院的课程体系培养的是我们基础的核心的工程能力，只有真正去重视这些基础，才能对未来大有裨益。第二，加入实验室，不仅能让我学会更多东西，还能让我认识到自己是否对科研有兴趣，这对于未来和目前的规划都有着一定意义。第三，学会大量阅读英文文献与书籍，这无论是对于科研还是拓展知识面，增加知识深度都有好处。 王亮学长 王亮学长更多的是讲述了自己的经历。从其中我认识到，第一，无论选择作什么，大学四年应有清晰的规划。第二，明确自己真正长期追求的东西，而非眼前的一些蝇头小利。第三，学会舍弃，已经做出的选择不后悔。非常佩服王亮学长能在大家都不选择出国的大环境下坚持自己的选择，我也希望能在当今做出自己真正想要和不会后悔的生涯选择。 参考文献 [1] 饶舒,刘睿.职业生涯规划的基本理论与方法[J].科技信息,2009(15):147+146. [2] 高桂娟.对大学生职业生涯规划的分析与思考[J].中国高等教育,2007(07):47-48. [3] 谢映菁.基于SMART原则的大学生就业指导路径研究[J].湖北开放职业学院学报,2020,33(08):62-63+68. 个人发展规划 个人分析 1）兴趣 个人对计算机有很浓厚的兴趣，在未来会继续学好专业知识并且拓宽自己的知识面，关注学术前沿。 2）科研 对于个人而言，我喜欢学习的过程，但是不确定是否喜欢针对某一个内容进行有深度的科研，或许自己没有这样的耐心，因此，要现在大二期间参与到一些科研项目中，观察自己是否热爱科研。 3）国内/国外 虽然目前世界局势（疫情，外交等）不容乐观，但是我仍然想去到另一个国度，去感受其他国家的教育和文化，由于目前无法预料未来3年后的情况，因此计划先为出国做准备，在大四阶段根据实际情况做出下一步决策。 4）就业 对于个人而言，更喜欢做全局性的工作，而非小小的一个模块，未来可能会考虑自己创业，但是在创业之前为筹备资金和学习企业的管理和运营，需要先入职一个大企业，如果可以，感受多个岗位的区别。 发展规划 大二：参与一些科研和竞赛项目，寻找自己的兴趣，同时准备四六级托福GRE考试，巩固自己的基础。 大三：确定自己本科毕业后的方向，并且进一步提高自己的计算机工程能力，拓展自己其他方面的知识。如果可以，出国看一看。 大四：根据局势确定自己能否继续出国，如果情况不好，根据自己对科研的热爱程度，转为考研或直接就业。 本科毕业后：如果在国内或国外读研，继续努力学习，提高自己的能力。如果就业了，尽可能尝试不同的岗位，有一定的资金和能力之后，尝试创业。 总而言之，对于目前来说，不要焦虑于未来，获取信息，克服迷茫，抓住现实，做好眼前的每一件事，脚踏实地，方能得到自己真正想要的未来。","link":"/2020/10/13/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92%E8%AF%BE)%E4%B8%AA%E4%BA%BA%E5%8F%91%E5%B1%95%E8%A7%84%E5%88%92/"},{"title":"(计导)作业","text":"回答问题：3. 大数据会催生哪些新的行业？带来哪些新的职业需求？ 随着数据不断增多，首先，可能会出现专门维护，整理数据的的行业，将大量的数据进行收集，分类，删除垃圾数据，保证重要数据的完整性，储存起来，在需要的时候及时，快速地供给数据，这样就会带来需要擅长数据的维护人才职业要求。 其次，还可能出现关于保证数据安全的行业，用各类手段防止非法窃取数据的行为，保障群众的隐私安全，这将带来的职业要求是擅长网络安全的人才。 还可能有催生数据分析师的行业，一类能快速为用户筛选所需要的数据，并进行分析处理，然后得出结果，带来的职业需求即善于用各种手段处理分析数据的人才。 更可能会有大数据与将来的其他技术相结合催生的职业，拭目以待。 ——19373185 周子航 目前的人工智能技术仍然属于“弱人工智能”，与科幻电影中的机器具有强大的沟通能力（甚至具有思想）还有较大差距，根据你对现有人工智能算法与模式的理解，你觉得我们怎样才会达到“强人工智能”，是在现有基础上增强算力与数据不断依靠量变引起质变，还是开发出一种新的算法甚至是计算机架构来实现飞跃？ 我认为应该是后者：开发出一种新的算法甚至是计算机架构来实现飞跃。针对目前的弱人工智能，应该是基于不断给予信息或机器通过学习自主获取信息实现“智能”，但我们更希望的是，拥有能够“思考”的人工智能，仅仅通过增强算力，只会增加数据分析的速度，而现在数据分析的速度已经很快，看不到更快能产生什么质变，同样的，单一的量变仍然在本质上不能改变人工智能的工作方式，所以我认为，应该开发出一种更接近人类思考的算法，使AI能够从少到多学习知识，做出能让机器产生类似于人的“思考”的算法或计算机架构。 举个不太现实的例子，动漫《刀剑神域 Alicization》中，AI“摇光”，模拟了人类的发展历程，让大量AI产生，演进，产生了一个独立的社会，以此研究人工智能。我认为这样的由低至高的人工智能的学习方式是值得探索的，因为这更接近人类自身的演进过程。 请从下列题目中选择一项完成（六选一）：3. 虚拟现实与增强现实技术已经出现了很多年，在各自的方面做出了一定的成果，但是你觉得在未来哪个会成为真正的主流？是像《头号玩家》一样VR世界成为人们离不开的部分，还是像《赛博朋克2077》一样人人通过增强显示头盔来为自己的日常生活提供更多的信息？ 《头号玩家》和《赛博朋克2077》分别代表VR和AR的缩影，但在我看来，增强现实可能更可能成为主流，首先，人终究不会离开现实生活，而VR想要做到完全模拟现实还很困难，例如，嗅觉，触觉的现实化，尚且有一段很长的路要走，针对增强现实，现在普及较差主要是因为大众用户使用AR还只是仅仅停留在用手机实现，然而，若在未来，通过技术的进步，能将AR系统嫁于更小更方便的设备，不仅仅是一个头盔（因为会重，会热，不美观），或许可以仅仅是一个眼镜，或是一个极小的投影，或是在人眼前进行全息成像，如此方便的话，就会大大普及使用，到时候，若能再结合传感器，将人在现实生活中的动作等与AR设备有很好的交互，例如直接在现实生活中，眼前直接出现聊天的浮窗，消息的通知，人可以用手势直接进行操纵，查询眼前物体的资料，直接在现实中，在桌子上和朋友一起玩小游戏，或在一片场地中玩FPS和RPG游戏，如此结合了娱乐与现实生活，手机就可以淘汰了，也就不会有低头族了，人与人之间的交际也会更进一步，在现实的动作游戏中，还可以起到锻炼身体的作用，这是VR所难以做到的（参见刀剑神域：序列之争），尽管对未来增强现实的发展是什么样还不确定，但我无比肯定的是，增强现实会大大提升人的生活质量和幸福感，期待着AR和VR的发展，也希望将来自己也能为VR和AR的进步添一份力。 ————19373185 周子航 云游戏并不是一个全新的名词，云游戏的概念最早诞生于2009年，但受限于高昂的维护成本和肉眼可见的延迟，最终以失败告终。近来年随着云计算的发展，尤其是在5G即将大规模应用的当下，云游戏又一次出现在了人们的视野中。你认为云游戏相比传统游戏方式有哪些优点和缺点？云游戏是否会取代传统的游戏方式，彻底改变人们的娱乐体验？ （由于对此方面了解较为粗浅，可能会贻笑大方，请谅解）据我所知，目前对于游戏玩家来说，最大的开销在于显卡的要求，GTX1050可支持一些普通游戏，GTX1660Ti可支持更多更好的游戏体验，而再升一档RTX2060，性能只提升了少许，价格却提升了一大截，再加上光锥等技术（虽然现在尚未用于大量的游戏，可能会提升未来的游戏效果），价格更会不菲，再说便携性的问题，台式电脑加上这些乱七八糟的零件还可以接受，对于笔记本来说，玩游戏就需要更好的散热功能，（以联想拯救者P7000来说）重量会大大提升，而且电源也会很大，非常不方便，想要兼容性能和便携两个部分就很困难，只能再加价购买轻薄性能本，可能就要到2万以上了，看起来非常的贵，因此，说云游戏，我认为其很有前途 就我通过网络对云游戏的粗浅了解加上胡春明教授对云计算的讲解，我初步对云游戏有了一个了解，大概是通过网络，实时将游戏内容发到玩家的PC上，这样，云游戏自然有了超群的优点：玩家无需很好的显卡，只要接收服务端的文件即可，好像看视频，这样不仅省了高性能电脑的钱，还能让玩家有更好的游戏体验（无需下载客户端，无需手动启动，无需繁杂设置等），但自然也会有相应的缺点：若网络有中断，游戏会非常不稳定，对网络要求很高，可能安全性也会出现问题，对于流量消耗会很大 除此之外，由于5G的大规模商用，云游戏有了更多可能性，我想，网速和稳定性的提高，自然而然会解决云游戏的缺点，这样，云游戏很可能会取代传统的游戏方式，遥想未来，我们只需打开一个显示器，甚至利用虚拟现实，即可快速享受极致的游戏体验，那一定非常令人愉快。因此，我认为云游戏有着极为广阔的未来。 ——19373185 周子航","link":"/2019/09/29/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E8%AE%A1%E5%AF%BC)%E5%B0%8F%E4%BD%9C%E4%B8%9A/"},{"title":"(计导)展示","text":"![[(计导)导论讨论课_周子航.pptx]]","link":"/2019/11/02/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E8%AE%A1%E5%AF%BC)%E5%B1%95%E7%A4%BA/"},{"title":"(马原)浅谈大数据时代人类作为个体受到尊重的权利与马克思主义","text":"浅谈大数据时代人类作为个体受到尊重的权利与马克思主义 19373185 周子航 计算机学院 21世纪是信息化的时代，大数据，人工智能，虚拟现实等技术迅速发展，人类作为个体，在信息化这一方面有了新的定义，每个人拥有自己的身份证号，手机号码，任何一个信息网络的服务者，如各个厂商的APP，对于一个用户的标识并非其姓名，而是一串数字号码，任何人在信息时代的定义不过是一串冰冷的二进制。然而，人类应当拥有其作为人类的基本权利，应当得到其作为一个个体的基本尊重，大数据应当带来的是人类幸福生活的信息化，而非人类的信息化。 一、马克思对人类生存的定义 在生存论的视域中，马克思把科学、技术、工业都看成人生存的内在活动，而这些活动的展开必须在具体的、历史的社会关系中才能实现。通过把人的科学技术活动内在于人的生存实践，马克思实现了对把科学仅仅视为抽象的观念领域的传统科学观的超越，实现了人类思维方式 “向属人的、实践的思维方式的根本转向”[1]。马克思将科技和工业的发展看作人类生存的实践，而大数据时代科技这种工具逐渐转化成了主宰人类生活，指导人类生存的主题，这是一种不合理的趋势。 二、大数据时代的人类 大数据时代能够把人的本质及其社会关系当作标准化、机械化的人的数据形态，人的情感、意识、态度及所有行为都可以被归纳为数据，从而进行数据分析。这也是对人的本质的简单化、物化。马克思主义哲学总是从实践的角度去理解和剖析人的存在，从而进一步从人的存在的角度全方位把握理解人的本质及其社会关系[2] 。而现在我们与社会的交集逐渐变成了数字，我们使用我们的脸作为一串数据去作为通行认证，而不是我们真正被别人所记住的长相。不仅人被作为数据去储存，人的基本隐私权利也受到了空前的威胁，我们每天从起床的那一刻，我们的位置，行程被记录下来，某些APP对我们的位置进行分析，以此来给我们推荐网红餐厅，相亲APP，我们浏览的所有东西被记录下来，被购物网站进行分析，绑架我们的喜好，推荐给我们我们可能想买的商品，我们被新闻网站关进信息茧房，只为我们推送我们可能想看和爱看的内容，麻痹我们的神经，让我们活在一个自认为优良的虚拟环境中，甚至APP们联合起来，构建起一个信息网络，连接每一个APP中的我们，连接我们和我们身边的人，或许你上午还在和朋友聊一个话题，下午就能看到相关内容出现在你的首页推荐上。人类比起一个值得被尊重的生命，更像是一个信息科学中所谓的对象。 三、大数据资本主义对个人的侵害 大数据技术的出现，一开始就深深植根于互联网资本对于经济盈利的需求中。此前，北美及欧洲的部分学者就已经意识到基于个人数据挖掘的一种商业模式正逐渐形成。1992年，美 国学者埃瑞克·拉尔森在《赤裸的消费者》一书中指出，商家通过电子信息技术密切监控消费者的个人隐私，从而在与现有客户建立良好关系、定向投递广告以及市场调研等方面获取经济利益[3]。在大数据技术—经济的运行模式中，隐私数据作为不可缺少的中介环节，参与到数据资本创造剩余价值的过程中，构成了新形式的大数据隐私经济。在当代的信息资本主义社会中，个人隐私数据作为一种生产原材料，参与到隐私经济的生产过程中[4]。站在马克思主义的角度，大数据参与到社会活动中，本身就是一种资本生产资料，如今各大公司没有下限的对个人数据进行掠夺，这是对人类作为个体的权利的剥削。 一个明显的例子就是大数据杀熟。基于大数据技术的“杀熟”行为表现得十分隐蔽，消费者之间往往不会进行价格等数据的交流，为不良商家大数据“杀熟”提供了足够的空间。利用大数据频频“杀熟”，显然已经违背了大数据出现的初衷。通常情况下，用户长期的使用习惯、经济能力、使用轨迹、行为偏好等数据 成了企业“杀熟”的突破口。譬如，同样的商品或者服务，给“熟客”的价格往往比新用户贵。消费者与经营者之间的“熟”即代表用户黏性，消费者基于对经营者的信任，不会再“货比三家”。而经营者却为了追求利润最大化，利用消费者的信任，对老用户提供并不优惠的价格，甚至歧视性定价，实属典型的不诚信行为[5]。大数据时代，我们的信息被记录下来，作为剩余价值供资本家使用。 四、人类应当受到作为个体的尊重 马克思在《1844 年经济学哲学手稿》中从四个方面论述了“异化劳动” 的表现: 一是，从生产的结果来看，劳动者的辛勤劳动与他生产的劳动产品相异化; 二是，从生产的过程来看，劳动者与他自身的劳动活动相异化; 三是，从人的类本质来看，劳动者与他的类本质相异化; 四是，从人际关系方面来看，人与人的关系相异化。在阐述劳动者与他的类本质相异化时，马克思对“人的本质”作出了相关的界定[6]。大数据已经逐渐造成了人的“相异化”。 总而言之，大数据技术作为一种高新科技已经全面应用于当代社会，我们都已经切实感受到他带来的红利，而不管我们接受还是拒斥，大数据技术都存于我们的日常生活之中。但是同时我们也应该时刻保持着理性，数据终究只是一串0与1，其不能代表我们任何一个人，更不能去代表整个人类社会。大数据所构建的虚拟的数据世界不会取代人类社会，大数据也不能替代感性的生命存在。 参考文献： [1]李卫红.马克思的科学观革命及其意义——从生存论的视野看[J].福建师范大学学报(哲学社会科学版),2021(03):1-11. [2]张喻,王雪慧.大数据技术异化的马克思主义哲学意蕴[J].现代交际,2021(03):210-212. [3]LarsonE.TheNakedConsumers:HowOurPrivateLives.BecomePublicCommodities[M].NewYork:HenryHolt. andCompany,1992:14. [4]武青,陈红兵.大数据时代的隐私经济及其批判[J].东北大学学报(社会科学版),2021,23(02):8-14. [5]陈玉春. 规范大数据应用防范“杀熟”“薅羊毛”[N]. 人民邮电,2021-05-14(003). [6]王彦容.对马克思两种“人的本质”思想的再理解——基于对《1844年经济学哲学手稿》和《关于费尔巴哈的提纲》的研读[J].哈尔滨学院学报,2021,42(04):10-13.","link":"/2021/05/29/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/(%E9%A9%AC%E5%8E%9F)%E6%B5%85%E8%B0%88%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%97%B6%E4%BB%A3%E4%BA%BA%E7%B1%BB%E4%BD%9C%E4%B8%BA%E4%B8%AA%E4%BD%93%E5%8F%97%E5%88%B0%E5%B0%8A%E9%87%8D%E7%9A%84%E6%9D%83%E5%88%A9%E4%B8%8E%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89/"},{"title":"编译实验总结感想","text":"相关文章：[[Alxa_Compiler 编译器]] 总结感想先说说关于选择PCODE，选择了PCODE，早早结束了编译实验的全部任务，也没经过很多人在选择mips85+还是选择PCODE+85的痛苦，私以为我不愿陷入焦虑去纠结这个什么给分高低，也不想浪费大量时间去研究怎么生成mips和卷优化，因为这不是我想做和喜欢的事情。也不为别的，就是想要轻松一点，节省时间做点自己想做的事情。当然，生成PCODE反而是我感觉更能让我觉得有趣的事情，无需遵循某种既定的体系（虽然这可能对我没有好处），而是自己设计了PCODE指令，一边从递归下降中生成指令，一边写虚拟机解释器，在这之间，我不断修改指令生成和解释器，感觉自己能够完全地掌控这个我亲手写的编译器，最后让虚拟机完整地成功地跑代码，反而对我来说是一件很有成就感的事情。 至于[[设计文档]]为什么要写成英文，首先，想要更方便更直观地描述代码，类，对象，与其给每一个东西一个汉语解释，我认为干脆用英文来描述更显自然，第二，想在写文档的同时顺便练练英语，仅此而已。不是想给助教和看我文档的人添麻烦，如果很不方便阅读，可以翻译成汉语再读，亲测用有道翻译完还是可以看懂的，实在不行也可以来垂询我本人。总结当然就不写英语了，毕竟不是母语。 关于一些反思，在语法分析和代码生成两部分，我还是没有设计好架构就开始写，完工后出现了较多bug，甚至在代码生成de到了语法分析时候的bug，在面向对象课程的时候，已经多次反思过这件事，这实属不该，在今后的大型工程中，要继续好好注意架构设计。也非常感谢在我debug过程中帮到我的zyq，lyx，dky同学。 最后，站在我个人的角度，我认为从词法分析，语法分析，错误处理，到代码生成这四个任务，已经很好的做到了让我对一个编译器体系架构充分理解并让我把它完整的做出来，对我个人而言，这已经完整了，我算是轻松愉快地（除了在语法分析和代码生成两次任务debug的时候属实不太顺利）完成了编译实验，很有成就感，且收获颇丰。 意见建议首先，个人认为课程实验的安排很好，虽然在初期阶段不是很清楚后面要做什么，但是课程组的词法分析和语法分析的作业要求很好的贯彻了一点，尽管我没有设计好后边怎么进行代码生成，因为词法分析中对每个Token的正确生成，语法分析中正确的递归下降，也可以很好地设计出正确的编译前端，错误处理同样很有帮助，在设计错误处理的时候进行了符号表的设计，以及在debug的过程中更清晰的认知了数组传参的过程，以至于在代码生成阶段不会出现过多需要考虑的问题，四次实验，基本没有出现完全不知道怎么做的情况，也没有出现某一次实验过于困难或简单的情况，总体体验还是很好的。 官方提供的辅助测试库也非常友好，同学们做的测试集非常好，通过学号还可以询问其本人，让debug变得轻松了不少。错误处理实验，虽然没有官方提供的测试数据，在讨论区也有同学热心提供了样例。 该学年我们有幸第一次可以使用Java，我本人也是使用了Java写这个编译器，个人认为同学们更熟悉Java语言，可以更好的把注意力放在编译器的架构设计上，C++会让这个过程提高难度。 这门课程的实验很完善，确实提不出大方向的建议，细节上有以下几点： Judge平台登陆页面的表单存在一些问题，不能直接触发浏览器的密码填充，需要点三次或者先输入几个字符再删掉 期中考试时评测机体验实在太差了，在等待评测上耗费了大量时间 不理解设计文档为什么只能是压缩包，不能交pdf 感谢编译实验课程组的辛勤教学！","link":"/2021/11/16/%E8%AF%BE%E7%A8%8B%E6%84%9F%E6%83%B3/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E6%80%BB%E7%BB%93%E6%84%9F%E6%83%B3/"},{"title":"2021年11月的第一场雪","text":"真的很冷 今天大家的关注点都在S赛，我也未能免俗参与其中","link":"/2021/11/07/%E9%9A%8F%E6%83%B3/2021%E5%B9%B411%E6%9C%88%E7%9A%84%E7%AC%AC%E4%B8%80%E5%9C%BA%E9%9B%AA/"},{"title":"何以变革","text":"大部分人做着自己不想做的事情，只是为了生存，这点有史以来未曾改变。有人只是爱好，有人只是在追求功利，摆出一副难看的样子，卑微的为了让自己能或许多有一点点微乎其微的可能性，去屈服，痛苦，下跪，丧失着自由。何以变革，或许少部分值得敬佩的，才是异类。 我选择方式越来越趋向于同一个准则，或许是积累了那么多经验，觉得只要这样做才是应该的，才能让自己快乐，当然，这样的选择方式，在遵循的同时，也不失会带来一些焦虑，然后我又去抑制这种焦虑？就不知道是自己在习惯的过程中，还是做错了。","link":"/2021/11/20/%E9%9A%8F%E6%83%B3/%E4%BD%95%E4%BB%A5%E5%8F%98%E9%9D%A9/"},{"title":"关于封校的行为艺术——很有冲击力","text":"今日看到北京电影学院的行为艺术，甚感封校许久政策就是最明显的校内不同群体的利益冲突，比如在BUAA，冲封校冲得最厉害的，似乎是大四的同学，因为很多人急于出去实习科研。对于一些每天的生活只有卷的同学，封校政策并无大碍。对于北航家属呢，此政策影响不到他们的正常出行。对于我呢，在我想出去玩的时候，对政策感到厌恶，在我不想出玩的时候，却也觉得无所谓。 《肖申克的救赎》 更新于2021-11-23 10:17 昨天刚吐槽完这个，今天BUAA就改报备制了，近期也并无心出门 《不至于》","link":"/2021/11/22/%E9%9A%8F%E6%83%B3/%E5%B0%81%E6%A0%A1%20%E5%8C%97%E4%BA%AC%E7%94%B5%E5%BD%B1%E5%AD%A6%E9%99%A2/"},{"title":"岁末将至","text":"2021年匆匆的过去了，看上面这张图的话，似乎眼前的这些周期都很快将要画上句号。 2021年仍然是不平凡的一年，仍然记得年初开学前的焦虑，现在回首，已是云淡风轻。 昨天也做了一件有意义的事情，终结了我的某个让我焦虑了一年的项目，很遗憾，和一般情况不同，不是顺利完成了，而是我终于宣告退出了，不知是我诉苦奏效还是项目确实没有什么意义，身边人在最后关头支持我的退出。且不谈这个项目的实际意义，我已经丧失了对项目的兴趣，尽管起初驱动我的也不是兴趣，最主要的还是这一年在这一件事上，循环往复的都是焦虑和难以推进，在近期，也是我今年最忙的时间段，项目突然开始快速推进，我借着这个机会，跟老板提出退出。最终什么都没有拿到，倒是这一年，更像是两年，本就社恐，又无经验，还得不到具体的指导，老板问我有没有给我压力，确实也没有，是自己给自己增加了不少压力，而我，2021年末的我，已经不愿再做自己不喜欢的事情了。让此事告终，心情也好了不少。 这几天甚是忙碌，周围人都出去玩乐了，我还在做作业，复习重修的课程。小伙伴今天下午约我出去玩，我才意识到这已经是这学期不知道第几次因为要考试而拒绝了。倒也不觉得情绪低，因为清楚自己在做什么，为什么忙，除了时间确实不够用，熬了几次夜，反倒挺有兴致的。也非常期待下一周，校历第13周的结束，这意味着编译和数据库的结课，数分期中考试的结束，物联网，安卓大作业的结束，虽然此时此刻他们都还没有结束，也不知道会以什么样的方式结束。 写完这篇，Typora提醒我15天后他要开始收费了。回想疫情居家的那一学期，在6系学长为我们讲解数据结构时，看到了学长的Typora，一眼喜欢上了这个软件，专门加了学长好友去问这款软件叫什么，学长告诉我，如果到了6系会经常用到，我还一笑，不曾想过自己会去6系，如今已是在计算机学院的第二年了。恰合主题，时间过得这么快，也算见证了Typora的演变。 岁末将至，敬颂冬绥","link":"/2021/11/28/%E9%9A%8F%E6%83%B3/%E5%B2%81%E6%9C%AB%E5%B0%86%E8%87%B3/"},{"title":"&lt;% tp.file.title %&gt;","text":"","link":"/2000/01/01/Templates/FrontMeta%E6%A8%A1%E6%9D%BF/"},{"title":"Django相关","text":"数据库转类 python3 manage.py inspectdb 解决冲突问题 123456class UserEvaluate(models.Model): user_evaluate_id = models.AutoField(primary_key=True) user_evaluate_text = models.CharField(max_length=100, blank=True, null=True) user_evaluate_score = models.IntegerField(blank=True, null=True) user = models.ForeignKey(User, models.DO_NOTHING, blank=True, null=True) post_user = models.ForeignKey(User, models.DO_NOTHING) 后两行改为 12user = models.ForeignKey('User', models.DO_NOTHING, blank=True, null=True, related_name='user_evaluate_1') post_user = models.ForeignKey('User', models.DO_NOTHING, related_name='user_evaluate_2') Django 腾讯云函数部署 如何部署","link":"/2021/12/02/%E5%BC%80%E5%8F%91%E5%8D%A1%E7%89%87%E7%9B%92/Django%E7%9B%B8%E5%85%B3/"},{"title":"Maven","text":"本地仓库123456mvn install:install-file -Dfile=path-to-your-artifact-jar \\ -DgroupId=your.groupId \\ -DartifactId=your-artifactId \\ -Dversion=version \\ -Dpackaging=jar \\ -DgeneratePom=true 其中： &lt;path-to-file&gt; 为 jar 包的文件路径 &lt;group-id&gt; 为 jar 包的 GroupId &lt;artifact-id&gt; 为 jar 包的 ArtifactId &lt;version&gt; 为 jar 包的版本号 example: use cmd 1mvn install:install-file -Dfile=D:\\Code\\MCPlugin\\Gem\\target\\Gem-1.0.0.jar -DgroupId=com.mcatk -DartifactId=Gem -Dversion=1.0.0 -Dpackaging=jar 1mvn install:install-file -Dfile=D:\\Code\\MCPlugin\\ItemManager\\target\\ItemManager-1.0.0.jar -DgroupId=com.mcatk -DartifactId=ItemManager -Dversion=1.0.0 -Dpackaging=jar 1mvn install:install-file -Dfile=D:\\Code\\MCPlugin\\JulyLibrary\\target\\JulyLibrary-2.5.0.jar -DgroupId=com.github.julyss2019.bukkit.plugins -DartifactId=JulyLibrary -Dversion=2.5.0 -Dpackaging=jar","link":"/2021/08/20/%E5%BC%80%E5%8F%91%E5%8D%A1%E7%89%87%E7%9B%92/maven/"},{"title":"数据库建立","text":"设置自动当前时间时间戳 为timestamp设置DEFAULT CURRENT_TIMESTAMP","link":"/2021/12/02/%E5%BC%80%E5%8F%91%E5%8D%A1%E7%89%87%E7%9B%92/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BB%BA%E7%AB%8B/"},{"title":"MacOS全局可执行文件","text":"sudo vim /usr/local/bin/command /usr/local/bin/ 下创建的文件默认在path中必须使用sudo 12#!/bin/bashdo something sudo chmod +x /usr/local/bin/command 即可全局使用 command","link":"/2021/11/30/%E5%BC%80%E5%8F%91%E5%8D%A1%E7%89%87%E7%9B%92/MacOS%E5%85%A8%E5%B1%80%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6/"},{"title":"Git","text":"Git 学习笔记soto 基础操作创建一个文件夹(bash here) 1234mkdir learngitcd learngitpwdgit init 上传&amp;提交123git add xxxgit rm xxx //remove local file firstgit commit -m &quot;some logs&quot; 版本控制12345git statusgit diff xxxgit loggit refloggit reset --hard HEAD~1 理论上的模型分清楚 工作区 暂存区 版本库 三者的关系 其他操作撤销12git checkout --&lt;file&gt; //丢弃工作区git reset HEAD &lt;file&gt; //丢弃暂存区后，回到仅仅是工作区有问题的情况 GitHub仓库同步123456git remote add origin git@github.com:acsoto/learngit.gitgit push -u origin master //Firstgit push origin master //Aftergit pushgit pullgit clone xxxxx 分支操作(encouraged) 123456git branch //check branchgit switch -c xxx //create and switchgit switch xxx //switchgit merge xxx //merge to mastergit branch -d xxx //removegit merge --no-ff -m &quot;xxx&quot; dev //禁用 Fast forward模式合并 储存分支123456git stashgit stash listgit stash applygit stash dropgit cherry-pick &lt;commit&gt; //把提交复制到当前分支git rebase //分支整合为直线 标签操作标签与commit挂钩 12345git tag xxx //默认HEADgit taggit show xxxgit tag -d xxxgit push origin xxx/--tags //推送某标签或全部标签","link":"/2020/11/03/%E5%BC%80%E5%8F%91%E5%8D%A1%E7%89%87%E7%9B%92/Git/"}],"tags":[{"name":"AtTackCraft","slug":"AtTackCraft","link":"/tags/AtTackCraft/"},{"name":"BUAA","slug":"BUAA","link":"/tags/BUAA/"},{"name":"编译","slug":"编译","link":"/tags/%E7%BC%96%E8%AF%91/"},{"name":"项目","slug":"项目","link":"/tags/%E9%A1%B9%E7%9B%AE/"},{"name":"开发","slug":"开发","link":"/tags/%E5%BC%80%E5%8F%91/"},{"name":"Swift","slug":"Swift","link":"/tags/Swift/"},{"name":"随想","slug":"随想","link":"/tags/%E9%9A%8F%E6%83%B3/"},{"name":"推歌","slug":"推歌","link":"/tags/%E6%8E%A8%E6%AD%8C/"},{"name":"吐槽","slug":"吐槽","link":"/tags/%E5%90%90%E6%A7%BD/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"面向对象","slug":"面向对象","link":"/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"},{"name":"MySQL","slug":"MySQL","link":"/tags/MySQL/"},{"name":"电影","slug":"电影","link":"/tags/%E7%94%B5%E5%BD%B1/"},{"name":"古典音乐","slug":"古典音乐","link":"/tags/%E5%8F%A4%E5%85%B8%E9%9F%B3%E4%B9%90/"},{"name":"C++","slug":"C","link":"/tags/C/"},{"name":"博雅","slug":"博雅","link":"/tags/%E5%8D%9A%E9%9B%85/"},{"name":"支教","slug":"支教","link":"/tags/%E6%94%AF%E6%95%99/"},{"name":"感想","slug":"感想","link":"/tags/%E6%84%9F%E6%83%B3/"},{"name":"MacOS","slug":"MacOS","link":"/tags/MacOS/"},{"name":"Shell","slug":"Shell","link":"/tags/Shell/"}],"categories":[]}